

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 31 15:29:45 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=1
    64                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1,group=1
    68                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Version 2.40
    77                           ; Generated 17/11/2021 GMT
    78                           ; 
    79                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4580 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000FE0                     bsr             equ	4064
   112   000FE9                     fsr0            equ	4073
   113   000FEA                     fsr0h           equ	4074
   114   000FE9                     fsr0l           equ	4073
   115   000FE1                     fsr1            equ	4065
   116   000FE2                     fsr1h           equ	4066
   117   000FE1                     fsr1l           equ	4065
   118   000FD9                     fsr2            equ	4057
   119   000FDA                     fsr2h           equ	4058
   120   000FD9                     fsr2l           equ	4057
   121   000FEF                     indf0           equ	4079
   122   000FE7                     indf1           equ	4071
   123   000FDF                     indf2           equ	4063
   124   000FF2                     intcon          equ	4082
   125   000000                     nvmcon          equ	0
   126   000FF9                     pcl             equ	4089
   127   000FFA                     pclath          equ	4090
   128   000FFB                     pclatu          equ	4091
   129   000FEB                     plusw0          equ	4075
   130   000FE3                     plusw1          equ	4067
   131   000FDB                     plusw2          equ	4059
   132   000FED                     postdec0        equ	4077
   133   000FE5                     postdec1        equ	4069
   134   000FDD                     postdec2        equ	4061
   135   000FEE                     postinc0        equ	4078
   136   000FE6                     postinc1        equ	4070
   137   000FDE                     postinc2        equ	4062
   138   000FEC                     preinc0         equ	4076
   139   000FE4                     preinc1         equ	4068
   140   000FDC                     preinc2         equ	4060
   141   000FF3                     prod            equ	4083
   142   000FF4                     prodh           equ	4084
   143   000FF3                     prodl           equ	4083
   144   000FD8                     status          equ	4056
   145   000FF5                     tablat          equ	4085
   146   000FF6                     tblptr          equ	4086
   147   000FF7                     tblptrh         equ	4087
   148   000FF6                     tblptrl         equ	4086
   149   000FF8                     tblptru         equ	4088
   150   000FFD                     tosl            equ	4093
   151   000FE8                     wreg            equ	4072
   152   000D60                     RXF6SIDH        equ	3424	;# 
   153   000D61                     RXF6SIDL        equ	3425	;# 
   154   000D62                     RXF6EIDH        equ	3426	;# 
   155   000D63                     RXF6EIDL        equ	3427	;# 
   156   000D64                     RXF7SIDH        equ	3428	;# 
   157   000D65                     RXF7SIDL        equ	3429	;# 
   158   000D66                     RXF7EIDH        equ	3430	;# 
   159   000D67                     RXF7EIDL        equ	3431	;# 
   160   000D68                     RXF8SIDH        equ	3432	;# 
   161   000D69                     RXF8SIDL        equ	3433	;# 
   162   000D6A                     RXF8EIDH        equ	3434	;# 
   163   000D6B                     RXF8EIDL        equ	3435	;# 
   164   000D70                     RXF9SIDH        equ	3440	;# 
   165   000D71                     RXF9SIDL        equ	3441	;# 
   166   000D72                     RXF9EIDH        equ	3442	;# 
   167   000D73                     RXF9EIDL        equ	3443	;# 
   168   000D74                     RXF10SIDH       equ	3444	;# 
   169   000D75                     RXF10SIDL       equ	3445	;# 
   170   000D76                     RXF10EIDH       equ	3446	;# 
   171   000D77                     RXF10EIDL       equ	3447	;# 
   172   000D78                     RXF11SIDH       equ	3448	;# 
   173   000D79                     RXF11SIDL       equ	3449	;# 
   174   000D7A                     RXF11EIDH       equ	3450	;# 
   175   000D7B                     RXF11EIDL       equ	3451	;# 
   176   000D80                     RXF12SIDH       equ	3456	;# 
   177   000D81                     RXF12SIDL       equ	3457	;# 
   178   000D82                     RXF12EIDH       equ	3458	;# 
   179   000D83                     RXF12EIDL       equ	3459	;# 
   180   000D84                     RXF13SIDH       equ	3460	;# 
   181   000D85                     RXF13SIDL       equ	3461	;# 
   182   000D86                     RXF13EIDH       equ	3462	;# 
   183   000D87                     RXF13EIDL       equ	3463	;# 
   184   000D88                     RXF14SIDH       equ	3464	;# 
   185   000D89                     RXF14SIDL       equ	3465	;# 
   186   000D8A                     RXF14EIDH       equ	3466	;# 
   187   000D8B                     RXF14EIDL       equ	3467	;# 
   188   000D90                     RXF15SIDH       equ	3472	;# 
   189   000D91                     RXF15SIDL       equ	3473	;# 
   190   000D92                     RXF15EIDH       equ	3474	;# 
   191   000D93                     RXF15EIDL       equ	3475	;# 
   192   000DD4                     RXFCON0         equ	3540	;# 
   193   000DD5                     RXFCON1         equ	3541	;# 
   194   000DD8                     SDFLC           equ	3544	;# 
   195   000DE0                     RXFBCON0        equ	3552	;# 
   196   000DE1                     RXFBCON1        equ	3553	;# 
   197   000DE2                     RXFBCON2        equ	3554	;# 
   198   000DE3                     RXFBCON3        equ	3555	;# 
   199   000DE4                     RXFBCON4        equ	3556	;# 
   200   000DE5                     RXFBCON5        equ	3557	;# 
   201   000DE6                     RXFBCON6        equ	3558	;# 
   202   000DE7                     RXFBCON7        equ	3559	;# 
   203   000DF0                     MSEL0           equ	3568	;# 
   204   000DF1                     MSEL1           equ	3569	;# 
   205   000DF2                     MSEL2           equ	3570	;# 
   206   000DF3                     MSEL3           equ	3571	;# 
   207   000DF8                     BSEL0           equ	3576	;# 
   208   000DFA                     BIE0            equ	3578	;# 
   209   000DFC                     TXBIE           equ	3580	;# 
   210   000E20                     B0CON           equ	3616	;# 
   211   000E21                     B0SIDH          equ	3617	;# 
   212   000E22                     B0SIDL          equ	3618	;# 
   213   000E23                     B0EIDH          equ	3619	;# 
   214   000E24                     B0EIDL          equ	3620	;# 
   215   000E25                     B0DLC           equ	3621	;# 
   216   000E26                     B0D0            equ	3622	;# 
   217   000E27                     B0D1            equ	3623	;# 
   218   000E28                     B0D2            equ	3624	;# 
   219   000E29                     B0D3            equ	3625	;# 
   220   000E2A                     B0D4            equ	3626	;# 
   221   000E2B                     B0D5            equ	3627	;# 
   222   000E2C                     B0D6            equ	3628	;# 
   223   000E2D                     B0D7            equ	3629	;# 
   224   000E2E                     CANSTAT_RO9     equ	3630	;# 
   225   000E2F                     CANCON_RO9      equ	3631	;# 
   226   000E30                     B1CON           equ	3632	;# 
   227   000E31                     B1SIDH          equ	3633	;# 
   228   000E32                     B1SIDL          equ	3634	;# 
   229   000E33                     B1EIDH          equ	3635	;# 
   230   000E34                     B1EIDL          equ	3636	;# 
   231   000E35                     B1DLC           equ	3637	;# 
   232   000E36                     B1D0            equ	3638	;# 
   233   000E37                     B1D1            equ	3639	;# 
   234   000E38                     B1D2            equ	3640	;# 
   235   000E39                     B1D3            equ	3641	;# 
   236   000E3A                     B1D4            equ	3642	;# 
   237   000E3B                     B1D5            equ	3643	;# 
   238   000E3C                     B1D6            equ	3644	;# 
   239   000E3D                     B1D7            equ	3645	;# 
   240   000E3E                     CANSTAT_RO8     equ	3646	;# 
   241   000E3F                     CANCON_RO8      equ	3647	;# 
   242   000E40                     B2CON           equ	3648	;# 
   243   000E41                     B2SIDH          equ	3649	;# 
   244   000E42                     B2SIDL          equ	3650	;# 
   245   000E43                     B2EIDH          equ	3651	;# 
   246   000E44                     B2EIDL          equ	3652	;# 
   247   000E45                     B2DLC           equ	3653	;# 
   248   000E46                     B2D0            equ	3654	;# 
   249   000E47                     B2D1            equ	3655	;# 
   250   000E48                     B2D2            equ	3656	;# 
   251   000E49                     B2D3            equ	3657	;# 
   252   000E4A                     B2D4            equ	3658	;# 
   253   000E4B                     B2D5            equ	3659	;# 
   254   000E4C                     B2D6            equ	3660	;# 
   255   000E4D                     B2D7            equ	3661	;# 
   256   000E4E                     CANSTAT_RO7     equ	3662	;# 
   257   000E4F                     CANCON_RO7      equ	3663	;# 
   258   000E50                     B3CON           equ	3664	;# 
   259   000E51                     B3SIDH          equ	3665	;# 
   260   000E52                     B3SIDL          equ	3666	;# 
   261   000E53                     B3EIDH          equ	3667	;# 
   262   000E54                     B3EIDL          equ	3668	;# 
   263   000E55                     B3DLC           equ	3669	;# 
   264   000E56                     B3D0            equ	3670	;# 
   265   000E57                     B3D1            equ	3671	;# 
   266   000E58                     B3D2            equ	3672	;# 
   267   000E59                     B3D3            equ	3673	;# 
   268   000E5A                     B3D4            equ	3674	;# 
   269   000E5B                     B3D5            equ	3675	;# 
   270   000E5C                     B3D6            equ	3676	;# 
   271   000E5D                     B3D7            equ	3677	;# 
   272   000E5E                     CANSTAT_RO6     equ	3678	;# 
   273   000E5F                     CANCON_RO6      equ	3679	;# 
   274   000E60                     B4CON           equ	3680	;# 
   275   000E61                     B4SIDH          equ	3681	;# 
   276   000E62                     B4SIDL          equ	3682	;# 
   277   000E63                     B4EIDH          equ	3683	;# 
   278   000E64                     B4EIDL          equ	3684	;# 
   279   000E65                     B4DLC           equ	3685	;# 
   280   000E66                     B4D0            equ	3686	;# 
   281   000E67                     B4D1            equ	3687	;# 
   282   000E68                     B4D2            equ	3688	;# 
   283   000E69                     B4D3            equ	3689	;# 
   284   000E6A                     B4D4            equ	3690	;# 
   285   000E6B                     B4D5            equ	3691	;# 
   286   000E6C                     B4D6            equ	3692	;# 
   287   000E6D                     B4D7            equ	3693	;# 
   288   000E6E                     CANSTAT_RO5     equ	3694	;# 
   289   000E6F                     CANCON_RO5      equ	3695	;# 
   290   000E70                     B5CON           equ	3696	;# 
   291   000E71                     B5SIDH          equ	3697	;# 
   292   000E72                     B5SIDL          equ	3698	;# 
   293   000E73                     B5EIDH          equ	3699	;# 
   294   000E74                     B5EIDL          equ	3700	;# 
   295   000E75                     B5DLC           equ	3701	;# 
   296   000E76                     B5D0            equ	3702	;# 
   297   000E77                     B5D1            equ	3703	;# 
   298   000E78                     B5D2            equ	3704	;# 
   299   000E79                     B5D3            equ	3705	;# 
   300   000E7A                     B5D4            equ	3706	;# 
   301   000E7B                     B5D5            equ	3707	;# 
   302   000E7C                     B5D6            equ	3708	;# 
   303   000E7D                     B5D7            equ	3709	;# 
   304   000E7E                     CANSTAT_RO4     equ	3710	;# 
   305   000E7F                     CANCON_RO4      equ	3711	;# 
   306   000F00                     RXF0SIDH        equ	3840	;# 
   307   000F01                     RXF0SIDL        equ	3841	;# 
   308   000F02                     RXF0EIDH        equ	3842	;# 
   309   000F03                     RXF0EIDL        equ	3843	;# 
   310   000F04                     RXF1SIDH        equ	3844	;# 
   311   000F05                     RXF1SIDL        equ	3845	;# 
   312   000F06                     RXF1EIDH        equ	3846	;# 
   313   000F07                     RXF1EIDL        equ	3847	;# 
   314   000F08                     RXF2SIDH        equ	3848	;# 
   315   000F09                     RXF2SIDL        equ	3849	;# 
   316   000F0A                     RXF2EIDH        equ	3850	;# 
   317   000F0B                     RXF2EIDL        equ	3851	;# 
   318   000F0C                     RXF3SIDH        equ	3852	;# 
   319   000F0D                     RXF3SIDL        equ	3853	;# 
   320   000F0E                     RXF3EIDH        equ	3854	;# 
   321   000F0F                     RXF3EIDL        equ	3855	;# 
   322   000F10                     RXF4SIDH        equ	3856	;# 
   323   000F11                     RXF4SIDL        equ	3857	;# 
   324   000F12                     RXF4EIDH        equ	3858	;# 
   325   000F13                     RXF4EIDL        equ	3859	;# 
   326   000F14                     RXF5SIDH        equ	3860	;# 
   327   000F15                     RXF5SIDL        equ	3861	;# 
   328   000F16                     RXF5EIDH        equ	3862	;# 
   329   000F17                     RXF5EIDL        equ	3863	;# 
   330   000F18                     RXM0SIDH        equ	3864	;# 
   331   000F19                     RXM0SIDL        equ	3865	;# 
   332   000F1A                     RXM0EIDH        equ	3866	;# 
   333   000F1B                     RXM0EIDL        equ	3867	;# 
   334   000F1C                     RXM1SIDH        equ	3868	;# 
   335   000F1D                     RXM1SIDL        equ	3869	;# 
   336   000F1E                     RXM1EIDH        equ	3870	;# 
   337   000F1F                     RXM1EIDL        equ	3871	;# 
   338   000F20                     TXB2CON         equ	3872	;# 
   339   000F21                     TXB2SIDH        equ	3873	;# 
   340   000F22                     TXB2SIDL        equ	3874	;# 
   341   000F23                     TXB2EIDH        equ	3875	;# 
   342   000F24                     TXB2EIDL        equ	3876	;# 
   343   000F25                     TXB2DLC         equ	3877	;# 
   344   000F26                     TXB2D0          equ	3878	;# 
   345   000F27                     TXB2D1          equ	3879	;# 
   346   000F28                     TXB2D2          equ	3880	;# 
   347   000F29                     TXB2D3          equ	3881	;# 
   348   000F2A                     TXB2D4          equ	3882	;# 
   349   000F2B                     TXB2D5          equ	3883	;# 
   350   000F2C                     TXB2D6          equ	3884	;# 
   351   000F2D                     TXB2D7          equ	3885	;# 
   352   000F2E                     CANSTAT_RO3     equ	3886	;# 
   353   000F2F                     CANCON_RO3      equ	3887	;# 
   354   000F30                     TXB1CON         equ	3888	;# 
   355   000F31                     TXB1SIDH        equ	3889	;# 
   356   000F32                     TXB1SIDL        equ	3890	;# 
   357   000F33                     TXB1EIDH        equ	3891	;# 
   358   000F34                     TXB1EIDL        equ	3892	;# 
   359   000F35                     TXB1DLC         equ	3893	;# 
   360   000F36                     TXB1D0          equ	3894	;# 
   361   000F37                     TXB1D1          equ	3895	;# 
   362   000F38                     TXB1D2          equ	3896	;# 
   363   000F39                     TXB1D3          equ	3897	;# 
   364   000F3A                     TXB1D4          equ	3898	;# 
   365   000F3B                     TXB1D5          equ	3899	;# 
   366   000F3C                     TXB1D6          equ	3900	;# 
   367   000F3D                     TXB1D7          equ	3901	;# 
   368   000F3E                     CANSTAT_RO2     equ	3902	;# 
   369   000F3F                     CANCON_RO2      equ	3903	;# 
   370   000F40                     TXB0CON         equ	3904	;# 
   371   000F41                     TXB0SIDH        equ	3905	;# 
   372   000F42                     TXB0SIDL        equ	3906	;# 
   373   000F43                     TXB0EIDH        equ	3907	;# 
   374   000F44                     TXB0EIDL        equ	3908	;# 
   375   000F45                     TXB0DLC         equ	3909	;# 
   376   000F46                     TXB0D0          equ	3910	;# 
   377   000F47                     TXB0D1          equ	3911	;# 
   378   000F48                     TXB0D2          equ	3912	;# 
   379   000F49                     TXB0D3          equ	3913	;# 
   380   000F4A                     TXB0D4          equ	3914	;# 
   381   000F4B                     TXB0D5          equ	3915	;# 
   382   000F4C                     TXB0D6          equ	3916	;# 
   383   000F4D                     TXB0D7          equ	3917	;# 
   384   000F4E                     CANSTAT_RO1     equ	3918	;# 
   385   000F4F                     CANCON_RO1      equ	3919	;# 
   386   000F50                     RXB1CON         equ	3920	;# 
   387   000F51                     RXB1SIDH        equ	3921	;# 
   388   000F52                     RXB1SIDL        equ	3922	;# 
   389   000F53                     RXB1EIDH        equ	3923	;# 
   390   000F54                     RXB1EIDL        equ	3924	;# 
   391   000F55                     RXB1DLC         equ	3925	;# 
   392   000F56                     RXB1D0          equ	3926	;# 
   393   000F57                     RXB1D1          equ	3927	;# 
   394   000F58                     RXB1D2          equ	3928	;# 
   395   000F59                     RXB1D3          equ	3929	;# 
   396   000F5A                     RXB1D4          equ	3930	;# 
   397   000F5B                     RXB1D5          equ	3931	;# 
   398   000F5C                     RXB1D6          equ	3932	;# 
   399   000F5D                     RXB1D7          equ	3933	;# 
   400   000F5E                     CANSTAT_RO0     equ	3934	;# 
   401   000F5F                     CANCON_RO0      equ	3935	;# 
   402   000F60                     RXB0CON         equ	3936	;# 
   403   000F61                     RXB0SIDH        equ	3937	;# 
   404   000F62                     RXB0SIDL        equ	3938	;# 
   405   000F63                     RXB0EIDH        equ	3939	;# 
   406   000F64                     RXB0EIDL        equ	3940	;# 
   407   000F65                     RXB0DLC         equ	3941	;# 
   408   000F66                     RXB0D0          equ	3942	;# 
   409   000F67                     RXB0D1          equ	3943	;# 
   410   000F68                     RXB0D2          equ	3944	;# 
   411   000F69                     RXB0D3          equ	3945	;# 
   412   000F6A                     RXB0D4          equ	3946	;# 
   413   000F6B                     RXB0D5          equ	3947	;# 
   414   000F6C                     RXB0D6          equ	3948	;# 
   415   000F6D                     RXB0D7          equ	3949	;# 
   416   000F6E                     CANSTAT         equ	3950	;# 
   417   000F6F                     CANCON          equ	3951	;# 
   418   000F70                     BRGCON1         equ	3952	;# 
   419   000F71                     BRGCON2         equ	3953	;# 
   420   000F72                     BRGCON3         equ	3954	;# 
   421   000F73                     CIOCON          equ	3955	;# 
   422   000F74                     COMSTAT         equ	3956	;# 
   423   000F75                     RXERRCNT        equ	3957	;# 
   424   000F76                     TXERRCNT        equ	3958	;# 
   425   000F77                     ECANCON         equ	3959	;# 
   426   000F80                     PORTA           equ	3968	;# 
   427   000F81                     PORTB           equ	3969	;# 
   428   000F82                     PORTC           equ	3970	;# 
   429   000F83                     PORTD           equ	3971	;# 
   430   000F84                     PORTE           equ	3972	;# 
   431   000F89                     LATA            equ	3977	;# 
   432   000F8A                     LATB            equ	3978	;# 
   433   000F8B                     LATC            equ	3979	;# 
   434   000F8C                     LATD            equ	3980	;# 
   435   000F8D                     LATE            equ	3981	;# 
   436   000F92                     TRISA           equ	3986	;# 
   437   000F92                     DDRA            equ	3986	;# 
   438   000F93                     TRISB           equ	3987	;# 
   439   000F93                     DDRB            equ	3987	;# 
   440   000F94                     TRISC           equ	3988	;# 
   441   000F94                     DDRC            equ	3988	;# 
   442   000F95                     TRISD           equ	3989	;# 
   443   000F95                     DDRD            equ	3989	;# 
   444   000F96                     TRISE           equ	3990	;# 
   445   000F96                     DDRE            equ	3990	;# 
   446   000F9B                     OSCTUNE         equ	3995	;# 
   447   000F9D                     PIE1            equ	3997	;# 
   448   000F9E                     PIR1            equ	3998	;# 
   449   000F9F                     IPR1            equ	3999	;# 
   450   000FA0                     PIE2            equ	4000	;# 
   451   000FA1                     PIR2            equ	4001	;# 
   452   000FA2                     IPR2            equ	4002	;# 
   453   000FA3                     PIE3            equ	4003	;# 
   454   000FA4                     PIR3            equ	4004	;# 
   455   000FA5                     IPR3            equ	4005	;# 
   456   000FA6                     EECON1          equ	4006	;# 
   457   000FA7                     EECON2          equ	4007	;# 
   458   000FA8                     EEDATA          equ	4008	;# 
   459   000FA9                     EEADR           equ	4009	;# 
   460   000FAB                     RCSTA           equ	4011	;# 
   461   000FAB                     RCSTA1          equ	4011	;# 
   462   000FAC                     TXSTA           equ	4012	;# 
   463   000FAC                     TXSTA1          equ	4012	;# 
   464   000FAD                     TXREG           equ	4013	;# 
   465   000FAD                     TXREG1          equ	4013	;# 
   466   000FAE                     RCREG           equ	4014	;# 
   467   000FAE                     RCREG1          equ	4014	;# 
   468   000FAF                     SPBRG           equ	4015	;# 
   469   000FAF                     SPBRG1          equ	4015	;# 
   470   000FB0                     SPBRGH          equ	4016	;# 
   471   000FB1                     T3CON           equ	4017	;# 
   472   000FB2                     TMR3            equ	4018	;# 
   473   000FB2                     TMR3L           equ	4018	;# 
   474   000FB3                     TMR3H           equ	4019	;# 
   475   000FB4                     CMCON           equ	4020	;# 
   476   000FB5                     CVRCON          equ	4021	;# 
   477   000FB6                     ECCP1AS         equ	4022	;# 
   478   000FB7                     ECCP1DEL        equ	4023	;# 
   479   000FB8                     BAUDCON         equ	4024	;# 
   480   000FB8                     BAUDCTL         equ	4024	;# 
   481   000FBA                     ECCP1CON        equ	4026	;# 
   482   000FBB                     ECCPR1          equ	4027	;# 
   483   000FBB                     ECCPR1L         equ	4027	;# 
   484   000FBC                     ECCPR1H         equ	4028	;# 
   485   000FBD                     CCP1CON         equ	4029	;# 
   486   000FBE                     CCPR1           equ	4030	;# 
   487   000FBE                     CCPR1L          equ	4030	;# 
   488   000FBF                     CCPR1H          equ	4031	;# 
   489   000FC0                     ADCON2          equ	4032	;# 
   490   000FC1                     ADCON1          equ	4033	;# 
   491   000FC2                     ADCON0          equ	4034	;# 
   492   000FC3                     ADRES           equ	4035	;# 
   493   000FC3                     ADRESL          equ	4035	;# 
   494   000FC4                     ADRESH          equ	4036	;# 
   495   000FC5                     SSPCON2         equ	4037	;# 
   496   000FC6                     SSPCON1         equ	4038	;# 
   497   000FC7                     SSPSTAT         equ	4039	;# 
   498   000FC8                     SSPADD          equ	4040	;# 
   499   000FC9                     SSPBUF          equ	4041	;# 
   500   000FCA                     T2CON           equ	4042	;# 
   501   000FCB                     PR2             equ	4043	;# 
   502   000FCB                     MEMCON          equ	4043	;# 
   503   000FCC                     TMR2            equ	4044	;# 
   504   000FCD                     T1CON           equ	4045	;# 
   505   000FCE                     TMR1            equ	4046	;# 
   506   000FCE                     TMR1L           equ	4046	;# 
   507   000FCF                     TMR1H           equ	4047	;# 
   508   000FD0                     RCON            equ	4048	;# 
   509   000FD1                     WDTCON          equ	4049	;# 
   510   000FD2                     HLVDCON         equ	4050	;# 
   511   000FD2                     LVDCON          equ	4050	;# 
   512   000FD3                     OSCCON          equ	4051	;# 
   513   000FD5                     T0CON           equ	4053	;# 
   514   000FD6                     TMR0            equ	4054	;# 
   515   000FD6                     TMR0L           equ	4054	;# 
   516   000FD7                     TMR0H           equ	4055	;# 
   517   000FD8                     STATUS          equ	4056	;# 
   518   000FD9                     FSR2            equ	4057	;# 
   519   000FD9                     FSR2L           equ	4057	;# 
   520   000FDA                     FSR2H           equ	4058	;# 
   521   000FDB                     PLUSW2          equ	4059	;# 
   522   000FDC                     PREINC2         equ	4060	;# 
   523   000FDD                     POSTDEC2        equ	4061	;# 
   524   000FDE                     POSTINC2        equ	4062	;# 
   525   000FDF                     INDF2           equ	4063	;# 
   526   000FE0                     BSR             equ	4064	;# 
   527   000FE1                     FSR1            equ	4065	;# 
   528   000FE1                     FSR1L           equ	4065	;# 
   529   000FE2                     FSR1H           equ	4066	;# 
   530   000FE3                     PLUSW1          equ	4067	;# 
   531   000FE4                     PREINC1         equ	4068	;# 
   532   000FE5                     POSTDEC1        equ	4069	;# 
   533   000FE6                     POSTINC1        equ	4070	;# 
   534   000FE7                     INDF1           equ	4071	;# 
   535   000FE8                     WREG            equ	4072	;# 
   536   000FE9                     FSR0            equ	4073	;# 
   537   000FE9                     FSR0L           equ	4073	;# 
   538   000FEA                     FSR0H           equ	4074	;# 
   539   000FEB                     PLUSW0          equ	4075	;# 
   540   000FEC                     PREINC0         equ	4076	;# 
   541   000FED                     POSTDEC0        equ	4077	;# 
   542   000FEE                     POSTINC0        equ	4078	;# 
   543   000FEF                     INDF0           equ	4079	;# 
   544   000FF0                     INTCON3         equ	4080	;# 
   545   000FF1                     INTCON2         equ	4081	;# 
   546   000FF2                     INTCON          equ	4082	;# 
   547   000FF3                     PROD            equ	4083	;# 
   548   000FF3                     PRODL           equ	4083	;# 
   549   000FF4                     PRODH           equ	4084	;# 
   550   000FF5                     TABLAT          equ	4085	;# 
   551   000FF6                     TBLPTR          equ	4086	;# 
   552   000FF6                     TBLPTRL         equ	4086	;# 
   553   000FF7                     TBLPTRH         equ	4087	;# 
   554   000FF8                     TBLPTRU         equ	4088	;# 
   555   000FF9                     PCLAT           equ	4089	;# 
   556   000FF9                     PC              equ	4089	;# 
   557   000FF9                     PCL             equ	4089	;# 
   558   000FFA                     PCLATH          equ	4090	;# 
   559   000FFB                     PCLATU          equ	4091	;# 
   560   000FFC                     STKPTR          equ	4092	;# 
   561   000FFD                     TOS             equ	4093	;# 
   562   000FFD                     TOSL            equ	4093	;# 
   563   000FFE                     TOSH            equ	4094	;# 
   564   000FFF                     TOSU            equ	4095	;# 
   565   000D60                     RXF6SIDH        equ	3424	;# 
   566   000D61                     RXF6SIDL        equ	3425	;# 
   567   000D62                     RXF6EIDH        equ	3426	;# 
   568   000D63                     RXF6EIDL        equ	3427	;# 
   569   000D64                     RXF7SIDH        equ	3428	;# 
   570   000D65                     RXF7SIDL        equ	3429	;# 
   571   000D66                     RXF7EIDH        equ	3430	;# 
   572   000D67                     RXF7EIDL        equ	3431	;# 
   573   000D68                     RXF8SIDH        equ	3432	;# 
   574   000D69                     RXF8SIDL        equ	3433	;# 
   575   000D6A                     RXF8EIDH        equ	3434	;# 
   576   000D6B                     RXF8EIDL        equ	3435	;# 
   577   000D70                     RXF9SIDH        equ	3440	;# 
   578   000D71                     RXF9SIDL        equ	3441	;# 
   579   000D72                     RXF9EIDH        equ	3442	;# 
   580   000D73                     RXF9EIDL        equ	3443	;# 
   581   000D74                     RXF10SIDH       equ	3444	;# 
   582   000D75                     RXF10SIDL       equ	3445	;# 
   583   000D76                     RXF10EIDH       equ	3446	;# 
   584   000D77                     RXF10EIDL       equ	3447	;# 
   585   000D78                     RXF11SIDH       equ	3448	;# 
   586   000D79                     RXF11SIDL       equ	3449	;# 
   587   000D7A                     RXF11EIDH       equ	3450	;# 
   588   000D7B                     RXF11EIDL       equ	3451	;# 
   589   000D80                     RXF12SIDH       equ	3456	;# 
   590   000D81                     RXF12SIDL       equ	3457	;# 
   591   000D82                     RXF12EIDH       equ	3458	;# 
   592   000D83                     RXF12EIDL       equ	3459	;# 
   593   000D84                     RXF13SIDH       equ	3460	;# 
   594   000D85                     RXF13SIDL       equ	3461	;# 
   595   000D86                     RXF13EIDH       equ	3462	;# 
   596   000D87                     RXF13EIDL       equ	3463	;# 
   597   000D88                     RXF14SIDH       equ	3464	;# 
   598   000D89                     RXF14SIDL       equ	3465	;# 
   599   000D8A                     RXF14EIDH       equ	3466	;# 
   600   000D8B                     RXF14EIDL       equ	3467	;# 
   601   000D90                     RXF15SIDH       equ	3472	;# 
   602   000D91                     RXF15SIDL       equ	3473	;# 
   603   000D92                     RXF15EIDH       equ	3474	;# 
   604   000D93                     RXF15EIDL       equ	3475	;# 
   605   000DD4                     RXFCON0         equ	3540	;# 
   606   000DD5                     RXFCON1         equ	3541	;# 
   607   000DD8                     SDFLC           equ	3544	;# 
   608   000DE0                     RXFBCON0        equ	3552	;# 
   609   000DE1                     RXFBCON1        equ	3553	;# 
   610   000DE2                     RXFBCON2        equ	3554	;# 
   611   000DE3                     RXFBCON3        equ	3555	;# 
   612   000DE4                     RXFBCON4        equ	3556	;# 
   613   000DE5                     RXFBCON5        equ	3557	;# 
   614   000DE6                     RXFBCON6        equ	3558	;# 
   615   000DE7                     RXFBCON7        equ	3559	;# 
   616   000DF0                     MSEL0           equ	3568	;# 
   617   000DF1                     MSEL1           equ	3569	;# 
   618   000DF2                     MSEL2           equ	3570	;# 
   619   000DF3                     MSEL3           equ	3571	;# 
   620   000DF8                     BSEL0           equ	3576	;# 
   621   000DFA                     BIE0            equ	3578	;# 
   622   000DFC                     TXBIE           equ	3580	;# 
   623   000E20                     B0CON           equ	3616	;# 
   624   000E21                     B0SIDH          equ	3617	;# 
   625   000E22                     B0SIDL          equ	3618	;# 
   626   000E23                     B0EIDH          equ	3619	;# 
   627   000E24                     B0EIDL          equ	3620	;# 
   628   000E25                     B0DLC           equ	3621	;# 
   629   000E26                     B0D0            equ	3622	;# 
   630   000E27                     B0D1            equ	3623	;# 
   631   000E28                     B0D2            equ	3624	;# 
   632   000E29                     B0D3            equ	3625	;# 
   633   000E2A                     B0D4            equ	3626	;# 
   634   000E2B                     B0D5            equ	3627	;# 
   635   000E2C                     B0D6            equ	3628	;# 
   636   000E2D                     B0D7            equ	3629	;# 
   637   000E2E                     CANSTAT_RO9     equ	3630	;# 
   638   000E2F                     CANCON_RO9      equ	3631	;# 
   639   000E30                     B1CON           equ	3632	;# 
   640   000E31                     B1SIDH          equ	3633	;# 
   641   000E32                     B1SIDL          equ	3634	;# 
   642   000E33                     B1EIDH          equ	3635	;# 
   643   000E34                     B1EIDL          equ	3636	;# 
   644   000E35                     B1DLC           equ	3637	;# 
   645   000E36                     B1D0            equ	3638	;# 
   646   000E37                     B1D1            equ	3639	;# 
   647   000E38                     B1D2            equ	3640	;# 
   648   000E39                     B1D3            equ	3641	;# 
   649   000E3A                     B1D4            equ	3642	;# 
   650   000E3B                     B1D5            equ	3643	;# 
   651   000E3C                     B1D6            equ	3644	;# 
   652   000E3D                     B1D7            equ	3645	;# 
   653   000E3E                     CANSTAT_RO8     equ	3646	;# 
   654   000E3F                     CANCON_RO8      equ	3647	;# 
   655   000E40                     B2CON           equ	3648	;# 
   656   000E41                     B2SIDH          equ	3649	;# 
   657   000E42                     B2SIDL          equ	3650	;# 
   658   000E43                     B2EIDH          equ	3651	;# 
   659   000E44                     B2EIDL          equ	3652	;# 
   660   000E45                     B2DLC           equ	3653	;# 
   661   000E46                     B2D0            equ	3654	;# 
   662   000E47                     B2D1            equ	3655	;# 
   663   000E48                     B2D2            equ	3656	;# 
   664   000E49                     B2D3            equ	3657	;# 
   665   000E4A                     B2D4            equ	3658	;# 
   666   000E4B                     B2D5            equ	3659	;# 
   667   000E4C                     B2D6            equ	3660	;# 
   668   000E4D                     B2D7            equ	3661	;# 
   669   000E4E                     CANSTAT_RO7     equ	3662	;# 
   670   000E4F                     CANCON_RO7      equ	3663	;# 
   671   000E50                     B3CON           equ	3664	;# 
   672   000E51                     B3SIDH          equ	3665	;# 
   673   000E52                     B3SIDL          equ	3666	;# 
   674   000E53                     B3EIDH          equ	3667	;# 
   675   000E54                     B3EIDL          equ	3668	;# 
   676   000E55                     B3DLC           equ	3669	;# 
   677   000E56                     B3D0            equ	3670	;# 
   678   000E57                     B3D1            equ	3671	;# 
   679   000E58                     B3D2            equ	3672	;# 
   680   000E59                     B3D3            equ	3673	;# 
   681   000E5A                     B3D4            equ	3674	;# 
   682   000E5B                     B3D5            equ	3675	;# 
   683   000E5C                     B3D6            equ	3676	;# 
   684   000E5D                     B3D7            equ	3677	;# 
   685   000E5E                     CANSTAT_RO6     equ	3678	;# 
   686   000E5F                     CANCON_RO6      equ	3679	;# 
   687   000E60                     B4CON           equ	3680	;# 
   688   000E61                     B4SIDH          equ	3681	;# 
   689   000E62                     B4SIDL          equ	3682	;# 
   690   000E63                     B4EIDH          equ	3683	;# 
   691   000E64                     B4EIDL          equ	3684	;# 
   692   000E65                     B4DLC           equ	3685	;# 
   693   000E66                     B4D0            equ	3686	;# 
   694   000E67                     B4D1            equ	3687	;# 
   695   000E68                     B4D2            equ	3688	;# 
   696   000E69                     B4D3            equ	3689	;# 
   697   000E6A                     B4D4            equ	3690	;# 
   698   000E6B                     B4D5            equ	3691	;# 
   699   000E6C                     B4D6            equ	3692	;# 
   700   000E6D                     B4D7            equ	3693	;# 
   701   000E6E                     CANSTAT_RO5     equ	3694	;# 
   702   000E6F                     CANCON_RO5      equ	3695	;# 
   703   000E70                     B5CON           equ	3696	;# 
   704   000E71                     B5SIDH          equ	3697	;# 
   705   000E72                     B5SIDL          equ	3698	;# 
   706   000E73                     B5EIDH          equ	3699	;# 
   707   000E74                     B5EIDL          equ	3700	;# 
   708   000E75                     B5DLC           equ	3701	;# 
   709   000E76                     B5D0            equ	3702	;# 
   710   000E77                     B5D1            equ	3703	;# 
   711   000E78                     B5D2            equ	3704	;# 
   712   000E79                     B5D3            equ	3705	;# 
   713   000E7A                     B5D4            equ	3706	;# 
   714   000E7B                     B5D5            equ	3707	;# 
   715   000E7C                     B5D6            equ	3708	;# 
   716   000E7D                     B5D7            equ	3709	;# 
   717   000E7E                     CANSTAT_RO4     equ	3710	;# 
   718   000E7F                     CANCON_RO4      equ	3711	;# 
   719   000F00                     RXF0SIDH        equ	3840	;# 
   720   000F01                     RXF0SIDL        equ	3841	;# 
   721   000F02                     RXF0EIDH        equ	3842	;# 
   722   000F03                     RXF0EIDL        equ	3843	;# 
   723   000F04                     RXF1SIDH        equ	3844	;# 
   724   000F05                     RXF1SIDL        equ	3845	;# 
   725   000F06                     RXF1EIDH        equ	3846	;# 
   726   000F07                     RXF1EIDL        equ	3847	;# 
   727   000F08                     RXF2SIDH        equ	3848	;# 
   728   000F09                     RXF2SIDL        equ	3849	;# 
   729   000F0A                     RXF2EIDH        equ	3850	;# 
   730   000F0B                     RXF2EIDL        equ	3851	;# 
   731   000F0C                     RXF3SIDH        equ	3852	;# 
   732   000F0D                     RXF3SIDL        equ	3853	;# 
   733   000F0E                     RXF3EIDH        equ	3854	;# 
   734   000F0F                     RXF3EIDL        equ	3855	;# 
   735   000F10                     RXF4SIDH        equ	3856	;# 
   736   000F11                     RXF4SIDL        equ	3857	;# 
   737   000F12                     RXF4EIDH        equ	3858	;# 
   738   000F13                     RXF4EIDL        equ	3859	;# 
   739   000F14                     RXF5SIDH        equ	3860	;# 
   740   000F15                     RXF5SIDL        equ	3861	;# 
   741   000F16                     RXF5EIDH        equ	3862	;# 
   742   000F17                     RXF5EIDL        equ	3863	;# 
   743   000F18                     RXM0SIDH        equ	3864	;# 
   744   000F19                     RXM0SIDL        equ	3865	;# 
   745   000F1A                     RXM0EIDH        equ	3866	;# 
   746   000F1B                     RXM0EIDL        equ	3867	;# 
   747   000F1C                     RXM1SIDH        equ	3868	;# 
   748   000F1D                     RXM1SIDL        equ	3869	;# 
   749   000F1E                     RXM1EIDH        equ	3870	;# 
   750   000F1F                     RXM1EIDL        equ	3871	;# 
   751   000F20                     TXB2CON         equ	3872	;# 
   752   000F21                     TXB2SIDH        equ	3873	;# 
   753   000F22                     TXB2SIDL        equ	3874	;# 
   754   000F23                     TXB2EIDH        equ	3875	;# 
   755   000F24                     TXB2EIDL        equ	3876	;# 
   756   000F25                     TXB2DLC         equ	3877	;# 
   757   000F26                     TXB2D0          equ	3878	;# 
   758   000F27                     TXB2D1          equ	3879	;# 
   759   000F28                     TXB2D2          equ	3880	;# 
   760   000F29                     TXB2D3          equ	3881	;# 
   761   000F2A                     TXB2D4          equ	3882	;# 
   762   000F2B                     TXB2D5          equ	3883	;# 
   763   000F2C                     TXB2D6          equ	3884	;# 
   764   000F2D                     TXB2D7          equ	3885	;# 
   765   000F2E                     CANSTAT_RO3     equ	3886	;# 
   766   000F2F                     CANCON_RO3      equ	3887	;# 
   767   000F30                     TXB1CON         equ	3888	;# 
   768   000F31                     TXB1SIDH        equ	3889	;# 
   769   000F32                     TXB1SIDL        equ	3890	;# 
   770   000F33                     TXB1EIDH        equ	3891	;# 
   771   000F34                     TXB1EIDL        equ	3892	;# 
   772   000F35                     TXB1DLC         equ	3893	;# 
   773   000F36                     TXB1D0          equ	3894	;# 
   774   000F37                     TXB1D1          equ	3895	;# 
   775   000F38                     TXB1D2          equ	3896	;# 
   776   000F39                     TXB1D3          equ	3897	;# 
   777   000F3A                     TXB1D4          equ	3898	;# 
   778   000F3B                     TXB1D5          equ	3899	;# 
   779   000F3C                     TXB1D6          equ	3900	;# 
   780   000F3D                     TXB1D7          equ	3901	;# 
   781   000F3E                     CANSTAT_RO2     equ	3902	;# 
   782   000F3F                     CANCON_RO2      equ	3903	;# 
   783   000F40                     TXB0CON         equ	3904	;# 
   784   000F41                     TXB0SIDH        equ	3905	;# 
   785   000F42                     TXB0SIDL        equ	3906	;# 
   786   000F43                     TXB0EIDH        equ	3907	;# 
   787   000F44                     TXB0EIDL        equ	3908	;# 
   788   000F45                     TXB0DLC         equ	3909	;# 
   789   000F46                     TXB0D0          equ	3910	;# 
   790   000F47                     TXB0D1          equ	3911	;# 
   791   000F48                     TXB0D2          equ	3912	;# 
   792   000F49                     TXB0D3          equ	3913	;# 
   793   000F4A                     TXB0D4          equ	3914	;# 
   794   000F4B                     TXB0D5          equ	3915	;# 
   795   000F4C                     TXB0D6          equ	3916	;# 
   796   000F4D                     TXB0D7          equ	3917	;# 
   797   000F4E                     CANSTAT_RO1     equ	3918	;# 
   798   000F4F                     CANCON_RO1      equ	3919	;# 
   799   000F50                     RXB1CON         equ	3920	;# 
   800   000F51                     RXB1SIDH        equ	3921	;# 
   801   000F52                     RXB1SIDL        equ	3922	;# 
   802   000F53                     RXB1EIDH        equ	3923	;# 
   803   000F54                     RXB1EIDL        equ	3924	;# 
   804   000F55                     RXB1DLC         equ	3925	;# 
   805   000F56                     RXB1D0          equ	3926	;# 
   806   000F57                     RXB1D1          equ	3927	;# 
   807   000F58                     RXB1D2          equ	3928	;# 
   808   000F59                     RXB1D3          equ	3929	;# 
   809   000F5A                     RXB1D4          equ	3930	;# 
   810   000F5B                     RXB1D5          equ	3931	;# 
   811   000F5C                     RXB1D6          equ	3932	;# 
   812   000F5D                     RXB1D7          equ	3933	;# 
   813   000F5E                     CANSTAT_RO0     equ	3934	;# 
   814   000F5F                     CANCON_RO0      equ	3935	;# 
   815   000F60                     RXB0CON         equ	3936	;# 
   816   000F61                     RXB0SIDH        equ	3937	;# 
   817   000F62                     RXB0SIDL        equ	3938	;# 
   818   000F63                     RXB0EIDH        equ	3939	;# 
   819   000F64                     RXB0EIDL        equ	3940	;# 
   820   000F65                     RXB0DLC         equ	3941	;# 
   821   000F66                     RXB0D0          equ	3942	;# 
   822   000F67                     RXB0D1          equ	3943	;# 
   823   000F68                     RXB0D2          equ	3944	;# 
   824   000F69                     RXB0D3          equ	3945	;# 
   825   000F6A                     RXB0D4          equ	3946	;# 
   826   000F6B                     RXB0D5          equ	3947	;# 
   827   000F6C                     RXB0D6          equ	3948	;# 
   828   000F6D                     RXB0D7          equ	3949	;# 
   829   000F6E                     CANSTAT         equ	3950	;# 
   830   000F6F                     CANCON          equ	3951	;# 
   831   000F70                     BRGCON1         equ	3952	;# 
   832   000F71                     BRGCON2         equ	3953	;# 
   833   000F72                     BRGCON3         equ	3954	;# 
   834   000F73                     CIOCON          equ	3955	;# 
   835   000F74                     COMSTAT         equ	3956	;# 
   836   000F75                     RXERRCNT        equ	3957	;# 
   837   000F76                     TXERRCNT        equ	3958	;# 
   838   000F77                     ECANCON         equ	3959	;# 
   839   000F80                     PORTA           equ	3968	;# 
   840   000F81                     PORTB           equ	3969	;# 
   841   000F82                     PORTC           equ	3970	;# 
   842   000F83                     PORTD           equ	3971	;# 
   843   000F84                     PORTE           equ	3972	;# 
   844   000F89                     LATA            equ	3977	;# 
   845   000F8A                     LATB            equ	3978	;# 
   846   000F8B                     LATC            equ	3979	;# 
   847   000F8C                     LATD            equ	3980	;# 
   848   000F8D                     LATE            equ	3981	;# 
   849   000F92                     TRISA           equ	3986	;# 
   850   000F92                     DDRA            equ	3986	;# 
   851   000F93                     TRISB           equ	3987	;# 
   852   000F93                     DDRB            equ	3987	;# 
   853   000F94                     TRISC           equ	3988	;# 
   854   000F94                     DDRC            equ	3988	;# 
   855   000F95                     TRISD           equ	3989	;# 
   856   000F95                     DDRD            equ	3989	;# 
   857   000F96                     TRISE           equ	3990	;# 
   858   000F96                     DDRE            equ	3990	;# 
   859   000F9B                     OSCTUNE         equ	3995	;# 
   860   000F9D                     PIE1            equ	3997	;# 
   861   000F9E                     PIR1            equ	3998	;# 
   862   000F9F                     IPR1            equ	3999	;# 
   863   000FA0                     PIE2            equ	4000	;# 
   864   000FA1                     PIR2            equ	4001	;# 
   865   000FA2                     IPR2            equ	4002	;# 
   866   000FA3                     PIE3            equ	4003	;# 
   867   000FA4                     PIR3            equ	4004	;# 
   868   000FA5                     IPR3            equ	4005	;# 
   869   000FA6                     EECON1          equ	4006	;# 
   870   000FA7                     EECON2          equ	4007	;# 
   871   000FA8                     EEDATA          equ	4008	;# 
   872   000FA9                     EEADR           equ	4009	;# 
   873   000FAB                     RCSTA           equ	4011	;# 
   874   000FAB                     RCSTA1          equ	4011	;# 
   875   000FAC                     TXSTA           equ	4012	;# 
   876   000FAC                     TXSTA1          equ	4012	;# 
   877   000FAD                     TXREG           equ	4013	;# 
   878   000FAD                     TXREG1          equ	4013	;# 
   879   000FAE                     RCREG           equ	4014	;# 
   880   000FAE                     RCREG1          equ	4014	;# 
   881   000FAF                     SPBRG           equ	4015	;# 
   882   000FAF                     SPBRG1          equ	4015	;# 
   883   000FB0                     SPBRGH          equ	4016	;# 
   884   000FB1                     T3CON           equ	4017	;# 
   885   000FB2                     TMR3            equ	4018	;# 
   886   000FB2                     TMR3L           equ	4018	;# 
   887   000FB3                     TMR3H           equ	4019	;# 
   888   000FB4                     CMCON           equ	4020	;# 
   889   000FB5                     CVRCON          equ	4021	;# 
   890   000FB6                     ECCP1AS         equ	4022	;# 
   891   000FB7                     ECCP1DEL        equ	4023	;# 
   892   000FB8                     BAUDCON         equ	4024	;# 
   893   000FB8                     BAUDCTL         equ	4024	;# 
   894   000FBA                     ECCP1CON        equ	4026	;# 
   895   000FBB                     ECCPR1          equ	4027	;# 
   896   000FBB                     ECCPR1L         equ	4027	;# 
   897   000FBC                     ECCPR1H         equ	4028	;# 
   898   000FBD                     CCP1CON         equ	4029	;# 
   899   000FBE                     CCPR1           equ	4030	;# 
   900   000FBE                     CCPR1L          equ	4030	;# 
   901   000FBF                     CCPR1H          equ	4031	;# 
   902   000FC0                     ADCON2          equ	4032	;# 
   903   000FC1                     ADCON1          equ	4033	;# 
   904   000FC2                     ADCON0          equ	4034	;# 
   905   000FC3                     ADRES           equ	4035	;# 
   906   000FC3                     ADRESL          equ	4035	;# 
   907   000FC4                     ADRESH          equ	4036	;# 
   908   000FC5                     SSPCON2         equ	4037	;# 
   909   000FC6                     SSPCON1         equ	4038	;# 
   910   000FC7                     SSPSTAT         equ	4039	;# 
   911   000FC8                     SSPADD          equ	4040	;# 
   912   000FC9                     SSPBUF          equ	4041	;# 
   913   000FCA                     T2CON           equ	4042	;# 
   914   000FCB                     PR2             equ	4043	;# 
   915   000FCB                     MEMCON          equ	4043	;# 
   916   000FCC                     TMR2            equ	4044	;# 
   917   000FCD                     T1CON           equ	4045	;# 
   918   000FCE                     TMR1            equ	4046	;# 
   919   000FCE                     TMR1L           equ	4046	;# 
   920   000FCF                     TMR1H           equ	4047	;# 
   921   000FD0                     RCON            equ	4048	;# 
   922   000FD1                     WDTCON          equ	4049	;# 
   923   000FD2                     HLVDCON         equ	4050	;# 
   924   000FD2                     LVDCON          equ	4050	;# 
   925   000FD3                     OSCCON          equ	4051	;# 
   926   000FD5                     T0CON           equ	4053	;# 
   927   000FD6                     TMR0            equ	4054	;# 
   928   000FD6                     TMR0L           equ	4054	;# 
   929   000FD7                     TMR0H           equ	4055	;# 
   930   000FD8                     STATUS          equ	4056	;# 
   931   000FD9                     FSR2            equ	4057	;# 
   932   000FD9                     FSR2L           equ	4057	;# 
   933   000FDA                     FSR2H           equ	4058	;# 
   934   000FDB                     PLUSW2          equ	4059	;# 
   935   000FDC                     PREINC2         equ	4060	;# 
   936   000FDD                     POSTDEC2        equ	4061	;# 
   937   000FDE                     POSTINC2        equ	4062	;# 
   938   000FDF                     INDF2           equ	4063	;# 
   939   000FE0                     BSR             equ	4064	;# 
   940   000FE1                     FSR1            equ	4065	;# 
   941   000FE1                     FSR1L           equ	4065	;# 
   942   000FE2                     FSR1H           equ	4066	;# 
   943   000FE3                     PLUSW1          equ	4067	;# 
   944   000FE4                     PREINC1         equ	4068	;# 
   945   000FE5                     POSTDEC1        equ	4069	;# 
   946   000FE6                     POSTINC1        equ	4070	;# 
   947   000FE7                     INDF1           equ	4071	;# 
   948   000FE8                     WREG            equ	4072	;# 
   949   000FE9                     FSR0            equ	4073	;# 
   950   000FE9                     FSR0L           equ	4073	;# 
   951   000FEA                     FSR0H           equ	4074	;# 
   952   000FEB                     PLUSW0          equ	4075	;# 
   953   000FEC                     PREINC0         equ	4076	;# 
   954   000FED                     POSTDEC0        equ	4077	;# 
   955   000FEE                     POSTINC0        equ	4078	;# 
   956   000FEF                     INDF0           equ	4079	;# 
   957   000FF0                     INTCON3         equ	4080	;# 
   958   000FF1                     INTCON2         equ	4081	;# 
   959   000FF2                     INTCON          equ	4082	;# 
   960   000FF3                     PROD            equ	4083	;# 
   961   000FF3                     PRODL           equ	4083	;# 
   962   000FF4                     PRODH           equ	4084	;# 
   963   000FF5                     TABLAT          equ	4085	;# 
   964   000FF6                     TBLPTR          equ	4086	;# 
   965   000FF6                     TBLPTRL         equ	4086	;# 
   966   000FF7                     TBLPTRH         equ	4087	;# 
   967   000FF8                     TBLPTRU         equ	4088	;# 
   968   000FF9                     PCLAT           equ	4089	;# 
   969   000FF9                     PC              equ	4089	;# 
   970   000FF9                     PCL             equ	4089	;# 
   971   000FFA                     PCLATH          equ	4090	;# 
   972   000FFB                     PCLATU          equ	4091	;# 
   973   000FFC                     STKPTR          equ	4092	;# 
   974   000FFD                     TOS             equ	4093	;# 
   975   000FFD                     TOSL            equ	4093	;# 
   976   000FFE                     TOSH            equ	4094	;# 
   977   000FFF                     TOSU            equ	4095	;# 
   978   000D60                     RXF6SIDH        equ	3424	;# 
   979   000D61                     RXF6SIDL        equ	3425	;# 
   980   000D62                     RXF6EIDH        equ	3426	;# 
   981   000D63                     RXF6EIDL        equ	3427	;# 
   982   000D64                     RXF7SIDH        equ	3428	;# 
   983   000D65                     RXF7SIDL        equ	3429	;# 
   984   000D66                     RXF7EIDH        equ	3430	;# 
   985   000D67                     RXF7EIDL        equ	3431	;# 
   986   000D68                     RXF8SIDH        equ	3432	;# 
   987   000D69                     RXF8SIDL        equ	3433	;# 
   988   000D6A                     RXF8EIDH        equ	3434	;# 
   989   000D6B                     RXF8EIDL        equ	3435	;# 
   990   000D70                     RXF9SIDH        equ	3440	;# 
   991   000D71                     RXF9SIDL        equ	3441	;# 
   992   000D72                     RXF9EIDH        equ	3442	;# 
   993   000D73                     RXF9EIDL        equ	3443	;# 
   994   000D74                     RXF10SIDH       equ	3444	;# 
   995   000D75                     RXF10SIDL       equ	3445	;# 
   996   000D76                     RXF10EIDH       equ	3446	;# 
   997   000D77                     RXF10EIDL       equ	3447	;# 
   998   000D78                     RXF11SIDH       equ	3448	;# 
   999   000D79                     RXF11SIDL       equ	3449	;# 
  1000   000D7A                     RXF11EIDH       equ	3450	;# 
  1001   000D7B                     RXF11EIDL       equ	3451	;# 
  1002   000D80                     RXF12SIDH       equ	3456	;# 
  1003   000D81                     RXF12SIDL       equ	3457	;# 
  1004   000D82                     RXF12EIDH       equ	3458	;# 
  1005   000D83                     RXF12EIDL       equ	3459	;# 
  1006   000D84                     RXF13SIDH       equ	3460	;# 
  1007   000D85                     RXF13SIDL       equ	3461	;# 
  1008   000D86                     RXF13EIDH       equ	3462	;# 
  1009   000D87                     RXF13EIDL       equ	3463	;# 
  1010   000D88                     RXF14SIDH       equ	3464	;# 
  1011   000D89                     RXF14SIDL       equ	3465	;# 
  1012   000D8A                     RXF14EIDH       equ	3466	;# 
  1013   000D8B                     RXF14EIDL       equ	3467	;# 
  1014   000D90                     RXF15SIDH       equ	3472	;# 
  1015   000D91                     RXF15SIDL       equ	3473	;# 
  1016   000D92                     RXF15EIDH       equ	3474	;# 
  1017   000D93                     RXF15EIDL       equ	3475	;# 
  1018   000DD4                     RXFCON0         equ	3540	;# 
  1019   000DD5                     RXFCON1         equ	3541	;# 
  1020   000DD8                     SDFLC           equ	3544	;# 
  1021   000DE0                     RXFBCON0        equ	3552	;# 
  1022   000DE1                     RXFBCON1        equ	3553	;# 
  1023   000DE2                     RXFBCON2        equ	3554	;# 
  1024   000DE3                     RXFBCON3        equ	3555	;# 
  1025   000DE4                     RXFBCON4        equ	3556	;# 
  1026   000DE5                     RXFBCON5        equ	3557	;# 
  1027   000DE6                     RXFBCON6        equ	3558	;# 
  1028   000DE7                     RXFBCON7        equ	3559	;# 
  1029   000DF0                     MSEL0           equ	3568	;# 
  1030   000DF1                     MSEL1           equ	3569	;# 
  1031   000DF2                     MSEL2           equ	3570	;# 
  1032   000DF3                     MSEL3           equ	3571	;# 
  1033   000DF8                     BSEL0           equ	3576	;# 
  1034   000DFA                     BIE0            equ	3578	;# 
  1035   000DFC                     TXBIE           equ	3580	;# 
  1036   000E20                     B0CON           equ	3616	;# 
  1037   000E21                     B0SIDH          equ	3617	;# 
  1038   000E22                     B0SIDL          equ	3618	;# 
  1039   000E23                     B0EIDH          equ	3619	;# 
  1040   000E24                     B0EIDL          equ	3620	;# 
  1041   000E25                     B0DLC           equ	3621	;# 
  1042   000E26                     B0D0            equ	3622	;# 
  1043   000E27                     B0D1            equ	3623	;# 
  1044   000E28                     B0D2            equ	3624	;# 
  1045   000E29                     B0D3            equ	3625	;# 
  1046   000E2A                     B0D4            equ	3626	;# 
  1047   000E2B                     B0D5            equ	3627	;# 
  1048   000E2C                     B0D6            equ	3628	;# 
  1049   000E2D                     B0D7            equ	3629	;# 
  1050   000E2E                     CANSTAT_RO9     equ	3630	;# 
  1051   000E2F                     CANCON_RO9      equ	3631	;# 
  1052   000E30                     B1CON           equ	3632	;# 
  1053   000E31                     B1SIDH          equ	3633	;# 
  1054   000E32                     B1SIDL          equ	3634	;# 
  1055   000E33                     B1EIDH          equ	3635	;# 
  1056   000E34                     B1EIDL          equ	3636	;# 
  1057   000E35                     B1DLC           equ	3637	;# 
  1058   000E36                     B1D0            equ	3638	;# 
  1059   000E37                     B1D1            equ	3639	;# 
  1060   000E38                     B1D2            equ	3640	;# 
  1061   000E39                     B1D3            equ	3641	;# 
  1062   000E3A                     B1D4            equ	3642	;# 
  1063   000E3B                     B1D5            equ	3643	;# 
  1064   000E3C                     B1D6            equ	3644	;# 
  1065   000E3D                     B1D7            equ	3645	;# 
  1066   000E3E                     CANSTAT_RO8     equ	3646	;# 
  1067   000E3F                     CANCON_RO8      equ	3647	;# 
  1068   000E40                     B2CON           equ	3648	;# 
  1069   000E41                     B2SIDH          equ	3649	;# 
  1070   000E42                     B2SIDL          equ	3650	;# 
  1071   000E43                     B2EIDH          equ	3651	;# 
  1072   000E44                     B2EIDL          equ	3652	;# 
  1073   000E45                     B2DLC           equ	3653	;# 
  1074   000E46                     B2D0            equ	3654	;# 
  1075   000E47                     B2D1            equ	3655	;# 
  1076   000E48                     B2D2            equ	3656	;# 
  1077   000E49                     B2D3            equ	3657	;# 
  1078   000E4A                     B2D4            equ	3658	;# 
  1079   000E4B                     B2D5            equ	3659	;# 
  1080   000E4C                     B2D6            equ	3660	;# 
  1081   000E4D                     B2D7            equ	3661	;# 
  1082   000E4E                     CANSTAT_RO7     equ	3662	;# 
  1083   000E4F                     CANCON_RO7      equ	3663	;# 
  1084   000E50                     B3CON           equ	3664	;# 
  1085   000E51                     B3SIDH          equ	3665	;# 
  1086   000E52                     B3SIDL          equ	3666	;# 
  1087   000E53                     B3EIDH          equ	3667	;# 
  1088   000E54                     B3EIDL          equ	3668	;# 
  1089   000E55                     B3DLC           equ	3669	;# 
  1090   000E56                     B3D0            equ	3670	;# 
  1091   000E57                     B3D1            equ	3671	;# 
  1092   000E58                     B3D2            equ	3672	;# 
  1093   000E59                     B3D3            equ	3673	;# 
  1094   000E5A                     B3D4            equ	3674	;# 
  1095   000E5B                     B3D5            equ	3675	;# 
  1096   000E5C                     B3D6            equ	3676	;# 
  1097   000E5D                     B3D7            equ	3677	;# 
  1098   000E5E                     CANSTAT_RO6     equ	3678	;# 
  1099   000E5F                     CANCON_RO6      equ	3679	;# 
  1100   000E60                     B4CON           equ	3680	;# 
  1101   000E61                     B4SIDH          equ	3681	;# 
  1102   000E62                     B4SIDL          equ	3682	;# 
  1103   000E63                     B4EIDH          equ	3683	;# 
  1104   000E64                     B4EIDL          equ	3684	;# 
  1105   000E65                     B4DLC           equ	3685	;# 
  1106   000E66                     B4D0            equ	3686	;# 
  1107   000E67                     B4D1            equ	3687	;# 
  1108   000E68                     B4D2            equ	3688	;# 
  1109   000E69                     B4D3            equ	3689	;# 
  1110   000E6A                     B4D4            equ	3690	;# 
  1111   000E6B                     B4D5            equ	3691	;# 
  1112   000E6C                     B4D6            equ	3692	;# 
  1113   000E6D                     B4D7            equ	3693	;# 
  1114   000E6E                     CANSTAT_RO5     equ	3694	;# 
  1115   000E6F                     CANCON_RO5      equ	3695	;# 
  1116   000E70                     B5CON           equ	3696	;# 
  1117   000E71                     B5SIDH          equ	3697	;# 
  1118   000E72                     B5SIDL          equ	3698	;# 
  1119   000E73                     B5EIDH          equ	3699	;# 
  1120   000E74                     B5EIDL          equ	3700	;# 
  1121   000E75                     B5DLC           equ	3701	;# 
  1122   000E76                     B5D0            equ	3702	;# 
  1123   000E77                     B5D1            equ	3703	;# 
  1124   000E78                     B5D2            equ	3704	;# 
  1125   000E79                     B5D3            equ	3705	;# 
  1126   000E7A                     B5D4            equ	3706	;# 
  1127   000E7B                     B5D5            equ	3707	;# 
  1128   000E7C                     B5D6            equ	3708	;# 
  1129   000E7D                     B5D7            equ	3709	;# 
  1130   000E7E                     CANSTAT_RO4     equ	3710	;# 
  1131   000E7F                     CANCON_RO4      equ	3711	;# 
  1132   000F00                     RXF0SIDH        equ	3840	;# 
  1133   000F01                     RXF0SIDL        equ	3841	;# 
  1134   000F02                     RXF0EIDH        equ	3842	;# 
  1135   000F03                     RXF0EIDL        equ	3843	;# 
  1136   000F04                     RXF1SIDH        equ	3844	;# 
  1137   000F05                     RXF1SIDL        equ	3845	;# 
  1138   000F06                     RXF1EIDH        equ	3846	;# 
  1139   000F07                     RXF1EIDL        equ	3847	;# 
  1140   000F08                     RXF2SIDH        equ	3848	;# 
  1141   000F09                     RXF2SIDL        equ	3849	;# 
  1142   000F0A                     RXF2EIDH        equ	3850	;# 
  1143   000F0B                     RXF2EIDL        equ	3851	;# 
  1144   000F0C                     RXF3SIDH        equ	3852	;# 
  1145   000F0D                     RXF3SIDL        equ	3853	;# 
  1146   000F0E                     RXF3EIDH        equ	3854	;# 
  1147   000F0F                     RXF3EIDL        equ	3855	;# 
  1148   000F10                     RXF4SIDH        equ	3856	;# 
  1149   000F11                     RXF4SIDL        equ	3857	;# 
  1150   000F12                     RXF4EIDH        equ	3858	;# 
  1151   000F13                     RXF4EIDL        equ	3859	;# 
  1152   000F14                     RXF5SIDH        equ	3860	;# 
  1153   000F15                     RXF5SIDL        equ	3861	;# 
  1154   000F16                     RXF5EIDH        equ	3862	;# 
  1155   000F17                     RXF5EIDL        equ	3863	;# 
  1156   000F18                     RXM0SIDH        equ	3864	;# 
  1157   000F19                     RXM0SIDL        equ	3865	;# 
  1158   000F1A                     RXM0EIDH        equ	3866	;# 
  1159   000F1B                     RXM0EIDL        equ	3867	;# 
  1160   000F1C                     RXM1SIDH        equ	3868	;# 
  1161   000F1D                     RXM1SIDL        equ	3869	;# 
  1162   000F1E                     RXM1EIDH        equ	3870	;# 
  1163   000F1F                     RXM1EIDL        equ	3871	;# 
  1164   000F20                     TXB2CON         equ	3872	;# 
  1165   000F21                     TXB2SIDH        equ	3873	;# 
  1166   000F22                     TXB2SIDL        equ	3874	;# 
  1167   000F23                     TXB2EIDH        equ	3875	;# 
  1168   000F24                     TXB2EIDL        equ	3876	;# 
  1169   000F25                     TXB2DLC         equ	3877	;# 
  1170   000F26                     TXB2D0          equ	3878	;# 
  1171   000F27                     TXB2D1          equ	3879	;# 
  1172   000F28                     TXB2D2          equ	3880	;# 
  1173   000F29                     TXB2D3          equ	3881	;# 
  1174   000F2A                     TXB2D4          equ	3882	;# 
  1175   000F2B                     TXB2D5          equ	3883	;# 
  1176   000F2C                     TXB2D6          equ	3884	;# 
  1177   000F2D                     TXB2D7          equ	3885	;# 
  1178   000F2E                     CANSTAT_RO3     equ	3886	;# 
  1179   000F2F                     CANCON_RO3      equ	3887	;# 
  1180   000F30                     TXB1CON         equ	3888	;# 
  1181   000F31                     TXB1SIDH        equ	3889	;# 
  1182   000F32                     TXB1SIDL        equ	3890	;# 
  1183   000F33                     TXB1EIDH        equ	3891	;# 
  1184   000F34                     TXB1EIDL        equ	3892	;# 
  1185   000F35                     TXB1DLC         equ	3893	;# 
  1186   000F36                     TXB1D0          equ	3894	;# 
  1187   000F37                     TXB1D1          equ	3895	;# 
  1188   000F38                     TXB1D2          equ	3896	;# 
  1189   000F39                     TXB1D3          equ	3897	;# 
  1190   000F3A                     TXB1D4          equ	3898	;# 
  1191   000F3B                     TXB1D5          equ	3899	;# 
  1192   000F3C                     TXB1D6          equ	3900	;# 
  1193   000F3D                     TXB1D7          equ	3901	;# 
  1194   000F3E                     CANSTAT_RO2     equ	3902	;# 
  1195   000F3F                     CANCON_RO2      equ	3903	;# 
  1196   000F40                     TXB0CON         equ	3904	;# 
  1197   000F41                     TXB0SIDH        equ	3905	;# 
  1198   000F42                     TXB0SIDL        equ	3906	;# 
  1199   000F43                     TXB0EIDH        equ	3907	;# 
  1200   000F44                     TXB0EIDL        equ	3908	;# 
  1201   000F45                     TXB0DLC         equ	3909	;# 
  1202   000F46                     TXB0D0          equ	3910	;# 
  1203   000F47                     TXB0D1          equ	3911	;# 
  1204   000F48                     TXB0D2          equ	3912	;# 
  1205   000F49                     TXB0D3          equ	3913	;# 
  1206   000F4A                     TXB0D4          equ	3914	;# 
  1207   000F4B                     TXB0D5          equ	3915	;# 
  1208   000F4C                     TXB0D6          equ	3916	;# 
  1209   000F4D                     TXB0D7          equ	3917	;# 
  1210   000F4E                     CANSTAT_RO1     equ	3918	;# 
  1211   000F4F                     CANCON_RO1      equ	3919	;# 
  1212   000F50                     RXB1CON         equ	3920	;# 
  1213   000F51                     RXB1SIDH        equ	3921	;# 
  1214   000F52                     RXB1SIDL        equ	3922	;# 
  1215   000F53                     RXB1EIDH        equ	3923	;# 
  1216   000F54                     RXB1EIDL        equ	3924	;# 
  1217   000F55                     RXB1DLC         equ	3925	;# 
  1218   000F56                     RXB1D0          equ	3926	;# 
  1219   000F57                     RXB1D1          equ	3927	;# 
  1220   000F58                     RXB1D2          equ	3928	;# 
  1221   000F59                     RXB1D3          equ	3929	;# 
  1222   000F5A                     RXB1D4          equ	3930	;# 
  1223   000F5B                     RXB1D5          equ	3931	;# 
  1224   000F5C                     RXB1D6          equ	3932	;# 
  1225   000F5D                     RXB1D7          equ	3933	;# 
  1226   000F5E                     CANSTAT_RO0     equ	3934	;# 
  1227   000F5F                     CANCON_RO0      equ	3935	;# 
  1228   000F60                     RXB0CON         equ	3936	;# 
  1229   000F61                     RXB0SIDH        equ	3937	;# 
  1230   000F62                     RXB0SIDL        equ	3938	;# 
  1231   000F63                     RXB0EIDH        equ	3939	;# 
  1232   000F64                     RXB0EIDL        equ	3940	;# 
  1233   000F65                     RXB0DLC         equ	3941	;# 
  1234   000F66                     RXB0D0          equ	3942	;# 
  1235   000F67                     RXB0D1          equ	3943	;# 
  1236   000F68                     RXB0D2          equ	3944	;# 
  1237   000F69                     RXB0D3          equ	3945	;# 
  1238   000F6A                     RXB0D4          equ	3946	;# 
  1239   000F6B                     RXB0D5          equ	3947	;# 
  1240   000F6C                     RXB0D6          equ	3948	;# 
  1241   000F6D                     RXB0D7          equ	3949	;# 
  1242   000F6E                     CANSTAT         equ	3950	;# 
  1243   000F6F                     CANCON          equ	3951	;# 
  1244   000F70                     BRGCON1         equ	3952	;# 
  1245   000F71                     BRGCON2         equ	3953	;# 
  1246   000F72                     BRGCON3         equ	3954	;# 
  1247   000F73                     CIOCON          equ	3955	;# 
  1248   000F74                     COMSTAT         equ	3956	;# 
  1249   000F75                     RXERRCNT        equ	3957	;# 
  1250   000F76                     TXERRCNT        equ	3958	;# 
  1251   000F77                     ECANCON         equ	3959	;# 
  1252   000F80                     PORTA           equ	3968	;# 
  1253   000F81                     PORTB           equ	3969	;# 
  1254   000F82                     PORTC           equ	3970	;# 
  1255   000F83                     PORTD           equ	3971	;# 
  1256   000F84                     PORTE           equ	3972	;# 
  1257   000F89                     LATA            equ	3977	;# 
  1258   000F8A                     LATB            equ	3978	;# 
  1259   000F8B                     LATC            equ	3979	;# 
  1260   000F8C                     LATD            equ	3980	;# 
  1261   000F8D                     LATE            equ	3981	;# 
  1262   000F92                     TRISA           equ	3986	;# 
  1263   000F92                     DDRA            equ	3986	;# 
  1264   000F93                     TRISB           equ	3987	;# 
  1265   000F93                     DDRB            equ	3987	;# 
  1266   000F94                     TRISC           equ	3988	;# 
  1267   000F94                     DDRC            equ	3988	;# 
  1268   000F95                     TRISD           equ	3989	;# 
  1269   000F95                     DDRD            equ	3989	;# 
  1270   000F96                     TRISE           equ	3990	;# 
  1271   000F96                     DDRE            equ	3990	;# 
  1272   000F9B                     OSCTUNE         equ	3995	;# 
  1273   000F9D                     PIE1            equ	3997	;# 
  1274   000F9E                     PIR1            equ	3998	;# 
  1275   000F9F                     IPR1            equ	3999	;# 
  1276   000FA0                     PIE2            equ	4000	;# 
  1277   000FA1                     PIR2            equ	4001	;# 
  1278   000FA2                     IPR2            equ	4002	;# 
  1279   000FA3                     PIE3            equ	4003	;# 
  1280   000FA4                     PIR3            equ	4004	;# 
  1281   000FA5                     IPR3            equ	4005	;# 
  1282   000FA6                     EECON1          equ	4006	;# 
  1283   000FA7                     EECON2          equ	4007	;# 
  1284   000FA8                     EEDATA          equ	4008	;# 
  1285   000FA9                     EEADR           equ	4009	;# 
  1286   000FAB                     RCSTA           equ	4011	;# 
  1287   000FAB                     RCSTA1          equ	4011	;# 
  1288   000FAC                     TXSTA           equ	4012	;# 
  1289   000FAC                     TXSTA1          equ	4012	;# 
  1290   000FAD                     TXREG           equ	4013	;# 
  1291   000FAD                     TXREG1          equ	4013	;# 
  1292   000FAE                     RCREG           equ	4014	;# 
  1293   000FAE                     RCREG1          equ	4014	;# 
  1294   000FAF                     SPBRG           equ	4015	;# 
  1295   000FAF                     SPBRG1          equ	4015	;# 
  1296   000FB0                     SPBRGH          equ	4016	;# 
  1297   000FB1                     T3CON           equ	4017	;# 
  1298   000FB2                     TMR3            equ	4018	;# 
  1299   000FB2                     TMR3L           equ	4018	;# 
  1300   000FB3                     TMR3H           equ	4019	;# 
  1301   000FB4                     CMCON           equ	4020	;# 
  1302   000FB5                     CVRCON          equ	4021	;# 
  1303   000FB6                     ECCP1AS         equ	4022	;# 
  1304   000FB7                     ECCP1DEL        equ	4023	;# 
  1305   000FB8                     BAUDCON         equ	4024	;# 
  1306   000FB8                     BAUDCTL         equ	4024	;# 
  1307   000FBA                     ECCP1CON        equ	4026	;# 
  1308   000FBB                     ECCPR1          equ	4027	;# 
  1309   000FBB                     ECCPR1L         equ	4027	;# 
  1310   000FBC                     ECCPR1H         equ	4028	;# 
  1311   000FBD                     CCP1CON         equ	4029	;# 
  1312   000FBE                     CCPR1           equ	4030	;# 
  1313   000FBE                     CCPR1L          equ	4030	;# 
  1314   000FBF                     CCPR1H          equ	4031	;# 
  1315   000FC0                     ADCON2          equ	4032	;# 
  1316   000FC1                     ADCON1          equ	4033	;# 
  1317   000FC2                     ADCON0          equ	4034	;# 
  1318   000FC3                     ADRES           equ	4035	;# 
  1319   000FC3                     ADRESL          equ	4035	;# 
  1320   000FC4                     ADRESH          equ	4036	;# 
  1321   000FC5                     SSPCON2         equ	4037	;# 
  1322   000FC6                     SSPCON1         equ	4038	;# 
  1323   000FC7                     SSPSTAT         equ	4039	;# 
  1324   000FC8                     SSPADD          equ	4040	;# 
  1325   000FC9                     SSPBUF          equ	4041	;# 
  1326   000FCA                     T2CON           equ	4042	;# 
  1327   000FCB                     PR2             equ	4043	;# 
  1328   000FCB                     MEMCON          equ	4043	;# 
  1329   000FCC                     TMR2            equ	4044	;# 
  1330   000FCD                     T1CON           equ	4045	;# 
  1331   000FCE                     TMR1            equ	4046	;# 
  1332   000FCE                     TMR1L           equ	4046	;# 
  1333   000FCF                     TMR1H           equ	4047	;# 
  1334   000FD0                     RCON            equ	4048	;# 
  1335   000FD1                     WDTCON          equ	4049	;# 
  1336   000FD2                     HLVDCON         equ	4050	;# 
  1337   000FD2                     LVDCON          equ	4050	;# 
  1338   000FD3                     OSCCON          equ	4051	;# 
  1339   000FD5                     T0CON           equ	4053	;# 
  1340   000FD6                     TMR0            equ	4054	;# 
  1341   000FD6                     TMR0L           equ	4054	;# 
  1342   000FD7                     TMR0H           equ	4055	;# 
  1343   000FD8                     STATUS          equ	4056	;# 
  1344   000FD9                     FSR2            equ	4057	;# 
  1345   000FD9                     FSR2L           equ	4057	;# 
  1346   000FDA                     FSR2H           equ	4058	;# 
  1347   000FDB                     PLUSW2          equ	4059	;# 
  1348   000FDC                     PREINC2         equ	4060	;# 
  1349   000FDD                     POSTDEC2        equ	4061	;# 
  1350   000FDE                     POSTINC2        equ	4062	;# 
  1351   000FDF                     INDF2           equ	4063	;# 
  1352   000FE0                     BSR             equ	4064	;# 
  1353   000FE1                     FSR1            equ	4065	;# 
  1354   000FE1                     FSR1L           equ	4065	;# 
  1355   000FE2                     FSR1H           equ	4066	;# 
  1356   000FE3                     PLUSW1          equ	4067	;# 
  1357   000FE4                     PREINC1         equ	4068	;# 
  1358   000FE5                     POSTDEC1        equ	4069	;# 
  1359   000FE6                     POSTINC1        equ	4070	;# 
  1360   000FE7                     INDF1           equ	4071	;# 
  1361   000FE8                     WREG            equ	4072	;# 
  1362   000FE9                     FSR0            equ	4073	;# 
  1363   000FE9                     FSR0L           equ	4073	;# 
  1364   000FEA                     FSR0H           equ	4074	;# 
  1365   000FEB                     PLUSW0          equ	4075	;# 
  1366   000FEC                     PREINC0         equ	4076	;# 
  1367   000FED                     POSTDEC0        equ	4077	;# 
  1368   000FEE                     POSTINC0        equ	4078	;# 
  1369   000FEF                     INDF0           equ	4079	;# 
  1370   000FF0                     INTCON3         equ	4080	;# 
  1371   000FF1                     INTCON2         equ	4081	;# 
  1372   000FF2                     INTCON          equ	4082	;# 
  1373   000FF3                     PROD            equ	4083	;# 
  1374   000FF3                     PRODL           equ	4083	;# 
  1375   000FF4                     PRODH           equ	4084	;# 
  1376   000FF5                     TABLAT          equ	4085	;# 
  1377   000FF6                     TBLPTR          equ	4086	;# 
  1378   000FF6                     TBLPTRL         equ	4086	;# 
  1379   000FF7                     TBLPTRH         equ	4087	;# 
  1380   000FF8                     TBLPTRU         equ	4088	;# 
  1381   000FF9                     PCLAT           equ	4089	;# 
  1382   000FF9                     PC              equ	4089	;# 
  1383   000FF9                     PCL             equ	4089	;# 
  1384   000FFA                     PCLATH          equ	4090	;# 
  1385   000FFB                     PCLATU          equ	4091	;# 
  1386   000FFC                     STKPTR          equ	4092	;# 
  1387   000FFD                     TOS             equ	4093	;# 
  1388   000FFD                     TOSL            equ	4093	;# 
  1389   000FFE                     TOSH            equ	4094	;# 
  1390   000FFF                     TOSU            equ	4095	;# 
  1391   000D60                     RXF6SIDH        equ	3424	;# 
  1392   000D61                     RXF6SIDL        equ	3425	;# 
  1393   000D62                     RXF6EIDH        equ	3426	;# 
  1394   000D63                     RXF6EIDL        equ	3427	;# 
  1395   000D64                     RXF7SIDH        equ	3428	;# 
  1396   000D65                     RXF7SIDL        equ	3429	;# 
  1397   000D66                     RXF7EIDH        equ	3430	;# 
  1398   000D67                     RXF7EIDL        equ	3431	;# 
  1399   000D68                     RXF8SIDH        equ	3432	;# 
  1400   000D69                     RXF8SIDL        equ	3433	;# 
  1401   000D6A                     RXF8EIDH        equ	3434	;# 
  1402   000D6B                     RXF8EIDL        equ	3435	;# 
  1403   000D70                     RXF9SIDH        equ	3440	;# 
  1404   000D71                     RXF9SIDL        equ	3441	;# 
  1405   000D72                     RXF9EIDH        equ	3442	;# 
  1406   000D73                     RXF9EIDL        equ	3443	;# 
  1407   000D74                     RXF10SIDH       equ	3444	;# 
  1408   000D75                     RXF10SIDL       equ	3445	;# 
  1409   000D76                     RXF10EIDH       equ	3446	;# 
  1410   000D77                     RXF10EIDL       equ	3447	;# 
  1411   000D78                     RXF11SIDH       equ	3448	;# 
  1412   000D79                     RXF11SIDL       equ	3449	;# 
  1413   000D7A                     RXF11EIDH       equ	3450	;# 
  1414   000D7B                     RXF11EIDL       equ	3451	;# 
  1415   000D80                     RXF12SIDH       equ	3456	;# 
  1416   000D81                     RXF12SIDL       equ	3457	;# 
  1417   000D82                     RXF12EIDH       equ	3458	;# 
  1418   000D83                     RXF12EIDL       equ	3459	;# 
  1419   000D84                     RXF13SIDH       equ	3460	;# 
  1420   000D85                     RXF13SIDL       equ	3461	;# 
  1421   000D86                     RXF13EIDH       equ	3462	;# 
  1422   000D87                     RXF13EIDL       equ	3463	;# 
  1423   000D88                     RXF14SIDH       equ	3464	;# 
  1424   000D89                     RXF14SIDL       equ	3465	;# 
  1425   000D8A                     RXF14EIDH       equ	3466	;# 
  1426   000D8B                     RXF14EIDL       equ	3467	;# 
  1427   000D90                     RXF15SIDH       equ	3472	;# 
  1428   000D91                     RXF15SIDL       equ	3473	;# 
  1429   000D92                     RXF15EIDH       equ	3474	;# 
  1430   000D93                     RXF15EIDL       equ	3475	;# 
  1431   000DD4                     RXFCON0         equ	3540	;# 
  1432   000DD5                     RXFCON1         equ	3541	;# 
  1433   000DD8                     SDFLC           equ	3544	;# 
  1434   000DE0                     RXFBCON0        equ	3552	;# 
  1435   000DE1                     RXFBCON1        equ	3553	;# 
  1436   000DE2                     RXFBCON2        equ	3554	;# 
  1437   000DE3                     RXFBCON3        equ	3555	;# 
  1438   000DE4                     RXFBCON4        equ	3556	;# 
  1439   000DE5                     RXFBCON5        equ	3557	;# 
  1440   000DE6                     RXFBCON6        equ	3558	;# 
  1441   000DE7                     RXFBCON7        equ	3559	;# 
  1442   000DF0                     MSEL0           equ	3568	;# 
  1443   000DF1                     MSEL1           equ	3569	;# 
  1444   000DF2                     MSEL2           equ	3570	;# 
  1445   000DF3                     MSEL3           equ	3571	;# 
  1446   000DF8                     BSEL0           equ	3576	;# 
  1447   000DFA                     BIE0            equ	3578	;# 
  1448   000DFC                     TXBIE           equ	3580	;# 
  1449   000E20                     B0CON           equ	3616	;# 
  1450   000E21                     B0SIDH          equ	3617	;# 
  1451   000E22                     B0SIDL          equ	3618	;# 
  1452   000E23                     B0EIDH          equ	3619	;# 
  1453   000E24                     B0EIDL          equ	3620	;# 
  1454   000E25                     B0DLC           equ	3621	;# 
  1455   000E26                     B0D0            equ	3622	;# 
  1456   000E27                     B0D1            equ	3623	;# 
  1457   000E28                     B0D2            equ	3624	;# 
  1458   000E29                     B0D3            equ	3625	;# 
  1459   000E2A                     B0D4            equ	3626	;# 
  1460   000E2B                     B0D5            equ	3627	;# 
  1461   000E2C                     B0D6            equ	3628	;# 
  1462   000E2D                     B0D7            equ	3629	;# 
  1463   000E2E                     CANSTAT_RO9     equ	3630	;# 
  1464   000E2F                     CANCON_RO9      equ	3631	;# 
  1465   000E30                     B1CON           equ	3632	;# 
  1466   000E31                     B1SIDH          equ	3633	;# 
  1467   000E32                     B1SIDL          equ	3634	;# 
  1468   000E33                     B1EIDH          equ	3635	;# 
  1469   000E34                     B1EIDL          equ	3636	;# 
  1470   000E35                     B1DLC           equ	3637	;# 
  1471   000E36                     B1D0            equ	3638	;# 
  1472   000E37                     B1D1            equ	3639	;# 
  1473   000E38                     B1D2            equ	3640	;# 
  1474   000E39                     B1D3            equ	3641	;# 
  1475   000E3A                     B1D4            equ	3642	;# 
  1476   000E3B                     B1D5            equ	3643	;# 
  1477   000E3C                     B1D6            equ	3644	;# 
  1478   000E3D                     B1D7            equ	3645	;# 
  1479   000E3E                     CANSTAT_RO8     equ	3646	;# 
  1480   000E3F                     CANCON_RO8      equ	3647	;# 
  1481   000E40                     B2CON           equ	3648	;# 
  1482   000E41                     B2SIDH          equ	3649	;# 
  1483   000E42                     B2SIDL          equ	3650	;# 
  1484   000E43                     B2EIDH          equ	3651	;# 
  1485   000E44                     B2EIDL          equ	3652	;# 
  1486   000E45                     B2DLC           equ	3653	;# 
  1487   000E46                     B2D0            equ	3654	;# 
  1488   000E47                     B2D1            equ	3655	;# 
  1489   000E48                     B2D2            equ	3656	;# 
  1490   000E49                     B2D3            equ	3657	;# 
  1491   000E4A                     B2D4            equ	3658	;# 
  1492   000E4B                     B2D5            equ	3659	;# 
  1493   000E4C                     B2D6            equ	3660	;# 
  1494   000E4D                     B2D7            equ	3661	;# 
  1495   000E4E                     CANSTAT_RO7     equ	3662	;# 
  1496   000E4F                     CANCON_RO7      equ	3663	;# 
  1497   000E50                     B3CON           equ	3664	;# 
  1498   000E51                     B3SIDH          equ	3665	;# 
  1499   000E52                     B3SIDL          equ	3666	;# 
  1500   000E53                     B3EIDH          equ	3667	;# 
  1501   000E54                     B3EIDL          equ	3668	;# 
  1502   000E55                     B3DLC           equ	3669	;# 
  1503   000E56                     B3D0            equ	3670	;# 
  1504   000E57                     B3D1            equ	3671	;# 
  1505   000E58                     B3D2            equ	3672	;# 
  1506   000E59                     B3D3            equ	3673	;# 
  1507   000E5A                     B3D4            equ	3674	;# 
  1508   000E5B                     B3D5            equ	3675	;# 
  1509   000E5C                     B3D6            equ	3676	;# 
  1510   000E5D                     B3D7            equ	3677	;# 
  1511   000E5E                     CANSTAT_RO6     equ	3678	;# 
  1512   000E5F                     CANCON_RO6      equ	3679	;# 
  1513   000E60                     B4CON           equ	3680	;# 
  1514   000E61                     B4SIDH          equ	3681	;# 
  1515   000E62                     B4SIDL          equ	3682	;# 
  1516   000E63                     B4EIDH          equ	3683	;# 
  1517   000E64                     B4EIDL          equ	3684	;# 
  1518   000E65                     B4DLC           equ	3685	;# 
  1519   000E66                     B4D0            equ	3686	;# 
  1520   000E67                     B4D1            equ	3687	;# 
  1521   000E68                     B4D2            equ	3688	;# 
  1522   000E69                     B4D3            equ	3689	;# 
  1523   000E6A                     B4D4            equ	3690	;# 
  1524   000E6B                     B4D5            equ	3691	;# 
  1525   000E6C                     B4D6            equ	3692	;# 
  1526   000E6D                     B4D7            equ	3693	;# 
  1527   000E6E                     CANSTAT_RO5     equ	3694	;# 
  1528   000E6F                     CANCON_RO5      equ	3695	;# 
  1529   000E70                     B5CON           equ	3696	;# 
  1530   000E71                     B5SIDH          equ	3697	;# 
  1531   000E72                     B5SIDL          equ	3698	;# 
  1532   000E73                     B5EIDH          equ	3699	;# 
  1533   000E74                     B5EIDL          equ	3700	;# 
  1534   000E75                     B5DLC           equ	3701	;# 
  1535   000E76                     B5D0            equ	3702	;# 
  1536   000E77                     B5D1            equ	3703	;# 
  1537   000E78                     B5D2            equ	3704	;# 
  1538   000E79                     B5D3            equ	3705	;# 
  1539   000E7A                     B5D4            equ	3706	;# 
  1540   000E7B                     B5D5            equ	3707	;# 
  1541   000E7C                     B5D6            equ	3708	;# 
  1542   000E7D                     B5D7            equ	3709	;# 
  1543   000E7E                     CANSTAT_RO4     equ	3710	;# 
  1544   000E7F                     CANCON_RO4      equ	3711	;# 
  1545   000F00                     RXF0SIDH        equ	3840	;# 
  1546   000F01                     RXF0SIDL        equ	3841	;# 
  1547   000F02                     RXF0EIDH        equ	3842	;# 
  1548   000F03                     RXF0EIDL        equ	3843	;# 
  1549   000F04                     RXF1SIDH        equ	3844	;# 
  1550   000F05                     RXF1SIDL        equ	3845	;# 
  1551   000F06                     RXF1EIDH        equ	3846	;# 
  1552   000F07                     RXF1EIDL        equ	3847	;# 
  1553   000F08                     RXF2SIDH        equ	3848	;# 
  1554   000F09                     RXF2SIDL        equ	3849	;# 
  1555   000F0A                     RXF2EIDH        equ	3850	;# 
  1556   000F0B                     RXF2EIDL        equ	3851	;# 
  1557   000F0C                     RXF3SIDH        equ	3852	;# 
  1558   000F0D                     RXF3SIDL        equ	3853	;# 
  1559   000F0E                     RXF3EIDH        equ	3854	;# 
  1560   000F0F                     RXF3EIDL        equ	3855	;# 
  1561   000F10                     RXF4SIDH        equ	3856	;# 
  1562   000F11                     RXF4SIDL        equ	3857	;# 
  1563   000F12                     RXF4EIDH        equ	3858	;# 
  1564   000F13                     RXF4EIDL        equ	3859	;# 
  1565   000F14                     RXF5SIDH        equ	3860	;# 
  1566   000F15                     RXF5SIDL        equ	3861	;# 
  1567   000F16                     RXF5EIDH        equ	3862	;# 
  1568   000F17                     RXF5EIDL        equ	3863	;# 
  1569   000F18                     RXM0SIDH        equ	3864	;# 
  1570   000F19                     RXM0SIDL        equ	3865	;# 
  1571   000F1A                     RXM0EIDH        equ	3866	;# 
  1572   000F1B                     RXM0EIDL        equ	3867	;# 
  1573   000F1C                     RXM1SIDH        equ	3868	;# 
  1574   000F1D                     RXM1SIDL        equ	3869	;# 
  1575   000F1E                     RXM1EIDH        equ	3870	;# 
  1576   000F1F                     RXM1EIDL        equ	3871	;# 
  1577   000F20                     TXB2CON         equ	3872	;# 
  1578   000F21                     TXB2SIDH        equ	3873	;# 
  1579   000F22                     TXB2SIDL        equ	3874	;# 
  1580   000F23                     TXB2EIDH        equ	3875	;# 
  1581   000F24                     TXB2EIDL        equ	3876	;# 
  1582   000F25                     TXB2DLC         equ	3877	;# 
  1583   000F26                     TXB2D0          equ	3878	;# 
  1584   000F27                     TXB2D1          equ	3879	;# 
  1585   000F28                     TXB2D2          equ	3880	;# 
  1586   000F29                     TXB2D3          equ	3881	;# 
  1587   000F2A                     TXB2D4          equ	3882	;# 
  1588   000F2B                     TXB2D5          equ	3883	;# 
  1589   000F2C                     TXB2D6          equ	3884	;# 
  1590   000F2D                     TXB2D7          equ	3885	;# 
  1591   000F2E                     CANSTAT_RO3     equ	3886	;# 
  1592   000F2F                     CANCON_RO3      equ	3887	;# 
  1593   000F30                     TXB1CON         equ	3888	;# 
  1594   000F31                     TXB1SIDH        equ	3889	;# 
  1595   000F32                     TXB1SIDL        equ	3890	;# 
  1596   000F33                     TXB1EIDH        equ	3891	;# 
  1597   000F34                     TXB1EIDL        equ	3892	;# 
  1598   000F35                     TXB1DLC         equ	3893	;# 
  1599   000F36                     TXB1D0          equ	3894	;# 
  1600   000F37                     TXB1D1          equ	3895	;# 
  1601   000F38                     TXB1D2          equ	3896	;# 
  1602   000F39                     TXB1D3          equ	3897	;# 
  1603   000F3A                     TXB1D4          equ	3898	;# 
  1604   000F3B                     TXB1D5          equ	3899	;# 
  1605   000F3C                     TXB1D6          equ	3900	;# 
  1606   000F3D                     TXB1D7          equ	3901	;# 
  1607   000F3E                     CANSTAT_RO2     equ	3902	;# 
  1608   000F3F                     CANCON_RO2      equ	3903	;# 
  1609   000F40                     TXB0CON         equ	3904	;# 
  1610   000F41                     TXB0SIDH        equ	3905	;# 
  1611   000F42                     TXB0SIDL        equ	3906	;# 
  1612   000F43                     TXB0EIDH        equ	3907	;# 
  1613   000F44                     TXB0EIDL        equ	3908	;# 
  1614   000F45                     TXB0DLC         equ	3909	;# 
  1615   000F46                     TXB0D0          equ	3910	;# 
  1616   000F47                     TXB0D1          equ	3911	;# 
  1617   000F48                     TXB0D2          equ	3912	;# 
  1618   000F49                     TXB0D3          equ	3913	;# 
  1619   000F4A                     TXB0D4          equ	3914	;# 
  1620   000F4B                     TXB0D5          equ	3915	;# 
  1621   000F4C                     TXB0D6          equ	3916	;# 
  1622   000F4D                     TXB0D7          equ	3917	;# 
  1623   000F4E                     CANSTAT_RO1     equ	3918	;# 
  1624   000F4F                     CANCON_RO1      equ	3919	;# 
  1625   000F50                     RXB1CON         equ	3920	;# 
  1626   000F51                     RXB1SIDH        equ	3921	;# 
  1627   000F52                     RXB1SIDL        equ	3922	;# 
  1628   000F53                     RXB1EIDH        equ	3923	;# 
  1629   000F54                     RXB1EIDL        equ	3924	;# 
  1630   000F55                     RXB1DLC         equ	3925	;# 
  1631   000F56                     RXB1D0          equ	3926	;# 
  1632   000F57                     RXB1D1          equ	3927	;# 
  1633   000F58                     RXB1D2          equ	3928	;# 
  1634   000F59                     RXB1D3          equ	3929	;# 
  1635   000F5A                     RXB1D4          equ	3930	;# 
  1636   000F5B                     RXB1D5          equ	3931	;# 
  1637   000F5C                     RXB1D6          equ	3932	;# 
  1638   000F5D                     RXB1D7          equ	3933	;# 
  1639   000F5E                     CANSTAT_RO0     equ	3934	;# 
  1640   000F5F                     CANCON_RO0      equ	3935	;# 
  1641   000F60                     RXB0CON         equ	3936	;# 
  1642   000F61                     RXB0SIDH        equ	3937	;# 
  1643   000F62                     RXB0SIDL        equ	3938	;# 
  1644   000F63                     RXB0EIDH        equ	3939	;# 
  1645   000F64                     RXB0EIDL        equ	3940	;# 
  1646   000F65                     RXB0DLC         equ	3941	;# 
  1647   000F66                     RXB0D0          equ	3942	;# 
  1648   000F67                     RXB0D1          equ	3943	;# 
  1649   000F68                     RXB0D2          equ	3944	;# 
  1650   000F69                     RXB0D3          equ	3945	;# 
  1651   000F6A                     RXB0D4          equ	3946	;# 
  1652   000F6B                     RXB0D5          equ	3947	;# 
  1653   000F6C                     RXB0D6          equ	3948	;# 
  1654   000F6D                     RXB0D7          equ	3949	;# 
  1655   000F6E                     CANSTAT         equ	3950	;# 
  1656   000F6F                     CANCON          equ	3951	;# 
  1657   000F70                     BRGCON1         equ	3952	;# 
  1658   000F71                     BRGCON2         equ	3953	;# 
  1659   000F72                     BRGCON3         equ	3954	;# 
  1660   000F73                     CIOCON          equ	3955	;# 
  1661   000F74                     COMSTAT         equ	3956	;# 
  1662   000F75                     RXERRCNT        equ	3957	;# 
  1663   000F76                     TXERRCNT        equ	3958	;# 
  1664   000F77                     ECANCON         equ	3959	;# 
  1665   000F80                     PORTA           equ	3968	;# 
  1666   000F81                     PORTB           equ	3969	;# 
  1667   000F82                     PORTC           equ	3970	;# 
  1668   000F83                     PORTD           equ	3971	;# 
  1669   000F84                     PORTE           equ	3972	;# 
  1670   000F89                     LATA            equ	3977	;# 
  1671   000F8A                     LATB            equ	3978	;# 
  1672   000F8B                     LATC            equ	3979	;# 
  1673   000F8C                     LATD            equ	3980	;# 
  1674   000F8D                     LATE            equ	3981	;# 
  1675   000F92                     TRISA           equ	3986	;# 
  1676   000F92                     DDRA            equ	3986	;# 
  1677   000F93                     TRISB           equ	3987	;# 
  1678   000F93                     DDRB            equ	3987	;# 
  1679   000F94                     TRISC           equ	3988	;# 
  1680   000F94                     DDRC            equ	3988	;# 
  1681   000F95                     TRISD           equ	3989	;# 
  1682   000F95                     DDRD            equ	3989	;# 
  1683   000F96                     TRISE           equ	3990	;# 
  1684   000F96                     DDRE            equ	3990	;# 
  1685   000F9B                     OSCTUNE         equ	3995	;# 
  1686   000F9D                     PIE1            equ	3997	;# 
  1687   000F9E                     PIR1            equ	3998	;# 
  1688   000F9F                     IPR1            equ	3999	;# 
  1689   000FA0                     PIE2            equ	4000	;# 
  1690   000FA1                     PIR2            equ	4001	;# 
  1691   000FA2                     IPR2            equ	4002	;# 
  1692   000FA3                     PIE3            equ	4003	;# 
  1693   000FA4                     PIR3            equ	4004	;# 
  1694   000FA5                     IPR3            equ	4005	;# 
  1695   000FA6                     EECON1          equ	4006	;# 
  1696   000FA7                     EECON2          equ	4007	;# 
  1697   000FA8                     EEDATA          equ	4008	;# 
  1698   000FA9                     EEADR           equ	4009	;# 
  1699   000FAB                     RCSTA           equ	4011	;# 
  1700   000FAB                     RCSTA1          equ	4011	;# 
  1701   000FAC                     TXSTA           equ	4012	;# 
  1702   000FAC                     TXSTA1          equ	4012	;# 
  1703   000FAD                     TXREG           equ	4013	;# 
  1704   000FAD                     TXREG1          equ	4013	;# 
  1705   000FAE                     RCREG           equ	4014	;# 
  1706   000FAE                     RCREG1          equ	4014	;# 
  1707   000FAF                     SPBRG           equ	4015	;# 
  1708   000FAF                     SPBRG1          equ	4015	;# 
  1709   000FB0                     SPBRGH          equ	4016	;# 
  1710   000FB1                     T3CON           equ	4017	;# 
  1711   000FB2                     TMR3            equ	4018	;# 
  1712   000FB2                     TMR3L           equ	4018	;# 
  1713   000FB3                     TMR3H           equ	4019	;# 
  1714   000FB4                     CMCON           equ	4020	;# 
  1715   000FB5                     CVRCON          equ	4021	;# 
  1716   000FB6                     ECCP1AS         equ	4022	;# 
  1717   000FB7                     ECCP1DEL        equ	4023	;# 
  1718   000FB8                     BAUDCON         equ	4024	;# 
  1719   000FB8                     BAUDCTL         equ	4024	;# 
  1720   000FBA                     ECCP1CON        equ	4026	;# 
  1721   000FBB                     ECCPR1          equ	4027	;# 
  1722   000FBB                     ECCPR1L         equ	4027	;# 
  1723   000FBC                     ECCPR1H         equ	4028	;# 
  1724   000FBD                     CCP1CON         equ	4029	;# 
  1725   000FBE                     CCPR1           equ	4030	;# 
  1726   000FBE                     CCPR1L          equ	4030	;# 
  1727   000FBF                     CCPR1H          equ	4031	;# 
  1728   000FC0                     ADCON2          equ	4032	;# 
  1729   000FC1                     ADCON1          equ	4033	;# 
  1730   000FC2                     ADCON0          equ	4034	;# 
  1731   000FC3                     ADRES           equ	4035	;# 
  1732   000FC3                     ADRESL          equ	4035	;# 
  1733   000FC4                     ADRESH          equ	4036	;# 
  1734   000FC5                     SSPCON2         equ	4037	;# 
  1735   000FC6                     SSPCON1         equ	4038	;# 
  1736   000FC7                     SSPSTAT         equ	4039	;# 
  1737   000FC8                     SSPADD          equ	4040	;# 
  1738   000FC9                     SSPBUF          equ	4041	;# 
  1739   000FCA                     T2CON           equ	4042	;# 
  1740   000FCB                     PR2             equ	4043	;# 
  1741   000FCB                     MEMCON          equ	4043	;# 
  1742   000FCC                     TMR2            equ	4044	;# 
  1743   000FCD                     T1CON           equ	4045	;# 
  1744   000FCE                     TMR1            equ	4046	;# 
  1745   000FCE                     TMR1L           equ	4046	;# 
  1746   000FCF                     TMR1H           equ	4047	;# 
  1747   000FD0                     RCON            equ	4048	;# 
  1748   000FD1                     WDTCON          equ	4049	;# 
  1749   000FD2                     HLVDCON         equ	4050	;# 
  1750   000FD2                     LVDCON          equ	4050	;# 
  1751   000FD3                     OSCCON          equ	4051	;# 
  1752   000FD5                     T0CON           equ	4053	;# 
  1753   000FD6                     TMR0            equ	4054	;# 
  1754   000FD6                     TMR0L           equ	4054	;# 
  1755   000FD7                     TMR0H           equ	4055	;# 
  1756   000FD8                     STATUS          equ	4056	;# 
  1757   000FD9                     FSR2            equ	4057	;# 
  1758   000FD9                     FSR2L           equ	4057	;# 
  1759   000FDA                     FSR2H           equ	4058	;# 
  1760   000FDB                     PLUSW2          equ	4059	;# 
  1761   000FDC                     PREINC2         equ	4060	;# 
  1762   000FDD                     POSTDEC2        equ	4061	;# 
  1763   000FDE                     POSTINC2        equ	4062	;# 
  1764   000FDF                     INDF2           equ	4063	;# 
  1765   000FE0                     BSR             equ	4064	;# 
  1766   000FE1                     FSR1            equ	4065	;# 
  1767   000FE1                     FSR1L           equ	4065	;# 
  1768   000FE2                     FSR1H           equ	4066	;# 
  1769   000FE3                     PLUSW1          equ	4067	;# 
  1770   000FE4                     PREINC1         equ	4068	;# 
  1771   000FE5                     POSTDEC1        equ	4069	;# 
  1772   000FE6                     POSTINC1        equ	4070	;# 
  1773   000FE7                     INDF1           equ	4071	;# 
  1774   000FE8                     WREG            equ	4072	;# 
  1775   000FE9                     FSR0            equ	4073	;# 
  1776   000FE9                     FSR0L           equ	4073	;# 
  1777   000FEA                     FSR0H           equ	4074	;# 
  1778   000FEB                     PLUSW0          equ	4075	;# 
  1779   000FEC                     PREINC0         equ	4076	;# 
  1780   000FED                     POSTDEC0        equ	4077	;# 
  1781   000FEE                     POSTINC0        equ	4078	;# 
  1782   000FEF                     INDF0           equ	4079	;# 
  1783   000FF0                     INTCON3         equ	4080	;# 
  1784   000FF1                     INTCON2         equ	4081	;# 
  1785   000FF2                     INTCON          equ	4082	;# 
  1786   000FF3                     PROD            equ	4083	;# 
  1787   000FF3                     PRODL           equ	4083	;# 
  1788   000FF4                     PRODH           equ	4084	;# 
  1789   000FF5                     TABLAT          equ	4085	;# 
  1790   000FF6                     TBLPTR          equ	4086	;# 
  1791   000FF6                     TBLPTRL         equ	4086	;# 
  1792   000FF7                     TBLPTRH         equ	4087	;# 
  1793   000FF8                     TBLPTRU         equ	4088	;# 
  1794   000FF9                     PCLAT           equ	4089	;# 
  1795   000FF9                     PC              equ	4089	;# 
  1796   000FF9                     PCL             equ	4089	;# 
  1797   000FFA                     PCLATH          equ	4090	;# 
  1798   000FFB                     PCLATU          equ	4091	;# 
  1799   000FFC                     STKPTR          equ	4092	;# 
  1800   000FFD                     TOS             equ	4093	;# 
  1801   000FFD                     TOSL            equ	4093	;# 
  1802   000FFE                     TOSH            equ	4094	;# 
  1803   000FFF                     TOSU            equ	4095	;# 
  1804   000D60                     RXF6SIDH        equ	3424	;# 
  1805   000D61                     RXF6SIDL        equ	3425	;# 
  1806   000D62                     RXF6EIDH        equ	3426	;# 
  1807   000D63                     RXF6EIDL        equ	3427	;# 
  1808   000D64                     RXF7SIDH        equ	3428	;# 
  1809   000D65                     RXF7SIDL        equ	3429	;# 
  1810   000D66                     RXF7EIDH        equ	3430	;# 
  1811   000D67                     RXF7EIDL        equ	3431	;# 
  1812   000D68                     RXF8SIDH        equ	3432	;# 
  1813   000D69                     RXF8SIDL        equ	3433	;# 
  1814   000D6A                     RXF8EIDH        equ	3434	;# 
  1815   000D6B                     RXF8EIDL        equ	3435	;# 
  1816   000D70                     RXF9SIDH        equ	3440	;# 
  1817   000D71                     RXF9SIDL        equ	3441	;# 
  1818   000D72                     RXF9EIDH        equ	3442	;# 
  1819   000D73                     RXF9EIDL        equ	3443	;# 
  1820   000D74                     RXF10SIDH       equ	3444	;# 
  1821   000D75                     RXF10SIDL       equ	3445	;# 
  1822   000D76                     RXF10EIDH       equ	3446	;# 
  1823   000D77                     RXF10EIDL       equ	3447	;# 
  1824   000D78                     RXF11SIDH       equ	3448	;# 
  1825   000D79                     RXF11SIDL       equ	3449	;# 
  1826   000D7A                     RXF11EIDH       equ	3450	;# 
  1827   000D7B                     RXF11EIDL       equ	3451	;# 
  1828   000D80                     RXF12SIDH       equ	3456	;# 
  1829   000D81                     RXF12SIDL       equ	3457	;# 
  1830   000D82                     RXF12EIDH       equ	3458	;# 
  1831   000D83                     RXF12EIDL       equ	3459	;# 
  1832   000D84                     RXF13SIDH       equ	3460	;# 
  1833   000D85                     RXF13SIDL       equ	3461	;# 
  1834   000D86                     RXF13EIDH       equ	3462	;# 
  1835   000D87                     RXF13EIDL       equ	3463	;# 
  1836   000D88                     RXF14SIDH       equ	3464	;# 
  1837   000D89                     RXF14SIDL       equ	3465	;# 
  1838   000D8A                     RXF14EIDH       equ	3466	;# 
  1839   000D8B                     RXF14EIDL       equ	3467	;# 
  1840   000D90                     RXF15SIDH       equ	3472	;# 
  1841   000D91                     RXF15SIDL       equ	3473	;# 
  1842   000D92                     RXF15EIDH       equ	3474	;# 
  1843   000D93                     RXF15EIDL       equ	3475	;# 
  1844   000DD4                     RXFCON0         equ	3540	;# 
  1845   000DD5                     RXFCON1         equ	3541	;# 
  1846   000DD8                     SDFLC           equ	3544	;# 
  1847   000DE0                     RXFBCON0        equ	3552	;# 
  1848   000DE1                     RXFBCON1        equ	3553	;# 
  1849   000DE2                     RXFBCON2        equ	3554	;# 
  1850   000DE3                     RXFBCON3        equ	3555	;# 
  1851   000DE4                     RXFBCON4        equ	3556	;# 
  1852   000DE5                     RXFBCON5        equ	3557	;# 
  1853   000DE6                     RXFBCON6        equ	3558	;# 
  1854   000DE7                     RXFBCON7        equ	3559	;# 
  1855   000DF0                     MSEL0           equ	3568	;# 
  1856   000DF1                     MSEL1           equ	3569	;# 
  1857   000DF2                     MSEL2           equ	3570	;# 
  1858   000DF3                     MSEL3           equ	3571	;# 
  1859   000DF8                     BSEL0           equ	3576	;# 
  1860   000DFA                     BIE0            equ	3578	;# 
  1861   000DFC                     TXBIE           equ	3580	;# 
  1862   000E20                     B0CON           equ	3616	;# 
  1863   000E21                     B0SIDH          equ	3617	;# 
  1864   000E22                     B0SIDL          equ	3618	;# 
  1865   000E23                     B0EIDH          equ	3619	;# 
  1866   000E24                     B0EIDL          equ	3620	;# 
  1867   000E25                     B0DLC           equ	3621	;# 
  1868   000E26                     B0D0            equ	3622	;# 
  1869   000E27                     B0D1            equ	3623	;# 
  1870   000E28                     B0D2            equ	3624	;# 
  1871   000E29                     B0D3            equ	3625	;# 
  1872   000E2A                     B0D4            equ	3626	;# 
  1873   000E2B                     B0D5            equ	3627	;# 
  1874   000E2C                     B0D6            equ	3628	;# 
  1875   000E2D                     B0D7            equ	3629	;# 
  1876   000E2E                     CANSTAT_RO9     equ	3630	;# 
  1877   000E2F                     CANCON_RO9      equ	3631	;# 
  1878   000E30                     B1CON           equ	3632	;# 
  1879   000E31                     B1SIDH          equ	3633	;# 
  1880   000E32                     B1SIDL          equ	3634	;# 
  1881   000E33                     B1EIDH          equ	3635	;# 
  1882   000E34                     B1EIDL          equ	3636	;# 
  1883   000E35                     B1DLC           equ	3637	;# 
  1884   000E36                     B1D0            equ	3638	;# 
  1885   000E37                     B1D1            equ	3639	;# 
  1886   000E38                     B1D2            equ	3640	;# 
  1887   000E39                     B1D3            equ	3641	;# 
  1888   000E3A                     B1D4            equ	3642	;# 
  1889   000E3B                     B1D5            equ	3643	;# 
  1890   000E3C                     B1D6            equ	3644	;# 
  1891   000E3D                     B1D7            equ	3645	;# 
  1892   000E3E                     CANSTAT_RO8     equ	3646	;# 
  1893   000E3F                     CANCON_RO8      equ	3647	;# 
  1894   000E40                     B2CON           equ	3648	;# 
  1895   000E41                     B2SIDH          equ	3649	;# 
  1896   000E42                     B2SIDL          equ	3650	;# 
  1897   000E43                     B2EIDH          equ	3651	;# 
  1898   000E44                     B2EIDL          equ	3652	;# 
  1899   000E45                     B2DLC           equ	3653	;# 
  1900   000E46                     B2D0            equ	3654	;# 
  1901   000E47                     B2D1            equ	3655	;# 
  1902   000E48                     B2D2            equ	3656	;# 
  1903   000E49                     B2D3            equ	3657	;# 
  1904   000E4A                     B2D4            equ	3658	;# 
  1905   000E4B                     B2D5            equ	3659	;# 
  1906   000E4C                     B2D6            equ	3660	;# 
  1907   000E4D                     B2D7            equ	3661	;# 
  1908   000E4E                     CANSTAT_RO7     equ	3662	;# 
  1909   000E4F                     CANCON_RO7      equ	3663	;# 
  1910   000E50                     B3CON           equ	3664	;# 
  1911   000E51                     B3SIDH          equ	3665	;# 
  1912   000E52                     B3SIDL          equ	3666	;# 
  1913   000E53                     B3EIDH          equ	3667	;# 
  1914   000E54                     B3EIDL          equ	3668	;# 
  1915   000E55                     B3DLC           equ	3669	;# 
  1916   000E56                     B3D0            equ	3670	;# 
  1917   000E57                     B3D1            equ	3671	;# 
  1918   000E58                     B3D2            equ	3672	;# 
  1919   000E59                     B3D3            equ	3673	;# 
  1920   000E5A                     B3D4            equ	3674	;# 
  1921   000E5B                     B3D5            equ	3675	;# 
  1922   000E5C                     B3D6            equ	3676	;# 
  1923   000E5D                     B3D7            equ	3677	;# 
  1924   000E5E                     CANSTAT_RO6     equ	3678	;# 
  1925   000E5F                     CANCON_RO6      equ	3679	;# 
  1926   000E60                     B4CON           equ	3680	;# 
  1927   000E61                     B4SIDH          equ	3681	;# 
  1928   000E62                     B4SIDL          equ	3682	;# 
  1929   000E63                     B4EIDH          equ	3683	;# 
  1930   000E64                     B4EIDL          equ	3684	;# 
  1931   000E65                     B4DLC           equ	3685	;# 
  1932   000E66                     B4D0            equ	3686	;# 
  1933   000E67                     B4D1            equ	3687	;# 
  1934   000E68                     B4D2            equ	3688	;# 
  1935   000E69                     B4D3            equ	3689	;# 
  1936   000E6A                     B4D4            equ	3690	;# 
  1937   000E6B                     B4D5            equ	3691	;# 
  1938   000E6C                     B4D6            equ	3692	;# 
  1939   000E6D                     B4D7            equ	3693	;# 
  1940   000E6E                     CANSTAT_RO5     equ	3694	;# 
  1941   000E6F                     CANCON_RO5      equ	3695	;# 
  1942   000E70                     B5CON           equ	3696	;# 
  1943   000E71                     B5SIDH          equ	3697	;# 
  1944   000E72                     B5SIDL          equ	3698	;# 
  1945   000E73                     B5EIDH          equ	3699	;# 
  1946   000E74                     B5EIDL          equ	3700	;# 
  1947   000E75                     B5DLC           equ	3701	;# 
  1948   000E76                     B5D0            equ	3702	;# 
  1949   000E77                     B5D1            equ	3703	;# 
  1950   000E78                     B5D2            equ	3704	;# 
  1951   000E79                     B5D3            equ	3705	;# 
  1952   000E7A                     B5D4            equ	3706	;# 
  1953   000E7B                     B5D5            equ	3707	;# 
  1954   000E7C                     B5D6            equ	3708	;# 
  1955   000E7D                     B5D7            equ	3709	;# 
  1956   000E7E                     CANSTAT_RO4     equ	3710	;# 
  1957   000E7F                     CANCON_RO4      equ	3711	;# 
  1958   000F00                     RXF0SIDH        equ	3840	;# 
  1959   000F01                     RXF0SIDL        equ	3841	;# 
  1960   000F02                     RXF0EIDH        equ	3842	;# 
  1961   000F03                     RXF0EIDL        equ	3843	;# 
  1962   000F04                     RXF1SIDH        equ	3844	;# 
  1963   000F05                     RXF1SIDL        equ	3845	;# 
  1964   000F06                     RXF1EIDH        equ	3846	;# 
  1965   000F07                     RXF1EIDL        equ	3847	;# 
  1966   000F08                     RXF2SIDH        equ	3848	;# 
  1967   000F09                     RXF2SIDL        equ	3849	;# 
  1968   000F0A                     RXF2EIDH        equ	3850	;# 
  1969   000F0B                     RXF2EIDL        equ	3851	;# 
  1970   000F0C                     RXF3SIDH        equ	3852	;# 
  1971   000F0D                     RXF3SIDL        equ	3853	;# 
  1972   000F0E                     RXF3EIDH        equ	3854	;# 
  1973   000F0F                     RXF3EIDL        equ	3855	;# 
  1974   000F10                     RXF4SIDH        equ	3856	;# 
  1975   000F11                     RXF4SIDL        equ	3857	;# 
  1976   000F12                     RXF4EIDH        equ	3858	;# 
  1977   000F13                     RXF4EIDL        equ	3859	;# 
  1978   000F14                     RXF5SIDH        equ	3860	;# 
  1979   000F15                     RXF5SIDL        equ	3861	;# 
  1980   000F16                     RXF5EIDH        equ	3862	;# 
  1981   000F17                     RXF5EIDL        equ	3863	;# 
  1982   000F18                     RXM0SIDH        equ	3864	;# 
  1983   000F19                     RXM0SIDL        equ	3865	;# 
  1984   000F1A                     RXM0EIDH        equ	3866	;# 
  1985   000F1B                     RXM0EIDL        equ	3867	;# 
  1986   000F1C                     RXM1SIDH        equ	3868	;# 
  1987   000F1D                     RXM1SIDL        equ	3869	;# 
  1988   000F1E                     RXM1EIDH        equ	3870	;# 
  1989   000F1F                     RXM1EIDL        equ	3871	;# 
  1990   000F20                     TXB2CON         equ	3872	;# 
  1991   000F21                     TXB2SIDH        equ	3873	;# 
  1992   000F22                     TXB2SIDL        equ	3874	;# 
  1993   000F23                     TXB2EIDH        equ	3875	;# 
  1994   000F24                     TXB2EIDL        equ	3876	;# 
  1995   000F25                     TXB2DLC         equ	3877	;# 
  1996   000F26                     TXB2D0          equ	3878	;# 
  1997   000F27                     TXB2D1          equ	3879	;# 
  1998   000F28                     TXB2D2          equ	3880	;# 
  1999   000F29                     TXB2D3          equ	3881	;# 
  2000   000F2A                     TXB2D4          equ	3882	;# 
  2001   000F2B                     TXB2D5          equ	3883	;# 
  2002   000F2C                     TXB2D6          equ	3884	;# 
  2003   000F2D                     TXB2D7          equ	3885	;# 
  2004   000F2E                     CANSTAT_RO3     equ	3886	;# 
  2005   000F2F                     CANCON_RO3      equ	3887	;# 
  2006   000F30                     TXB1CON         equ	3888	;# 
  2007   000F31                     TXB1SIDH        equ	3889	;# 
  2008   000F32                     TXB1SIDL        equ	3890	;# 
  2009   000F33                     TXB1EIDH        equ	3891	;# 
  2010   000F34                     TXB1EIDL        equ	3892	;# 
  2011   000F35                     TXB1DLC         equ	3893	;# 
  2012   000F36                     TXB1D0          equ	3894	;# 
  2013   000F37                     TXB1D1          equ	3895	;# 
  2014   000F38                     TXB1D2          equ	3896	;# 
  2015   000F39                     TXB1D3          equ	3897	;# 
  2016   000F3A                     TXB1D4          equ	3898	;# 
  2017   000F3B                     TXB1D5          equ	3899	;# 
  2018   000F3C                     TXB1D6          equ	3900	;# 
  2019   000F3D                     TXB1D7          equ	3901	;# 
  2020   000F3E                     CANSTAT_RO2     equ	3902	;# 
  2021   000F3F                     CANCON_RO2      equ	3903	;# 
  2022   000F40                     TXB0CON         equ	3904	;# 
  2023   000F41                     TXB0SIDH        equ	3905	;# 
  2024   000F42                     TXB0SIDL        equ	3906	;# 
  2025   000F43                     TXB0EIDH        equ	3907	;# 
  2026   000F44                     TXB0EIDL        equ	3908	;# 
  2027   000F45                     TXB0DLC         equ	3909	;# 
  2028   000F46                     TXB0D0          equ	3910	;# 
  2029   000F47                     TXB0D1          equ	3911	;# 
  2030   000F48                     TXB0D2          equ	3912	;# 
  2031   000F49                     TXB0D3          equ	3913	;# 
  2032   000F4A                     TXB0D4          equ	3914	;# 
  2033   000F4B                     TXB0D5          equ	3915	;# 
  2034   000F4C                     TXB0D6          equ	3916	;# 
  2035   000F4D                     TXB0D7          equ	3917	;# 
  2036   000F4E                     CANSTAT_RO1     equ	3918	;# 
  2037   000F4F                     CANCON_RO1      equ	3919	;# 
  2038   000F50                     RXB1CON         equ	3920	;# 
  2039   000F51                     RXB1SIDH        equ	3921	;# 
  2040   000F52                     RXB1SIDL        equ	3922	;# 
  2041   000F53                     RXB1EIDH        equ	3923	;# 
  2042   000F54                     RXB1EIDL        equ	3924	;# 
  2043   000F55                     RXB1DLC         equ	3925	;# 
  2044   000F56                     RXB1D0          equ	3926	;# 
  2045   000F57                     RXB1D1          equ	3927	;# 
  2046   000F58                     RXB1D2          equ	3928	;# 
  2047   000F59                     RXB1D3          equ	3929	;# 
  2048   000F5A                     RXB1D4          equ	3930	;# 
  2049   000F5B                     RXB1D5          equ	3931	;# 
  2050   000F5C                     RXB1D6          equ	3932	;# 
  2051   000F5D                     RXB1D7          equ	3933	;# 
  2052   000F5E                     CANSTAT_RO0     equ	3934	;# 
  2053   000F5F                     CANCON_RO0      equ	3935	;# 
  2054   000F60                     RXB0CON         equ	3936	;# 
  2055   000F61                     RXB0SIDH        equ	3937	;# 
  2056   000F62                     RXB0SIDL        equ	3938	;# 
  2057   000F63                     RXB0EIDH        equ	3939	;# 
  2058   000F64                     RXB0EIDL        equ	3940	;# 
  2059   000F65                     RXB0DLC         equ	3941	;# 
  2060   000F66                     RXB0D0          equ	3942	;# 
  2061   000F67                     RXB0D1          equ	3943	;# 
  2062   000F68                     RXB0D2          equ	3944	;# 
  2063   000F69                     RXB0D3          equ	3945	;# 
  2064   000F6A                     RXB0D4          equ	3946	;# 
  2065   000F6B                     RXB0D5          equ	3947	;# 
  2066   000F6C                     RXB0D6          equ	3948	;# 
  2067   000F6D                     RXB0D7          equ	3949	;# 
  2068   000F6E                     CANSTAT         equ	3950	;# 
  2069   000F6F                     CANCON          equ	3951	;# 
  2070   000F70                     BRGCON1         equ	3952	;# 
  2071   000F71                     BRGCON2         equ	3953	;# 
  2072   000F72                     BRGCON3         equ	3954	;# 
  2073   000F73                     CIOCON          equ	3955	;# 
  2074   000F74                     COMSTAT         equ	3956	;# 
  2075   000F75                     RXERRCNT        equ	3957	;# 
  2076   000F76                     TXERRCNT        equ	3958	;# 
  2077   000F77                     ECANCON         equ	3959	;# 
  2078   000F80                     PORTA           equ	3968	;# 
  2079   000F81                     PORTB           equ	3969	;# 
  2080   000F82                     PORTC           equ	3970	;# 
  2081   000F83                     PORTD           equ	3971	;# 
  2082   000F84                     PORTE           equ	3972	;# 
  2083   000F89                     LATA            equ	3977	;# 
  2084   000F8A                     LATB            equ	3978	;# 
  2085   000F8B                     LATC            equ	3979	;# 
  2086   000F8C                     LATD            equ	3980	;# 
  2087   000F8D                     LATE            equ	3981	;# 
  2088   000F92                     TRISA           equ	3986	;# 
  2089   000F92                     DDRA            equ	3986	;# 
  2090   000F93                     TRISB           equ	3987	;# 
  2091   000F93                     DDRB            equ	3987	;# 
  2092   000F94                     TRISC           equ	3988	;# 
  2093   000F94                     DDRC            equ	3988	;# 
  2094   000F95                     TRISD           equ	3989	;# 
  2095   000F95                     DDRD            equ	3989	;# 
  2096   000F96                     TRISE           equ	3990	;# 
  2097   000F96                     DDRE            equ	3990	;# 
  2098   000F9B                     OSCTUNE         equ	3995	;# 
  2099   000F9D                     PIE1            equ	3997	;# 
  2100   000F9E                     PIR1            equ	3998	;# 
  2101   000F9F                     IPR1            equ	3999	;# 
  2102   000FA0                     PIE2            equ	4000	;# 
  2103   000FA1                     PIR2            equ	4001	;# 
  2104   000FA2                     IPR2            equ	4002	;# 
  2105   000FA3                     PIE3            equ	4003	;# 
  2106   000FA4                     PIR3            equ	4004	;# 
  2107   000FA5                     IPR3            equ	4005	;# 
  2108   000FA6                     EECON1          equ	4006	;# 
  2109   000FA7                     EECON2          equ	4007	;# 
  2110   000FA8                     EEDATA          equ	4008	;# 
  2111   000FA9                     EEADR           equ	4009	;# 
  2112   000FAB                     RCSTA           equ	4011	;# 
  2113   000FAB                     RCSTA1          equ	4011	;# 
  2114   000FAC                     TXSTA           equ	4012	;# 
  2115   000FAC                     TXSTA1          equ	4012	;# 
  2116   000FAD                     TXREG           equ	4013	;# 
  2117   000FAD                     TXREG1          equ	4013	;# 
  2118   000FAE                     RCREG           equ	4014	;# 
  2119   000FAE                     RCREG1          equ	4014	;# 
  2120   000FAF                     SPBRG           equ	4015	;# 
  2121   000FAF                     SPBRG1          equ	4015	;# 
  2122   000FB0                     SPBRGH          equ	4016	;# 
  2123   000FB1                     T3CON           equ	4017	;# 
  2124   000FB2                     TMR3            equ	4018	;# 
  2125   000FB2                     TMR3L           equ	4018	;# 
  2126   000FB3                     TMR3H           equ	4019	;# 
  2127   000FB4                     CMCON           equ	4020	;# 
  2128   000FB5                     CVRCON          equ	4021	;# 
  2129   000FB6                     ECCP1AS         equ	4022	;# 
  2130   000FB7                     ECCP1DEL        equ	4023	;# 
  2131   000FB8                     BAUDCON         equ	4024	;# 
  2132   000FB8                     BAUDCTL         equ	4024	;# 
  2133   000FBA                     ECCP1CON        equ	4026	;# 
  2134   000FBB                     ECCPR1          equ	4027	;# 
  2135   000FBB                     ECCPR1L         equ	4027	;# 
  2136   000FBC                     ECCPR1H         equ	4028	;# 
  2137   000FBD                     CCP1CON         equ	4029	;# 
  2138   000FBE                     CCPR1           equ	4030	;# 
  2139   000FBE                     CCPR1L          equ	4030	;# 
  2140   000FBF                     CCPR1H          equ	4031	;# 
  2141   000FC0                     ADCON2          equ	4032	;# 
  2142   000FC1                     ADCON1          equ	4033	;# 
  2143   000FC2                     ADCON0          equ	4034	;# 
  2144   000FC3                     ADRES           equ	4035	;# 
  2145   000FC3                     ADRESL          equ	4035	;# 
  2146   000FC4                     ADRESH          equ	4036	;# 
  2147   000FC5                     SSPCON2         equ	4037	;# 
  2148   000FC6                     SSPCON1         equ	4038	;# 
  2149   000FC7                     SSPSTAT         equ	4039	;# 
  2150   000FC8                     SSPADD          equ	4040	;# 
  2151   000FC9                     SSPBUF          equ	4041	;# 
  2152   000FCA                     T2CON           equ	4042	;# 
  2153   000FCB                     PR2             equ	4043	;# 
  2154   000FCB                     MEMCON          equ	4043	;# 
  2155   000FCC                     TMR2            equ	4044	;# 
  2156   000FCD                     T1CON           equ	4045	;# 
  2157   000FCE                     TMR1            equ	4046	;# 
  2158   000FCE                     TMR1L           equ	4046	;# 
  2159   000FCF                     TMR1H           equ	4047	;# 
  2160   000FD0                     RCON            equ	4048	;# 
  2161   000FD1                     WDTCON          equ	4049	;# 
  2162   000FD2                     HLVDCON         equ	4050	;# 
  2163   000FD2                     LVDCON          equ	4050	;# 
  2164   000FD3                     OSCCON          equ	4051	;# 
  2165   000FD5                     T0CON           equ	4053	;# 
  2166   000FD6                     TMR0            equ	4054	;# 
  2167   000FD6                     TMR0L           equ	4054	;# 
  2168   000FD7                     TMR0H           equ	4055	;# 
  2169   000FD8                     STATUS          equ	4056	;# 
  2170   000FD9                     FSR2            equ	4057	;# 
  2171   000FD9                     FSR2L           equ	4057	;# 
  2172   000FDA                     FSR2H           equ	4058	;# 
  2173   000FDB                     PLUSW2          equ	4059	;# 
  2174   000FDC                     PREINC2         equ	4060	;# 
  2175   000FDD                     POSTDEC2        equ	4061	;# 
  2176   000FDE                     POSTINC2        equ	4062	;# 
  2177   000FDF                     INDF2           equ	4063	;# 
  2178   000FE0                     BSR             equ	4064	;# 
  2179   000FE1                     FSR1            equ	4065	;# 
  2180   000FE1                     FSR1L           equ	4065	;# 
  2181   000FE2                     FSR1H           equ	4066	;# 
  2182   000FE3                     PLUSW1          equ	4067	;# 
  2183   000FE4                     PREINC1         equ	4068	;# 
  2184   000FE5                     POSTDEC1        equ	4069	;# 
  2185   000FE6                     POSTINC1        equ	4070	;# 
  2186   000FE7                     INDF1           equ	4071	;# 
  2187   000FE8                     WREG            equ	4072	;# 
  2188   000FE9                     FSR0            equ	4073	;# 
  2189   000FE9                     FSR0L           equ	4073	;# 
  2190   000FEA                     FSR0H           equ	4074	;# 
  2191   000FEB                     PLUSW0          equ	4075	;# 
  2192   000FEC                     PREINC0         equ	4076	;# 
  2193   000FED                     POSTDEC0        equ	4077	;# 
  2194   000FEE                     POSTINC0        equ	4078	;# 
  2195   000FEF                     INDF0           equ	4079	;# 
  2196   000FF0                     INTCON3         equ	4080	;# 
  2197   000FF1                     INTCON2         equ	4081	;# 
  2198   000FF2                     INTCON          equ	4082	;# 
  2199   000FF3                     PROD            equ	4083	;# 
  2200   000FF3                     PRODL           equ	4083	;# 
  2201   000FF4                     PRODH           equ	4084	;# 
  2202   000FF5                     TABLAT          equ	4085	;# 
  2203   000FF6                     TBLPTR          equ	4086	;# 
  2204   000FF6                     TBLPTRL         equ	4086	;# 
  2205   000FF7                     TBLPTRH         equ	4087	;# 
  2206   000FF8                     TBLPTRU         equ	4088	;# 
  2207   000FF9                     PCLAT           equ	4089	;# 
  2208   000FF9                     PC              equ	4089	;# 
  2209   000FF9                     PCL             equ	4089	;# 
  2210   000FFA                     PCLATH          equ	4090	;# 
  2211   000FFB                     PCLATU          equ	4091	;# 
  2212   000FFC                     STKPTR          equ	4092	;# 
  2213   000FFD                     TOS             equ	4093	;# 
  2214   000FFD                     TOSL            equ	4093	;# 
  2215   000FFE                     TOSH            equ	4094	;# 
  2216   000FFF                     TOSU            equ	4095	;# 
  2217   000D60                     RXF6SIDH        equ	3424	;# 
  2218   000D61                     RXF6SIDL        equ	3425	;# 
  2219   000D62                     RXF6EIDH        equ	3426	;# 
  2220   000D63                     RXF6EIDL        equ	3427	;# 
  2221   000D64                     RXF7SIDH        equ	3428	;# 
  2222   000D65                     RXF7SIDL        equ	3429	;# 
  2223   000D66                     RXF7EIDH        equ	3430	;# 
  2224   000D67                     RXF7EIDL        equ	3431	;# 
  2225   000D68                     RXF8SIDH        equ	3432	;# 
  2226   000D69                     RXF8SIDL        equ	3433	;# 
  2227   000D6A                     RXF8EIDH        equ	3434	;# 
  2228   000D6B                     RXF8EIDL        equ	3435	;# 
  2229   000D70                     RXF9SIDH        equ	3440	;# 
  2230   000D71                     RXF9SIDL        equ	3441	;# 
  2231   000D72                     RXF9EIDH        equ	3442	;# 
  2232   000D73                     RXF9EIDL        equ	3443	;# 
  2233   000D74                     RXF10SIDH       equ	3444	;# 
  2234   000D75                     RXF10SIDL       equ	3445	;# 
  2235   000D76                     RXF10EIDH       equ	3446	;# 
  2236   000D77                     RXF10EIDL       equ	3447	;# 
  2237   000D78                     RXF11SIDH       equ	3448	;# 
  2238   000D79                     RXF11SIDL       equ	3449	;# 
  2239   000D7A                     RXF11EIDH       equ	3450	;# 
  2240   000D7B                     RXF11EIDL       equ	3451	;# 
  2241   000D80                     RXF12SIDH       equ	3456	;# 
  2242   000D81                     RXF12SIDL       equ	3457	;# 
  2243   000D82                     RXF12EIDH       equ	3458	;# 
  2244   000D83                     RXF12EIDL       equ	3459	;# 
  2245   000D84                     RXF13SIDH       equ	3460	;# 
  2246   000D85                     RXF13SIDL       equ	3461	;# 
  2247   000D86                     RXF13EIDH       equ	3462	;# 
  2248   000D87                     RXF13EIDL       equ	3463	;# 
  2249   000D88                     RXF14SIDH       equ	3464	;# 
  2250   000D89                     RXF14SIDL       equ	3465	;# 
  2251   000D8A                     RXF14EIDH       equ	3466	;# 
  2252   000D8B                     RXF14EIDL       equ	3467	;# 
  2253   000D90                     RXF15SIDH       equ	3472	;# 
  2254   000D91                     RXF15SIDL       equ	3473	;# 
  2255   000D92                     RXF15EIDH       equ	3474	;# 
  2256   000D93                     RXF15EIDL       equ	3475	;# 
  2257   000DD4                     RXFCON0         equ	3540	;# 
  2258   000DD5                     RXFCON1         equ	3541	;# 
  2259   000DD8                     SDFLC           equ	3544	;# 
  2260   000DE0                     RXFBCON0        equ	3552	;# 
  2261   000DE1                     RXFBCON1        equ	3553	;# 
  2262   000DE2                     RXFBCON2        equ	3554	;# 
  2263   000DE3                     RXFBCON3        equ	3555	;# 
  2264   000DE4                     RXFBCON4        equ	3556	;# 
  2265   000DE5                     RXFBCON5        equ	3557	;# 
  2266   000DE6                     RXFBCON6        equ	3558	;# 
  2267   000DE7                     RXFBCON7        equ	3559	;# 
  2268   000DF0                     MSEL0           equ	3568	;# 
  2269   000DF1                     MSEL1           equ	3569	;# 
  2270   000DF2                     MSEL2           equ	3570	;# 
  2271   000DF3                     MSEL3           equ	3571	;# 
  2272   000DF8                     BSEL0           equ	3576	;# 
  2273   000DFA                     BIE0            equ	3578	;# 
  2274   000DFC                     TXBIE           equ	3580	;# 
  2275   000E20                     B0CON           equ	3616	;# 
  2276   000E21                     B0SIDH          equ	3617	;# 
  2277   000E22                     B0SIDL          equ	3618	;# 
  2278   000E23                     B0EIDH          equ	3619	;# 
  2279   000E24                     B0EIDL          equ	3620	;# 
  2280   000E25                     B0DLC           equ	3621	;# 
  2281   000E26                     B0D0            equ	3622	;# 
  2282   000E27                     B0D1            equ	3623	;# 
  2283   000E28                     B0D2            equ	3624	;# 
  2284   000E29                     B0D3            equ	3625	;# 
  2285   000E2A                     B0D4            equ	3626	;# 
  2286   000E2B                     B0D5            equ	3627	;# 
  2287   000E2C                     B0D6            equ	3628	;# 
  2288   000E2D                     B0D7            equ	3629	;# 
  2289   000E2E                     CANSTAT_RO9     equ	3630	;# 
  2290   000E2F                     CANCON_RO9      equ	3631	;# 
  2291   000E30                     B1CON           equ	3632	;# 
  2292   000E31                     B1SIDH          equ	3633	;# 
  2293   000E32                     B1SIDL          equ	3634	;# 
  2294   000E33                     B1EIDH          equ	3635	;# 
  2295   000E34                     B1EIDL          equ	3636	;# 
  2296   000E35                     B1DLC           equ	3637	;# 
  2297   000E36                     B1D0            equ	3638	;# 
  2298   000E37                     B1D1            equ	3639	;# 
  2299   000E38                     B1D2            equ	3640	;# 
  2300   000E39                     B1D3            equ	3641	;# 
  2301   000E3A                     B1D4            equ	3642	;# 
  2302   000E3B                     B1D5            equ	3643	;# 
  2303   000E3C                     B1D6            equ	3644	;# 
  2304   000E3D                     B1D7            equ	3645	;# 
  2305   000E3E                     CANSTAT_RO8     equ	3646	;# 
  2306   000E3F                     CANCON_RO8      equ	3647	;# 
  2307   000E40                     B2CON           equ	3648	;# 
  2308   000E41                     B2SIDH          equ	3649	;# 
  2309   000E42                     B2SIDL          equ	3650	;# 
  2310   000E43                     B2EIDH          equ	3651	;# 
  2311   000E44                     B2EIDL          equ	3652	;# 
  2312   000E45                     B2DLC           equ	3653	;# 
  2313   000E46                     B2D0            equ	3654	;# 
  2314   000E47                     B2D1            equ	3655	;# 
  2315   000E48                     B2D2            equ	3656	;# 
  2316   000E49                     B2D3            equ	3657	;# 
  2317   000E4A                     B2D4            equ	3658	;# 
  2318   000E4B                     B2D5            equ	3659	;# 
  2319   000E4C                     B2D6            equ	3660	;# 
  2320   000E4D                     B2D7            equ	3661	;# 
  2321   000E4E                     CANSTAT_RO7     equ	3662	;# 
  2322   000E4F                     CANCON_RO7      equ	3663	;# 
  2323   000E50                     B3CON           equ	3664	;# 
  2324   000E51                     B3SIDH          equ	3665	;# 
  2325   000E52                     B3SIDL          equ	3666	;# 
  2326   000E53                     B3EIDH          equ	3667	;# 
  2327   000E54                     B3EIDL          equ	3668	;# 
  2328   000E55                     B3DLC           equ	3669	;# 
  2329   000E56                     B3D0            equ	3670	;# 
  2330   000E57                     B3D1            equ	3671	;# 
  2331   000E58                     B3D2            equ	3672	;# 
  2332   000E59                     B3D3            equ	3673	;# 
  2333   000E5A                     B3D4            equ	3674	;# 
  2334   000E5B                     B3D5            equ	3675	;# 
  2335   000E5C                     B3D6            equ	3676	;# 
  2336   000E5D                     B3D7            equ	3677	;# 
  2337   000E5E                     CANSTAT_RO6     equ	3678	;# 
  2338   000E5F                     CANCON_RO6      equ	3679	;# 
  2339   000E60                     B4CON           equ	3680	;# 
  2340   000E61                     B4SIDH          equ	3681	;# 
  2341   000E62                     B4SIDL          equ	3682	;# 
  2342   000E63                     B4EIDH          equ	3683	;# 
  2343   000E64                     B4EIDL          equ	3684	;# 
  2344   000E65                     B4DLC           equ	3685	;# 
  2345   000E66                     B4D0            equ	3686	;# 
  2346   000E67                     B4D1            equ	3687	;# 
  2347   000E68                     B4D2            equ	3688	;# 
  2348   000E69                     B4D3            equ	3689	;# 
  2349   000E6A                     B4D4            equ	3690	;# 
  2350   000E6B                     B4D5            equ	3691	;# 
  2351   000E6C                     B4D6            equ	3692	;# 
  2352   000E6D                     B4D7            equ	3693	;# 
  2353   000E6E                     CANSTAT_RO5     equ	3694	;# 
  2354   000E6F                     CANCON_RO5      equ	3695	;# 
  2355   000E70                     B5CON           equ	3696	;# 
  2356   000E71                     B5SIDH          equ	3697	;# 
  2357   000E72                     B5SIDL          equ	3698	;# 
  2358   000E73                     B5EIDH          equ	3699	;# 
  2359   000E74                     B5EIDL          equ	3700	;# 
  2360   000E75                     B5DLC           equ	3701	;# 
  2361   000E76                     B5D0            equ	3702	;# 
  2362   000E77                     B5D1            equ	3703	;# 
  2363   000E78                     B5D2            equ	3704	;# 
  2364   000E79                     B5D3            equ	3705	;# 
  2365   000E7A                     B5D4            equ	3706	;# 
  2366   000E7B                     B5D5            equ	3707	;# 
  2367   000E7C                     B5D6            equ	3708	;# 
  2368   000E7D                     B5D7            equ	3709	;# 
  2369   000E7E                     CANSTAT_RO4     equ	3710	;# 
  2370   000E7F                     CANCON_RO4      equ	3711	;# 
  2371   000F00                     RXF0SIDH        equ	3840	;# 
  2372   000F01                     RXF0SIDL        equ	3841	;# 
  2373   000F02                     RXF0EIDH        equ	3842	;# 
  2374   000F03                     RXF0EIDL        equ	3843	;# 
  2375   000F04                     RXF1SIDH        equ	3844	;# 
  2376   000F05                     RXF1SIDL        equ	3845	;# 
  2377   000F06                     RXF1EIDH        equ	3846	;# 
  2378   000F07                     RXF1EIDL        equ	3847	;# 
  2379   000F08                     RXF2SIDH        equ	3848	;# 
  2380   000F09                     RXF2SIDL        equ	3849	;# 
  2381   000F0A                     RXF2EIDH        equ	3850	;# 
  2382   000F0B                     RXF2EIDL        equ	3851	;# 
  2383   000F0C                     RXF3SIDH        equ	3852	;# 
  2384   000F0D                     RXF3SIDL        equ	3853	;# 
  2385   000F0E                     RXF3EIDH        equ	3854	;# 
  2386   000F0F                     RXF3EIDL        equ	3855	;# 
  2387   000F10                     RXF4SIDH        equ	3856	;# 
  2388   000F11                     RXF4SIDL        equ	3857	;# 
  2389   000F12                     RXF4EIDH        equ	3858	;# 
  2390   000F13                     RXF4EIDL        equ	3859	;# 
  2391   000F14                     RXF5SIDH        equ	3860	;# 
  2392   000F15                     RXF5SIDL        equ	3861	;# 
  2393   000F16                     RXF5EIDH        equ	3862	;# 
  2394   000F17                     RXF5EIDL        equ	3863	;# 
  2395   000F18                     RXM0SIDH        equ	3864	;# 
  2396   000F19                     RXM0SIDL        equ	3865	;# 
  2397   000F1A                     RXM0EIDH        equ	3866	;# 
  2398   000F1B                     RXM0EIDL        equ	3867	;# 
  2399   000F1C                     RXM1SIDH        equ	3868	;# 
  2400   000F1D                     RXM1SIDL        equ	3869	;# 
  2401   000F1E                     RXM1EIDH        equ	3870	;# 
  2402   000F1F                     RXM1EIDL        equ	3871	;# 
  2403   000F20                     TXB2CON         equ	3872	;# 
  2404   000F21                     TXB2SIDH        equ	3873	;# 
  2405   000F22                     TXB2SIDL        equ	3874	;# 
  2406   000F23                     TXB2EIDH        equ	3875	;# 
  2407   000F24                     TXB2EIDL        equ	3876	;# 
  2408   000F25                     TXB2DLC         equ	3877	;# 
  2409   000F26                     TXB2D0          equ	3878	;# 
  2410   000F27                     TXB2D1          equ	3879	;# 
  2411   000F28                     TXB2D2          equ	3880	;# 
  2412   000F29                     TXB2D3          equ	3881	;# 
  2413   000F2A                     TXB2D4          equ	3882	;# 
  2414   000F2B                     TXB2D5          equ	3883	;# 
  2415   000F2C                     TXB2D6          equ	3884	;# 
  2416   000F2D                     TXB2D7          equ	3885	;# 
  2417   000F2E                     CANSTAT_RO3     equ	3886	;# 
  2418   000F2F                     CANCON_RO3      equ	3887	;# 
  2419   000F30                     TXB1CON         equ	3888	;# 
  2420   000F31                     TXB1SIDH        equ	3889	;# 
  2421   000F32                     TXB1SIDL        equ	3890	;# 
  2422   000F33                     TXB1EIDH        equ	3891	;# 
  2423   000F34                     TXB1EIDL        equ	3892	;# 
  2424   000F35                     TXB1DLC         equ	3893	;# 
  2425   000F36                     TXB1D0          equ	3894	;# 
  2426   000F37                     TXB1D1          equ	3895	;# 
  2427   000F38                     TXB1D2          equ	3896	;# 
  2428   000F39                     TXB1D3          equ	3897	;# 
  2429   000F3A                     TXB1D4          equ	3898	;# 
  2430   000F3B                     TXB1D5          equ	3899	;# 
  2431   000F3C                     TXB1D6          equ	3900	;# 
  2432   000F3D                     TXB1D7          equ	3901	;# 
  2433   000F3E                     CANSTAT_RO2     equ	3902	;# 
  2434   000F3F                     CANCON_RO2      equ	3903	;# 
  2435   000F40                     TXB0CON         equ	3904	;# 
  2436   000F41                     TXB0SIDH        equ	3905	;# 
  2437   000F42                     TXB0SIDL        equ	3906	;# 
  2438   000F43                     TXB0EIDH        equ	3907	;# 
  2439   000F44                     TXB0EIDL        equ	3908	;# 
  2440   000F45                     TXB0DLC         equ	3909	;# 
  2441   000F46                     TXB0D0          equ	3910	;# 
  2442   000F47                     TXB0D1          equ	3911	;# 
  2443   000F48                     TXB0D2          equ	3912	;# 
  2444   000F49                     TXB0D3          equ	3913	;# 
  2445   000F4A                     TXB0D4          equ	3914	;# 
  2446   000F4B                     TXB0D5          equ	3915	;# 
  2447   000F4C                     TXB0D6          equ	3916	;# 
  2448   000F4D                     TXB0D7          equ	3917	;# 
  2449   000F4E                     CANSTAT_RO1     equ	3918	;# 
  2450   000F4F                     CANCON_RO1      equ	3919	;# 
  2451   000F50                     RXB1CON         equ	3920	;# 
  2452   000F51                     RXB1SIDH        equ	3921	;# 
  2453   000F52                     RXB1SIDL        equ	3922	;# 
  2454   000F53                     RXB1EIDH        equ	3923	;# 
  2455   000F54                     RXB1EIDL        equ	3924	;# 
  2456   000F55                     RXB1DLC         equ	3925	;# 
  2457   000F56                     RXB1D0          equ	3926	;# 
  2458   000F57                     RXB1D1          equ	3927	;# 
  2459   000F58                     RXB1D2          equ	3928	;# 
  2460   000F59                     RXB1D3          equ	3929	;# 
  2461   000F5A                     RXB1D4          equ	3930	;# 
  2462   000F5B                     RXB1D5          equ	3931	;# 
  2463   000F5C                     RXB1D6          equ	3932	;# 
  2464   000F5D                     RXB1D7          equ	3933	;# 
  2465   000F5E                     CANSTAT_RO0     equ	3934	;# 
  2466   000F5F                     CANCON_RO0      equ	3935	;# 
  2467   000F60                     RXB0CON         equ	3936	;# 
  2468   000F61                     RXB0SIDH        equ	3937	;# 
  2469   000F62                     RXB0SIDL        equ	3938	;# 
  2470   000F63                     RXB0EIDH        equ	3939	;# 
  2471   000F64                     RXB0EIDL        equ	3940	;# 
  2472   000F65                     RXB0DLC         equ	3941	;# 
  2473   000F66                     RXB0D0          equ	3942	;# 
  2474   000F67                     RXB0D1          equ	3943	;# 
  2475   000F68                     RXB0D2          equ	3944	;# 
  2476   000F69                     RXB0D3          equ	3945	;# 
  2477   000F6A                     RXB0D4          equ	3946	;# 
  2478   000F6B                     RXB0D5          equ	3947	;# 
  2479   000F6C                     RXB0D6          equ	3948	;# 
  2480   000F6D                     RXB0D7          equ	3949	;# 
  2481   000F6E                     CANSTAT         equ	3950	;# 
  2482   000F6F                     CANCON          equ	3951	;# 
  2483   000F70                     BRGCON1         equ	3952	;# 
  2484   000F71                     BRGCON2         equ	3953	;# 
  2485   000F72                     BRGCON3         equ	3954	;# 
  2486   000F73                     CIOCON          equ	3955	;# 
  2487   000F74                     COMSTAT         equ	3956	;# 
  2488   000F75                     RXERRCNT        equ	3957	;# 
  2489   000F76                     TXERRCNT        equ	3958	;# 
  2490   000F77                     ECANCON         equ	3959	;# 
  2491   000F80                     PORTA           equ	3968	;# 
  2492   000F81                     PORTB           equ	3969	;# 
  2493   000F82                     PORTC           equ	3970	;# 
  2494   000F83                     PORTD           equ	3971	;# 
  2495   000F84                     PORTE           equ	3972	;# 
  2496   000F89                     LATA            equ	3977	;# 
  2497   000F8A                     LATB            equ	3978	;# 
  2498   000F8B                     LATC            equ	3979	;# 
  2499   000F8C                     LATD            equ	3980	;# 
  2500   000F8D                     LATE            equ	3981	;# 
  2501   000F92                     TRISA           equ	3986	;# 
  2502   000F92                     DDRA            equ	3986	;# 
  2503   000F93                     TRISB           equ	3987	;# 
  2504   000F93                     DDRB            equ	3987	;# 
  2505   000F94                     TRISC           equ	3988	;# 
  2506   000F94                     DDRC            equ	3988	;# 
  2507   000F95                     TRISD           equ	3989	;# 
  2508   000F95                     DDRD            equ	3989	;# 
  2509   000F96                     TRISE           equ	3990	;# 
  2510   000F96                     DDRE            equ	3990	;# 
  2511   000F9B                     OSCTUNE         equ	3995	;# 
  2512   000F9D                     PIE1            equ	3997	;# 
  2513   000F9E                     PIR1            equ	3998	;# 
  2514   000F9F                     IPR1            equ	3999	;# 
  2515   000FA0                     PIE2            equ	4000	;# 
  2516   000FA1                     PIR2            equ	4001	;# 
  2517   000FA2                     IPR2            equ	4002	;# 
  2518   000FA3                     PIE3            equ	4003	;# 
  2519   000FA4                     PIR3            equ	4004	;# 
  2520   000FA5                     IPR3            equ	4005	;# 
  2521   000FA6                     EECON1          equ	4006	;# 
  2522   000FA7                     EECON2          equ	4007	;# 
  2523   000FA8                     EEDATA          equ	4008	;# 
  2524   000FA9                     EEADR           equ	4009	;# 
  2525   000FAB                     RCSTA           equ	4011	;# 
  2526   000FAB                     RCSTA1          equ	4011	;# 
  2527   000FAC                     TXSTA           equ	4012	;# 
  2528   000FAC                     TXSTA1          equ	4012	;# 
  2529   000FAD                     TXREG           equ	4013	;# 
  2530   000FAD                     TXREG1          equ	4013	;# 
  2531   000FAE                     RCREG           equ	4014	;# 
  2532   000FAE                     RCREG1          equ	4014	;# 
  2533   000FAF                     SPBRG           equ	4015	;# 
  2534   000FAF                     SPBRG1          equ	4015	;# 
  2535   000FB0                     SPBRGH          equ	4016	;# 
  2536   000FB1                     T3CON           equ	4017	;# 
  2537   000FB2                     TMR3            equ	4018	;# 
  2538   000FB2                     TMR3L           equ	4018	;# 
  2539   000FB3                     TMR3H           equ	4019	;# 
  2540   000FB4                     CMCON           equ	4020	;# 
  2541   000FB5                     CVRCON          equ	4021	;# 
  2542   000FB6                     ECCP1AS         equ	4022	;# 
  2543   000FB7                     ECCP1DEL        equ	4023	;# 
  2544   000FB8                     BAUDCON         equ	4024	;# 
  2545   000FB8                     BAUDCTL         equ	4024	;# 
  2546   000FBA                     ECCP1CON        equ	4026	;# 
  2547   000FBB                     ECCPR1          equ	4027	;# 
  2548   000FBB                     ECCPR1L         equ	4027	;# 
  2549   000FBC                     ECCPR1H         equ	4028	;# 
  2550   000FBD                     CCP1CON         equ	4029	;# 
  2551   000FBE                     CCPR1           equ	4030	;# 
  2552   000FBE                     CCPR1L          equ	4030	;# 
  2553   000FBF                     CCPR1H          equ	4031	;# 
  2554   000FC0                     ADCON2          equ	4032	;# 
  2555   000FC1                     ADCON1          equ	4033	;# 
  2556   000FC2                     ADCON0          equ	4034	;# 
  2557   000FC3                     ADRES           equ	4035	;# 
  2558   000FC3                     ADRESL          equ	4035	;# 
  2559   000FC4                     ADRESH          equ	4036	;# 
  2560   000FC5                     SSPCON2         equ	4037	;# 
  2561   000FC6                     SSPCON1         equ	4038	;# 
  2562   000FC7                     SSPSTAT         equ	4039	;# 
  2563   000FC8                     SSPADD          equ	4040	;# 
  2564   000FC9                     SSPBUF          equ	4041	;# 
  2565   000FCA                     T2CON           equ	4042	;# 
  2566   000FCB                     PR2             equ	4043	;# 
  2567   000FCB                     MEMCON          equ	4043	;# 
  2568   000FCC                     TMR2            equ	4044	;# 
  2569   000FCD                     T1CON           equ	4045	;# 
  2570   000FCE                     TMR1            equ	4046	;# 
  2571   000FCE                     TMR1L           equ	4046	;# 
  2572   000FCF                     TMR1H           equ	4047	;# 
  2573   000FD0                     RCON            equ	4048	;# 
  2574   000FD1                     WDTCON          equ	4049	;# 
  2575   000FD2                     HLVDCON         equ	4050	;# 
  2576   000FD2                     LVDCON          equ	4050	;# 
  2577   000FD3                     OSCCON          equ	4051	;# 
  2578   000FD5                     T0CON           equ	4053	;# 
  2579   000FD6                     TMR0            equ	4054	;# 
  2580   000FD6                     TMR0L           equ	4054	;# 
  2581   000FD7                     TMR0H           equ	4055	;# 
  2582   000FD8                     STATUS          equ	4056	;# 
  2583   000FD9                     FSR2            equ	4057	;# 
  2584   000FD9                     FSR2L           equ	4057	;# 
  2585   000FDA                     FSR2H           equ	4058	;# 
  2586   000FDB                     PLUSW2          equ	4059	;# 
  2587   000FDC                     PREINC2         equ	4060	;# 
  2588   000FDD                     POSTDEC2        equ	4061	;# 
  2589   000FDE                     POSTINC2        equ	4062	;# 
  2590   000FDF                     INDF2           equ	4063	;# 
  2591   000FE0                     BSR             equ	4064	;# 
  2592   000FE1                     FSR1            equ	4065	;# 
  2593   000FE1                     FSR1L           equ	4065	;# 
  2594   000FE2                     FSR1H           equ	4066	;# 
  2595   000FE3                     PLUSW1          equ	4067	;# 
  2596   000FE4                     PREINC1         equ	4068	;# 
  2597   000FE5                     POSTDEC1        equ	4069	;# 
  2598   000FE6                     POSTINC1        equ	4070	;# 
  2599   000FE7                     INDF1           equ	4071	;# 
  2600   000FE8                     WREG            equ	4072	;# 
  2601   000FE9                     FSR0            equ	4073	;# 
  2602   000FE9                     FSR0L           equ	4073	;# 
  2603   000FEA                     FSR0H           equ	4074	;# 
  2604   000FEB                     PLUSW0          equ	4075	;# 
  2605   000FEC                     PREINC0         equ	4076	;# 
  2606   000FED                     POSTDEC0        equ	4077	;# 
  2607   000FEE                     POSTINC0        equ	4078	;# 
  2608   000FEF                     INDF0           equ	4079	;# 
  2609   000FF0                     INTCON3         equ	4080	;# 
  2610   000FF1                     INTCON2         equ	4081	;# 
  2611   000FF2                     INTCON          equ	4082	;# 
  2612   000FF3                     PROD            equ	4083	;# 
  2613   000FF3                     PRODL           equ	4083	;# 
  2614   000FF4                     PRODH           equ	4084	;# 
  2615   000FF5                     TABLAT          equ	4085	;# 
  2616   000FF6                     TBLPTR          equ	4086	;# 
  2617   000FF6                     TBLPTRL         equ	4086	;# 
  2618   000FF7                     TBLPTRH         equ	4087	;# 
  2619   000FF8                     TBLPTRU         equ	4088	;# 
  2620   000FF9                     PCLAT           equ	4089	;# 
  2621   000FF9                     PC              equ	4089	;# 
  2622   000FF9                     PCL             equ	4089	;# 
  2623   000FFA                     PCLATH          equ	4090	;# 
  2624   000FFB                     PCLATU          equ	4091	;# 
  2625   000FFC                     STKPTR          equ	4092	;# 
  2626   000FFD                     TOS             equ	4093	;# 
  2627   000FFD                     TOSL            equ	4093	;# 
  2628   000FFE                     TOSH            equ	4094	;# 
  2629   000FFF                     TOSU            equ	4095	;# 
  2630   000D60                     RXF6SIDH        equ	3424	;# 
  2631   000D61                     RXF6SIDL        equ	3425	;# 
  2632   000D62                     RXF6EIDH        equ	3426	;# 
  2633   000D63                     RXF6EIDL        equ	3427	;# 
  2634   000D64                     RXF7SIDH        equ	3428	;# 
  2635   000D65                     RXF7SIDL        equ	3429	;# 
  2636   000D66                     RXF7EIDH        equ	3430	;# 
  2637   000D67                     RXF7EIDL        equ	3431	;# 
  2638   000D68                     RXF8SIDH        equ	3432	;# 
  2639   000D69                     RXF8SIDL        equ	3433	;# 
  2640   000D6A                     RXF8EIDH        equ	3434	;# 
  2641   000D6B                     RXF8EIDL        equ	3435	;# 
  2642   000D70                     RXF9SIDH        equ	3440	;# 
  2643   000D71                     RXF9SIDL        equ	3441	;# 
  2644   000D72                     RXF9EIDH        equ	3442	;# 
  2645   000D73                     RXF9EIDL        equ	3443	;# 
  2646   000D74                     RXF10SIDH       equ	3444	;# 
  2647   000D75                     RXF10SIDL       equ	3445	;# 
  2648   000D76                     RXF10EIDH       equ	3446	;# 
  2649   000D77                     RXF10EIDL       equ	3447	;# 
  2650   000D78                     RXF11SIDH       equ	3448	;# 
  2651   000D79                     RXF11SIDL       equ	3449	;# 
  2652   000D7A                     RXF11EIDH       equ	3450	;# 
  2653   000D7B                     RXF11EIDL       equ	3451	;# 
  2654   000D80                     RXF12SIDH       equ	3456	;# 
  2655   000D81                     RXF12SIDL       equ	3457	;# 
  2656   000D82                     RXF12EIDH       equ	3458	;# 
  2657   000D83                     RXF12EIDL       equ	3459	;# 
  2658   000D84                     RXF13SIDH       equ	3460	;# 
  2659   000D85                     RXF13SIDL       equ	3461	;# 
  2660   000D86                     RXF13EIDH       equ	3462	;# 
  2661   000D87                     RXF13EIDL       equ	3463	;# 
  2662   000D88                     RXF14SIDH       equ	3464	;# 
  2663   000D89                     RXF14SIDL       equ	3465	;# 
  2664   000D8A                     RXF14EIDH       equ	3466	;# 
  2665   000D8B                     RXF14EIDL       equ	3467	;# 
  2666   000D90                     RXF15SIDH       equ	3472	;# 
  2667   000D91                     RXF15SIDL       equ	3473	;# 
  2668   000D92                     RXF15EIDH       equ	3474	;# 
  2669   000D93                     RXF15EIDL       equ	3475	;# 
  2670   000DD4                     RXFCON0         equ	3540	;# 
  2671   000DD5                     RXFCON1         equ	3541	;# 
  2672   000DD8                     SDFLC           equ	3544	;# 
  2673   000DE0                     RXFBCON0        equ	3552	;# 
  2674   000DE1                     RXFBCON1        equ	3553	;# 
  2675   000DE2                     RXFBCON2        equ	3554	;# 
  2676   000DE3                     RXFBCON3        equ	3555	;# 
  2677   000DE4                     RXFBCON4        equ	3556	;# 
  2678   000DE5                     RXFBCON5        equ	3557	;# 
  2679   000DE6                     RXFBCON6        equ	3558	;# 
  2680   000DE7                     RXFBCON7        equ	3559	;# 
  2681   000DF0                     MSEL0           equ	3568	;# 
  2682   000DF1                     MSEL1           equ	3569	;# 
  2683   000DF2                     MSEL2           equ	3570	;# 
  2684   000DF3                     MSEL3           equ	3571	;# 
  2685   000DF8                     BSEL0           equ	3576	;# 
  2686   000DFA                     BIE0            equ	3578	;# 
  2687   000DFC                     TXBIE           equ	3580	;# 
  2688   000E20                     B0CON           equ	3616	;# 
  2689   000E21                     B0SIDH          equ	3617	;# 
  2690   000E22                     B0SIDL          equ	3618	;# 
  2691   000E23                     B0EIDH          equ	3619	;# 
  2692   000E24                     B0EIDL          equ	3620	;# 
  2693   000E25                     B0DLC           equ	3621	;# 
  2694   000E26                     B0D0            equ	3622	;# 
  2695   000E27                     B0D1            equ	3623	;# 
  2696   000E28                     B0D2            equ	3624	;# 
  2697   000E29                     B0D3            equ	3625	;# 
  2698   000E2A                     B0D4            equ	3626	;# 
  2699   000E2B                     B0D5            equ	3627	;# 
  2700   000E2C                     B0D6            equ	3628	;# 
  2701   000E2D                     B0D7            equ	3629	;# 
  2702   000E2E                     CANSTAT_RO9     equ	3630	;# 
  2703   000E2F                     CANCON_RO9      equ	3631	;# 
  2704   000E30                     B1CON           equ	3632	;# 
  2705   000E31                     B1SIDH          equ	3633	;# 
  2706   000E32                     B1SIDL          equ	3634	;# 
  2707   000E33                     B1EIDH          equ	3635	;# 
  2708   000E34                     B1EIDL          equ	3636	;# 
  2709   000E35                     B1DLC           equ	3637	;# 
  2710   000E36                     B1D0            equ	3638	;# 
  2711   000E37                     B1D1            equ	3639	;# 
  2712   000E38                     B1D2            equ	3640	;# 
  2713   000E39                     B1D3            equ	3641	;# 
  2714   000E3A                     B1D4            equ	3642	;# 
  2715   000E3B                     B1D5            equ	3643	;# 
  2716   000E3C                     B1D6            equ	3644	;# 
  2717   000E3D                     B1D7            equ	3645	;# 
  2718   000E3E                     CANSTAT_RO8     equ	3646	;# 
  2719   000E3F                     CANCON_RO8      equ	3647	;# 
  2720   000E40                     B2CON           equ	3648	;# 
  2721   000E41                     B2SIDH          equ	3649	;# 
  2722   000E42                     B2SIDL          equ	3650	;# 
  2723   000E43                     B2EIDH          equ	3651	;# 
  2724   000E44                     B2EIDL          equ	3652	;# 
  2725   000E45                     B2DLC           equ	3653	;# 
  2726   000E46                     B2D0            equ	3654	;# 
  2727   000E47                     B2D1            equ	3655	;# 
  2728   000E48                     B2D2            equ	3656	;# 
  2729   000E49                     B2D3            equ	3657	;# 
  2730   000E4A                     B2D4            equ	3658	;# 
  2731   000E4B                     B2D5            equ	3659	;# 
  2732   000E4C                     B2D6            equ	3660	;# 
  2733   000E4D                     B2D7            equ	3661	;# 
  2734   000E4E                     CANSTAT_RO7     equ	3662	;# 
  2735   000E4F                     CANCON_RO7      equ	3663	;# 
  2736   000E50                     B3CON           equ	3664	;# 
  2737   000E51                     B3SIDH          equ	3665	;# 
  2738   000E52                     B3SIDL          equ	3666	;# 
  2739   000E53                     B3EIDH          equ	3667	;# 
  2740   000E54                     B3EIDL          equ	3668	;# 
  2741   000E55                     B3DLC           equ	3669	;# 
  2742   000E56                     B3D0            equ	3670	;# 
  2743   000E57                     B3D1            equ	3671	;# 
  2744   000E58                     B3D2            equ	3672	;# 
  2745   000E59                     B3D3            equ	3673	;# 
  2746   000E5A                     B3D4            equ	3674	;# 
  2747   000E5B                     B3D5            equ	3675	;# 
  2748   000E5C                     B3D6            equ	3676	;# 
  2749   000E5D                     B3D7            equ	3677	;# 
  2750   000E5E                     CANSTAT_RO6     equ	3678	;# 
  2751   000E5F                     CANCON_RO6      equ	3679	;# 
  2752   000E60                     B4CON           equ	3680	;# 
  2753   000E61                     B4SIDH          equ	3681	;# 
  2754   000E62                     B4SIDL          equ	3682	;# 
  2755   000E63                     B4EIDH          equ	3683	;# 
  2756   000E64                     B4EIDL          equ	3684	;# 
  2757   000E65                     B4DLC           equ	3685	;# 
  2758   000E66                     B4D0            equ	3686	;# 
  2759   000E67                     B4D1            equ	3687	;# 
  2760   000E68                     B4D2            equ	3688	;# 
  2761   000E69                     B4D3            equ	3689	;# 
  2762   000E6A                     B4D4            equ	3690	;# 
  2763   000E6B                     B4D5            equ	3691	;# 
  2764   000E6C                     B4D6            equ	3692	;# 
  2765   000E6D                     B4D7            equ	3693	;# 
  2766   000E6E                     CANSTAT_RO5     equ	3694	;# 
  2767   000E6F                     CANCON_RO5      equ	3695	;# 
  2768   000E70                     B5CON           equ	3696	;# 
  2769   000E71                     B5SIDH          equ	3697	;# 
  2770   000E72                     B5SIDL          equ	3698	;# 
  2771   000E73                     B5EIDH          equ	3699	;# 
  2772   000E74                     B5EIDL          equ	3700	;# 
  2773   000E75                     B5DLC           equ	3701	;# 
  2774   000E76                     B5D0            equ	3702	;# 
  2775   000E77                     B5D1            equ	3703	;# 
  2776   000E78                     B5D2            equ	3704	;# 
  2777   000E79                     B5D3            equ	3705	;# 
  2778   000E7A                     B5D4            equ	3706	;# 
  2779   000E7B                     B5D5            equ	3707	;# 
  2780   000E7C                     B5D6            equ	3708	;# 
  2781   000E7D                     B5D7            equ	3709	;# 
  2782   000E7E                     CANSTAT_RO4     equ	3710	;# 
  2783   000E7F                     CANCON_RO4      equ	3711	;# 
  2784   000F00                     RXF0SIDH        equ	3840	;# 
  2785   000F01                     RXF0SIDL        equ	3841	;# 
  2786   000F02                     RXF0EIDH        equ	3842	;# 
  2787   000F03                     RXF0EIDL        equ	3843	;# 
  2788   000F04                     RXF1SIDH        equ	3844	;# 
  2789   000F05                     RXF1SIDL        equ	3845	;# 
  2790   000F06                     RXF1EIDH        equ	3846	;# 
  2791   000F07                     RXF1EIDL        equ	3847	;# 
  2792   000F08                     RXF2SIDH        equ	3848	;# 
  2793   000F09                     RXF2SIDL        equ	3849	;# 
  2794   000F0A                     RXF2EIDH        equ	3850	;# 
  2795   000F0B                     RXF2EIDL        equ	3851	;# 
  2796   000F0C                     RXF3SIDH        equ	3852	;# 
  2797   000F0D                     RXF3SIDL        equ	3853	;# 
  2798   000F0E                     RXF3EIDH        equ	3854	;# 
  2799   000F0F                     RXF3EIDL        equ	3855	;# 
  2800   000F10                     RXF4SIDH        equ	3856	;# 
  2801   000F11                     RXF4SIDL        equ	3857	;# 
  2802   000F12                     RXF4EIDH        equ	3858	;# 
  2803   000F13                     RXF4EIDL        equ	3859	;# 
  2804   000F14                     RXF5SIDH        equ	3860	;# 
  2805   000F15                     RXF5SIDL        equ	3861	;# 
  2806   000F16                     RXF5EIDH        equ	3862	;# 
  2807   000F17                     RXF5EIDL        equ	3863	;# 
  2808   000F18                     RXM0SIDH        equ	3864	;# 
  2809   000F19                     RXM0SIDL        equ	3865	;# 
  2810   000F1A                     RXM0EIDH        equ	3866	;# 
  2811   000F1B                     RXM0EIDL        equ	3867	;# 
  2812   000F1C                     RXM1SIDH        equ	3868	;# 
  2813   000F1D                     RXM1SIDL        equ	3869	;# 
  2814   000F1E                     RXM1EIDH        equ	3870	;# 
  2815   000F1F                     RXM1EIDL        equ	3871	;# 
  2816   000F20                     TXB2CON         equ	3872	;# 
  2817   000F21                     TXB2SIDH        equ	3873	;# 
  2818   000F22                     TXB2SIDL        equ	3874	;# 
  2819   000F23                     TXB2EIDH        equ	3875	;# 
  2820   000F24                     TXB2EIDL        equ	3876	;# 
  2821   000F25                     TXB2DLC         equ	3877	;# 
  2822   000F26                     TXB2D0          equ	3878	;# 
  2823   000F27                     TXB2D1          equ	3879	;# 
  2824   000F28                     TXB2D2          equ	3880	;# 
  2825   000F29                     TXB2D3          equ	3881	;# 
  2826   000F2A                     TXB2D4          equ	3882	;# 
  2827   000F2B                     TXB2D5          equ	3883	;# 
  2828   000F2C                     TXB2D6          equ	3884	;# 
  2829   000F2D                     TXB2D7          equ	3885	;# 
  2830   000F2E                     CANSTAT_RO3     equ	3886	;# 
  2831   000F2F                     CANCON_RO3      equ	3887	;# 
  2832   000F30                     TXB1CON         equ	3888	;# 
  2833   000F31                     TXB1SIDH        equ	3889	;# 
  2834   000F32                     TXB1SIDL        equ	3890	;# 
  2835   000F33                     TXB1EIDH        equ	3891	;# 
  2836   000F34                     TXB1EIDL        equ	3892	;# 
  2837   000F35                     TXB1DLC         equ	3893	;# 
  2838   000F36                     TXB1D0          equ	3894	;# 
  2839   000F37                     TXB1D1          equ	3895	;# 
  2840   000F38                     TXB1D2          equ	3896	;# 
  2841   000F39                     TXB1D3          equ	3897	;# 
  2842   000F3A                     TXB1D4          equ	3898	;# 
  2843   000F3B                     TXB1D5          equ	3899	;# 
  2844   000F3C                     TXB1D6          equ	3900	;# 
  2845   000F3D                     TXB1D7          equ	3901	;# 
  2846   000F3E                     CANSTAT_RO2     equ	3902	;# 
  2847   000F3F                     CANCON_RO2      equ	3903	;# 
  2848   000F40                     TXB0CON         equ	3904	;# 
  2849   000F41                     TXB0SIDH        equ	3905	;# 
  2850   000F42                     TXB0SIDL        equ	3906	;# 
  2851   000F43                     TXB0EIDH        equ	3907	;# 
  2852   000F44                     TXB0EIDL        equ	3908	;# 
  2853   000F45                     TXB0DLC         equ	3909	;# 
  2854   000F46                     TXB0D0          equ	3910	;# 
  2855   000F47                     TXB0D1          equ	3911	;# 
  2856   000F48                     TXB0D2          equ	3912	;# 
  2857   000F49                     TXB0D3          equ	3913	;# 
  2858   000F4A                     TXB0D4          equ	3914	;# 
  2859   000F4B                     TXB0D5          equ	3915	;# 
  2860   000F4C                     TXB0D6          equ	3916	;# 
  2861   000F4D                     TXB0D7          equ	3917	;# 
  2862   000F4E                     CANSTAT_RO1     equ	3918	;# 
  2863   000F4F                     CANCON_RO1      equ	3919	;# 
  2864   000F50                     RXB1CON         equ	3920	;# 
  2865   000F51                     RXB1SIDH        equ	3921	;# 
  2866   000F52                     RXB1SIDL        equ	3922	;# 
  2867   000F53                     RXB1EIDH        equ	3923	;# 
  2868   000F54                     RXB1EIDL        equ	3924	;# 
  2869   000F55                     RXB1DLC         equ	3925	;# 
  2870   000F56                     RXB1D0          equ	3926	;# 
  2871   000F57                     RXB1D1          equ	3927	;# 
  2872   000F58                     RXB1D2          equ	3928	;# 
  2873   000F59                     RXB1D3          equ	3929	;# 
  2874   000F5A                     RXB1D4          equ	3930	;# 
  2875   000F5B                     RXB1D5          equ	3931	;# 
  2876   000F5C                     RXB1D6          equ	3932	;# 
  2877   000F5D                     RXB1D7          equ	3933	;# 
  2878   000F5E                     CANSTAT_RO0     equ	3934	;# 
  2879   000F5F                     CANCON_RO0      equ	3935	;# 
  2880   000F60                     RXB0CON         equ	3936	;# 
  2881   000F61                     RXB0SIDH        equ	3937	;# 
  2882   000F62                     RXB0SIDL        equ	3938	;# 
  2883   000F63                     RXB0EIDH        equ	3939	;# 
  2884   000F64                     RXB0EIDL        equ	3940	;# 
  2885   000F65                     RXB0DLC         equ	3941	;# 
  2886   000F66                     RXB0D0          equ	3942	;# 
  2887   000F67                     RXB0D1          equ	3943	;# 
  2888   000F68                     RXB0D2          equ	3944	;# 
  2889   000F69                     RXB0D3          equ	3945	;# 
  2890   000F6A                     RXB0D4          equ	3946	;# 
  2891   000F6B                     RXB0D5          equ	3947	;# 
  2892   000F6C                     RXB0D6          equ	3948	;# 
  2893   000F6D                     RXB0D7          equ	3949	;# 
  2894   000F6E                     CANSTAT         equ	3950	;# 
  2895   000F6F                     CANCON          equ	3951	;# 
  2896   000F70                     BRGCON1         equ	3952	;# 
  2897   000F71                     BRGCON2         equ	3953	;# 
  2898   000F72                     BRGCON3         equ	3954	;# 
  2899   000F73                     CIOCON          equ	3955	;# 
  2900   000F74                     COMSTAT         equ	3956	;# 
  2901   000F75                     RXERRCNT        equ	3957	;# 
  2902   000F76                     TXERRCNT        equ	3958	;# 
  2903   000F77                     ECANCON         equ	3959	;# 
  2904   000F80                     PORTA           equ	3968	;# 
  2905   000F81                     PORTB           equ	3969	;# 
  2906   000F82                     PORTC           equ	3970	;# 
  2907   000F83                     PORTD           equ	3971	;# 
  2908   000F84                     PORTE           equ	3972	;# 
  2909   000F89                     LATA            equ	3977	;# 
  2910   000F8A                     LATB            equ	3978	;# 
  2911   000F8B                     LATC            equ	3979	;# 
  2912   000F8C                     LATD            equ	3980	;# 
  2913   000F8D                     LATE            equ	3981	;# 
  2914   000F92                     TRISA           equ	3986	;# 
  2915   000F92                     DDRA            equ	3986	;# 
  2916   000F93                     TRISB           equ	3987	;# 
  2917   000F93                     DDRB            equ	3987	;# 
  2918   000F94                     TRISC           equ	3988	;# 
  2919   000F94                     DDRC            equ	3988	;# 
  2920   000F95                     TRISD           equ	3989	;# 
  2921   000F95                     DDRD            equ	3989	;# 
  2922   000F96                     TRISE           equ	3990	;# 
  2923   000F96                     DDRE            equ	3990	;# 
  2924   000F9B                     OSCTUNE         equ	3995	;# 
  2925   000F9D                     PIE1            equ	3997	;# 
  2926   000F9E                     PIR1            equ	3998	;# 
  2927   000F9F                     IPR1            equ	3999	;# 
  2928   000FA0                     PIE2            equ	4000	;# 
  2929   000FA1                     PIR2            equ	4001	;# 
  2930   000FA2                     IPR2            equ	4002	;# 
  2931   000FA3                     PIE3            equ	4003	;# 
  2932   000FA4                     PIR3            equ	4004	;# 
  2933   000FA5                     IPR3            equ	4005	;# 
  2934   000FA6                     EECON1          equ	4006	;# 
  2935   000FA7                     EECON2          equ	4007	;# 
  2936   000FA8                     EEDATA          equ	4008	;# 
  2937   000FA9                     EEADR           equ	4009	;# 
  2938   000FAB                     RCSTA           equ	4011	;# 
  2939   000FAB                     RCSTA1          equ	4011	;# 
  2940   000FAC                     TXSTA           equ	4012	;# 
  2941   000FAC                     TXSTA1          equ	4012	;# 
  2942   000FAD                     TXREG           equ	4013	;# 
  2943   000FAD                     TXREG1          equ	4013	;# 
  2944   000FAE                     RCREG           equ	4014	;# 
  2945   000FAE                     RCREG1          equ	4014	;# 
  2946   000FAF                     SPBRG           equ	4015	;# 
  2947   000FAF                     SPBRG1          equ	4015	;# 
  2948   000FB0                     SPBRGH          equ	4016	;# 
  2949   000FB1                     T3CON           equ	4017	;# 
  2950   000FB2                     TMR3            equ	4018	;# 
  2951   000FB2                     TMR3L           equ	4018	;# 
  2952   000FB3                     TMR3H           equ	4019	;# 
  2953   000FB4                     CMCON           equ	4020	;# 
  2954   000FB5                     CVRCON          equ	4021	;# 
  2955   000FB6                     ECCP1AS         equ	4022	;# 
  2956   000FB7                     ECCP1DEL        equ	4023	;# 
  2957   000FB8                     BAUDCON         equ	4024	;# 
  2958   000FB8                     BAUDCTL         equ	4024	;# 
  2959   000FBA                     ECCP1CON        equ	4026	;# 
  2960   000FBB                     ECCPR1          equ	4027	;# 
  2961   000FBB                     ECCPR1L         equ	4027	;# 
  2962   000FBC                     ECCPR1H         equ	4028	;# 
  2963   000FBD                     CCP1CON         equ	4029	;# 
  2964   000FBE                     CCPR1           equ	4030	;# 
  2965   000FBE                     CCPR1L          equ	4030	;# 
  2966   000FBF                     CCPR1H          equ	4031	;# 
  2967   000FC0                     ADCON2          equ	4032	;# 
  2968   000FC1                     ADCON1          equ	4033	;# 
  2969   000FC2                     ADCON0          equ	4034	;# 
  2970   000FC3                     ADRES           equ	4035	;# 
  2971   000FC3                     ADRESL          equ	4035	;# 
  2972   000FC4                     ADRESH          equ	4036	;# 
  2973   000FC5                     SSPCON2         equ	4037	;# 
  2974   000FC6                     SSPCON1         equ	4038	;# 
  2975   000FC7                     SSPSTAT         equ	4039	;# 
  2976   000FC8                     SSPADD          equ	4040	;# 
  2977   000FC9                     SSPBUF          equ	4041	;# 
  2978   000FCA                     T2CON           equ	4042	;# 
  2979   000FCB                     PR2             equ	4043	;# 
  2980   000FCB                     MEMCON          equ	4043	;# 
  2981   000FCC                     TMR2            equ	4044	;# 
  2982   000FCD                     T1CON           equ	4045	;# 
  2983   000FCE                     TMR1            equ	4046	;# 
  2984   000FCE                     TMR1L           equ	4046	;# 
  2985   000FCF                     TMR1H           equ	4047	;# 
  2986   000FD0                     RCON            equ	4048	;# 
  2987   000FD1                     WDTCON          equ	4049	;# 
  2988   000FD2                     HLVDCON         equ	4050	;# 
  2989   000FD2                     LVDCON          equ	4050	;# 
  2990   000FD3                     OSCCON          equ	4051	;# 
  2991   000FD5                     T0CON           equ	4053	;# 
  2992   000FD6                     TMR0            equ	4054	;# 
  2993   000FD6                     TMR0L           equ	4054	;# 
  2994   000FD7                     TMR0H           equ	4055	;# 
  2995   000FD8                     STATUS          equ	4056	;# 
  2996   000FD9                     FSR2            equ	4057	;# 
  2997   000FD9                     FSR2L           equ	4057	;# 
  2998   000FDA                     FSR2H           equ	4058	;# 
  2999   000FDB                     PLUSW2          equ	4059	;# 
  3000   000FDC                     PREINC2         equ	4060	;# 
  3001   000FDD                     POSTDEC2        equ	4061	;# 
  3002   000FDE                     POSTINC2        equ	4062	;# 
  3003   000FDF                     INDF2           equ	4063	;# 
  3004   000FE0                     BSR             equ	4064	;# 
  3005   000FE1                     FSR1            equ	4065	;# 
  3006   000FE1                     FSR1L           equ	4065	;# 
  3007   000FE2                     FSR1H           equ	4066	;# 
  3008   000FE3                     PLUSW1          equ	4067	;# 
  3009   000FE4                     PREINC1         equ	4068	;# 
  3010   000FE5                     POSTDEC1        equ	4069	;# 
  3011   000FE6                     POSTINC1        equ	4070	;# 
  3012   000FE7                     INDF1           equ	4071	;# 
  3013   000FE8                     WREG            equ	4072	;# 
  3014   000FE9                     FSR0            equ	4073	;# 
  3015   000FE9                     FSR0L           equ	4073	;# 
  3016   000FEA                     FSR0H           equ	4074	;# 
  3017   000FEB                     PLUSW0          equ	4075	;# 
  3018   000FEC                     PREINC0         equ	4076	;# 
  3019   000FED                     POSTDEC0        equ	4077	;# 
  3020   000FEE                     POSTINC0        equ	4078	;# 
  3021   000FEF                     INDF0           equ	4079	;# 
  3022   000FF0                     INTCON3         equ	4080	;# 
  3023   000FF1                     INTCON2         equ	4081	;# 
  3024   000FF2                     INTCON          equ	4082	;# 
  3025   000FF3                     PROD            equ	4083	;# 
  3026   000FF3                     PRODL           equ	4083	;# 
  3027   000FF4                     PRODH           equ	4084	;# 
  3028   000FF5                     TABLAT          equ	4085	;# 
  3029   000FF6                     TBLPTR          equ	4086	;# 
  3030   000FF6                     TBLPTRL         equ	4086	;# 
  3031   000FF7                     TBLPTRH         equ	4087	;# 
  3032   000FF8                     TBLPTRU         equ	4088	;# 
  3033   000FF9                     PCLAT           equ	4089	;# 
  3034   000FF9                     PC              equ	4089	;# 
  3035   000FF9                     PCL             equ	4089	;# 
  3036   000FFA                     PCLATH          equ	4090	;# 
  3037   000FFB                     PCLATU          equ	4091	;# 
  3038   000FFC                     STKPTR          equ	4092	;# 
  3039   000FFD                     TOS             equ	4093	;# 
  3040   000FFD                     TOSL            equ	4093	;# 
  3041   000FFE                     TOSH            equ	4094	;# 
  3042   000FFF                     TOSU            equ	4095	;# 
  3043   000D60                     RXF6SIDH        equ	3424	;# 
  3044   000D61                     RXF6SIDL        equ	3425	;# 
  3045   000D62                     RXF6EIDH        equ	3426	;# 
  3046   000D63                     RXF6EIDL        equ	3427	;# 
  3047   000D64                     RXF7SIDH        equ	3428	;# 
  3048   000D65                     RXF7SIDL        equ	3429	;# 
  3049   000D66                     RXF7EIDH        equ	3430	;# 
  3050   000D67                     RXF7EIDL        equ	3431	;# 
  3051   000D68                     RXF8SIDH        equ	3432	;# 
  3052   000D69                     RXF8SIDL        equ	3433	;# 
  3053   000D6A                     RXF8EIDH        equ	3434	;# 
  3054   000D6B                     RXF8EIDL        equ	3435	;# 
  3055   000D70                     RXF9SIDH        equ	3440	;# 
  3056   000D71                     RXF9SIDL        equ	3441	;# 
  3057   000D72                     RXF9EIDH        equ	3442	;# 
  3058   000D73                     RXF9EIDL        equ	3443	;# 
  3059   000D74                     RXF10SIDH       equ	3444	;# 
  3060   000D75                     RXF10SIDL       equ	3445	;# 
  3061   000D76                     RXF10EIDH       equ	3446	;# 
  3062   000D77                     RXF10EIDL       equ	3447	;# 
  3063   000D78                     RXF11SIDH       equ	3448	;# 
  3064   000D79                     RXF11SIDL       equ	3449	;# 
  3065   000D7A                     RXF11EIDH       equ	3450	;# 
  3066   000D7B                     RXF11EIDL       equ	3451	;# 
  3067   000D80                     RXF12SIDH       equ	3456	;# 
  3068   000D81                     RXF12SIDL       equ	3457	;# 
  3069   000D82                     RXF12EIDH       equ	3458	;# 
  3070   000D83                     RXF12EIDL       equ	3459	;# 
  3071   000D84                     RXF13SIDH       equ	3460	;# 
  3072   000D85                     RXF13SIDL       equ	3461	;# 
  3073   000D86                     RXF13EIDH       equ	3462	;# 
  3074   000D87                     RXF13EIDL       equ	3463	;# 
  3075   000D88                     RXF14SIDH       equ	3464	;# 
  3076   000D89                     RXF14SIDL       equ	3465	;# 
  3077   000D8A                     RXF14EIDH       equ	3466	;# 
  3078   000D8B                     RXF14EIDL       equ	3467	;# 
  3079   000D90                     RXF15SIDH       equ	3472	;# 
  3080   000D91                     RXF15SIDL       equ	3473	;# 
  3081   000D92                     RXF15EIDH       equ	3474	;# 
  3082   000D93                     RXF15EIDL       equ	3475	;# 
  3083   000DD4                     RXFCON0         equ	3540	;# 
  3084   000DD5                     RXFCON1         equ	3541	;# 
  3085   000DD8                     SDFLC           equ	3544	;# 
  3086   000DE0                     RXFBCON0        equ	3552	;# 
  3087   000DE1                     RXFBCON1        equ	3553	;# 
  3088   000DE2                     RXFBCON2        equ	3554	;# 
  3089   000DE3                     RXFBCON3        equ	3555	;# 
  3090   000DE4                     RXFBCON4        equ	3556	;# 
  3091   000DE5                     RXFBCON5        equ	3557	;# 
  3092   000DE6                     RXFBCON6        equ	3558	;# 
  3093   000DE7                     RXFBCON7        equ	3559	;# 
  3094   000DF0                     MSEL0           equ	3568	;# 
  3095   000DF1                     MSEL1           equ	3569	;# 
  3096   000DF2                     MSEL2           equ	3570	;# 
  3097   000DF3                     MSEL3           equ	3571	;# 
  3098   000DF8                     BSEL0           equ	3576	;# 
  3099   000DFA                     BIE0            equ	3578	;# 
  3100   000DFC                     TXBIE           equ	3580	;# 
  3101   000E20                     B0CON           equ	3616	;# 
  3102   000E21                     B0SIDH          equ	3617	;# 
  3103   000E22                     B0SIDL          equ	3618	;# 
  3104   000E23                     B0EIDH          equ	3619	;# 
  3105   000E24                     B0EIDL          equ	3620	;# 
  3106   000E25                     B0DLC           equ	3621	;# 
  3107   000E26                     B0D0            equ	3622	;# 
  3108   000E27                     B0D1            equ	3623	;# 
  3109   000E28                     B0D2            equ	3624	;# 
  3110   000E29                     B0D3            equ	3625	;# 
  3111   000E2A                     B0D4            equ	3626	;# 
  3112   000E2B                     B0D5            equ	3627	;# 
  3113   000E2C                     B0D6            equ	3628	;# 
  3114   000E2D                     B0D7            equ	3629	;# 
  3115   000E2E                     CANSTAT_RO9     equ	3630	;# 
  3116   000E2F                     CANCON_RO9      equ	3631	;# 
  3117   000E30                     B1CON           equ	3632	;# 
  3118   000E31                     B1SIDH          equ	3633	;# 
  3119   000E32                     B1SIDL          equ	3634	;# 
  3120   000E33                     B1EIDH          equ	3635	;# 
  3121   000E34                     B1EIDL          equ	3636	;# 
  3122   000E35                     B1DLC           equ	3637	;# 
  3123   000E36                     B1D0            equ	3638	;# 
  3124   000E37                     B1D1            equ	3639	;# 
  3125   000E38                     B1D2            equ	3640	;# 
  3126   000E39                     B1D3            equ	3641	;# 
  3127   000E3A                     B1D4            equ	3642	;# 
  3128   000E3B                     B1D5            equ	3643	;# 
  3129   000E3C                     B1D6            equ	3644	;# 
  3130   000E3D                     B1D7            equ	3645	;# 
  3131   000E3E                     CANSTAT_RO8     equ	3646	;# 
  3132   000E3F                     CANCON_RO8      equ	3647	;# 
  3133   000E40                     B2CON           equ	3648	;# 
  3134   000E41                     B2SIDH          equ	3649	;# 
  3135   000E42                     B2SIDL          equ	3650	;# 
  3136   000E43                     B2EIDH          equ	3651	;# 
  3137   000E44                     B2EIDL          equ	3652	;# 
  3138   000E45                     B2DLC           equ	3653	;# 
  3139   000E46                     B2D0            equ	3654	;# 
  3140   000E47                     B2D1            equ	3655	;# 
  3141   000E48                     B2D2            equ	3656	;# 
  3142   000E49                     B2D3            equ	3657	;# 
  3143   000E4A                     B2D4            equ	3658	;# 
  3144   000E4B                     B2D5            equ	3659	;# 
  3145   000E4C                     B2D6            equ	3660	;# 
  3146   000E4D                     B2D7            equ	3661	;# 
  3147   000E4E                     CANSTAT_RO7     equ	3662	;# 
  3148   000E4F                     CANCON_RO7      equ	3663	;# 
  3149   000E50                     B3CON           equ	3664	;# 
  3150   000E51                     B3SIDH          equ	3665	;# 
  3151   000E52                     B3SIDL          equ	3666	;# 
  3152   000E53                     B3EIDH          equ	3667	;# 
  3153   000E54                     B3EIDL          equ	3668	;# 
  3154   000E55                     B3DLC           equ	3669	;# 
  3155   000E56                     B3D0            equ	3670	;# 
  3156   000E57                     B3D1            equ	3671	;# 
  3157   000E58                     B3D2            equ	3672	;# 
  3158   000E59                     B3D3            equ	3673	;# 
  3159   000E5A                     B3D4            equ	3674	;# 
  3160   000E5B                     B3D5            equ	3675	;# 
  3161   000E5C                     B3D6            equ	3676	;# 
  3162   000E5D                     B3D7            equ	3677	;# 
  3163   000E5E                     CANSTAT_RO6     equ	3678	;# 
  3164   000E5F                     CANCON_RO6      equ	3679	;# 
  3165   000E60                     B4CON           equ	3680	;# 
  3166   000E61                     B4SIDH          equ	3681	;# 
  3167   000E62                     B4SIDL          equ	3682	;# 
  3168   000E63                     B4EIDH          equ	3683	;# 
  3169   000E64                     B4EIDL          equ	3684	;# 
  3170   000E65                     B4DLC           equ	3685	;# 
  3171   000E66                     B4D0            equ	3686	;# 
  3172   000E67                     B4D1            equ	3687	;# 
  3173   000E68                     B4D2            equ	3688	;# 
  3174   000E69                     B4D3            equ	3689	;# 
  3175   000E6A                     B4D4            equ	3690	;# 
  3176   000E6B                     B4D5            equ	3691	;# 
  3177   000E6C                     B4D6            equ	3692	;# 
  3178   000E6D                     B4D7            equ	3693	;# 
  3179   000E6E                     CANSTAT_RO5     equ	3694	;# 
  3180   000E6F                     CANCON_RO5      equ	3695	;# 
  3181   000E70                     B5CON           equ	3696	;# 
  3182   000E71                     B5SIDH          equ	3697	;# 
  3183   000E72                     B5SIDL          equ	3698	;# 
  3184   000E73                     B5EIDH          equ	3699	;# 
  3185   000E74                     B5EIDL          equ	3700	;# 
  3186   000E75                     B5DLC           equ	3701	;# 
  3187   000E76                     B5D0            equ	3702	;# 
  3188   000E77                     B5D1            equ	3703	;# 
  3189   000E78                     B5D2            equ	3704	;# 
  3190   000E79                     B5D3            equ	3705	;# 
  3191   000E7A                     B5D4            equ	3706	;# 
  3192   000E7B                     B5D5            equ	3707	;# 
  3193   000E7C                     B5D6            equ	3708	;# 
  3194   000E7D                     B5D7            equ	3709	;# 
  3195   000E7E                     CANSTAT_RO4     equ	3710	;# 
  3196   000E7F                     CANCON_RO4      equ	3711	;# 
  3197   000F00                     RXF0SIDH        equ	3840	;# 
  3198   000F01                     RXF0SIDL        equ	3841	;# 
  3199   000F02                     RXF0EIDH        equ	3842	;# 
  3200   000F03                     RXF0EIDL        equ	3843	;# 
  3201   000F04                     RXF1SIDH        equ	3844	;# 
  3202   000F05                     RXF1SIDL        equ	3845	;# 
  3203   000F06                     RXF1EIDH        equ	3846	;# 
  3204   000F07                     RXF1EIDL        equ	3847	;# 
  3205   000F08                     RXF2SIDH        equ	3848	;# 
  3206   000F09                     RXF2SIDL        equ	3849	;# 
  3207   000F0A                     RXF2EIDH        equ	3850	;# 
  3208   000F0B                     RXF2EIDL        equ	3851	;# 
  3209   000F0C                     RXF3SIDH        equ	3852	;# 
  3210   000F0D                     RXF3SIDL        equ	3853	;# 
  3211   000F0E                     RXF3EIDH        equ	3854	;# 
  3212   000F0F                     RXF3EIDL        equ	3855	;# 
  3213   000F10                     RXF4SIDH        equ	3856	;# 
  3214   000F11                     RXF4SIDL        equ	3857	;# 
  3215   000F12                     RXF4EIDH        equ	3858	;# 
  3216   000F13                     RXF4EIDL        equ	3859	;# 
  3217   000F14                     RXF5SIDH        equ	3860	;# 
  3218   000F15                     RXF5SIDL        equ	3861	;# 
  3219   000F16                     RXF5EIDH        equ	3862	;# 
  3220   000F17                     RXF5EIDL        equ	3863	;# 
  3221   000F18                     RXM0SIDH        equ	3864	;# 
  3222   000F19                     RXM0SIDL        equ	3865	;# 
  3223   000F1A                     RXM0EIDH        equ	3866	;# 
  3224   000F1B                     RXM0EIDL        equ	3867	;# 
  3225   000F1C                     RXM1SIDH        equ	3868	;# 
  3226   000F1D                     RXM1SIDL        equ	3869	;# 
  3227   000F1E                     RXM1EIDH        equ	3870	;# 
  3228   000F1F                     RXM1EIDL        equ	3871	;# 
  3229   000F20                     TXB2CON         equ	3872	;# 
  3230   000F21                     TXB2SIDH        equ	3873	;# 
  3231   000F22                     TXB2SIDL        equ	3874	;# 
  3232   000F23                     TXB2EIDH        equ	3875	;# 
  3233   000F24                     TXB2EIDL        equ	3876	;# 
  3234   000F25                     TXB2DLC         equ	3877	;# 
  3235   000F26                     TXB2D0          equ	3878	;# 
  3236   000F27                     TXB2D1          equ	3879	;# 
  3237   000F28                     TXB2D2          equ	3880	;# 
  3238   000F29                     TXB2D3          equ	3881	;# 
  3239   000F2A                     TXB2D4          equ	3882	;# 
  3240   000F2B                     TXB2D5          equ	3883	;# 
  3241   000F2C                     TXB2D6          equ	3884	;# 
  3242   000F2D                     TXB2D7          equ	3885	;# 
  3243   000F2E                     CANSTAT_RO3     equ	3886	;# 
  3244   000F2F                     CANCON_RO3      equ	3887	;# 
  3245   000F30                     TXB1CON         equ	3888	;# 
  3246   000F31                     TXB1SIDH        equ	3889	;# 
  3247   000F32                     TXB1SIDL        equ	3890	;# 
  3248   000F33                     TXB1EIDH        equ	3891	;# 
  3249   000F34                     TXB1EIDL        equ	3892	;# 
  3250   000F35                     TXB1DLC         equ	3893	;# 
  3251   000F36                     TXB1D0          equ	3894	;# 
  3252   000F37                     TXB1D1          equ	3895	;# 
  3253   000F38                     TXB1D2          equ	3896	;# 
  3254   000F39                     TXB1D3          equ	3897	;# 
  3255   000F3A                     TXB1D4          equ	3898	;# 
  3256   000F3B                     TXB1D5          equ	3899	;# 
  3257   000F3C                     TXB1D6          equ	3900	;# 
  3258   000F3D                     TXB1D7          equ	3901	;# 
  3259   000F3E                     CANSTAT_RO2     equ	3902	;# 
  3260   000F3F                     CANCON_RO2      equ	3903	;# 
  3261   000F40                     TXB0CON         equ	3904	;# 
  3262   000F41                     TXB0SIDH        equ	3905	;# 
  3263   000F42                     TXB0SIDL        equ	3906	;# 
  3264   000F43                     TXB0EIDH        equ	3907	;# 
  3265   000F44                     TXB0EIDL        equ	3908	;# 
  3266   000F45                     TXB0DLC         equ	3909	;# 
  3267   000F46                     TXB0D0          equ	3910	;# 
  3268   000F47                     TXB0D1          equ	3911	;# 
  3269   000F48                     TXB0D2          equ	3912	;# 
  3270   000F49                     TXB0D3          equ	3913	;# 
  3271   000F4A                     TXB0D4          equ	3914	;# 
  3272   000F4B                     TXB0D5          equ	3915	;# 
  3273   000F4C                     TXB0D6          equ	3916	;# 
  3274   000F4D                     TXB0D7          equ	3917	;# 
  3275   000F4E                     CANSTAT_RO1     equ	3918	;# 
  3276   000F4F                     CANCON_RO1      equ	3919	;# 
  3277   000F50                     RXB1CON         equ	3920	;# 
  3278   000F51                     RXB1SIDH        equ	3921	;# 
  3279   000F52                     RXB1SIDL        equ	3922	;# 
  3280   000F53                     RXB1EIDH        equ	3923	;# 
  3281   000F54                     RXB1EIDL        equ	3924	;# 
  3282   000F55                     RXB1DLC         equ	3925	;# 
  3283   000F56                     RXB1D0          equ	3926	;# 
  3284   000F57                     RXB1D1          equ	3927	;# 
  3285   000F58                     RXB1D2          equ	3928	;# 
  3286   000F59                     RXB1D3          equ	3929	;# 
  3287   000F5A                     RXB1D4          equ	3930	;# 
  3288   000F5B                     RXB1D5          equ	3931	;# 
  3289   000F5C                     RXB1D6          equ	3932	;# 
  3290   000F5D                     RXB1D7          equ	3933	;# 
  3291   000F5E                     CANSTAT_RO0     equ	3934	;# 
  3292   000F5F                     CANCON_RO0      equ	3935	;# 
  3293   000F60                     RXB0CON         equ	3936	;# 
  3294   000F61                     RXB0SIDH        equ	3937	;# 
  3295   000F62                     RXB0SIDL        equ	3938	;# 
  3296   000F63                     RXB0EIDH        equ	3939	;# 
  3297   000F64                     RXB0EIDL        equ	3940	;# 
  3298   000F65                     RXB0DLC         equ	3941	;# 
  3299   000F66                     RXB0D0          equ	3942	;# 
  3300   000F67                     RXB0D1          equ	3943	;# 
  3301   000F68                     RXB0D2          equ	3944	;# 
  3302   000F69                     RXB0D3          equ	3945	;# 
  3303   000F6A                     RXB0D4          equ	3946	;# 
  3304   000F6B                     RXB0D5          equ	3947	;# 
  3305   000F6C                     RXB0D6          equ	3948	;# 
  3306   000F6D                     RXB0D7          equ	3949	;# 
  3307   000F6E                     CANSTAT         equ	3950	;# 
  3308   000F6F                     CANCON          equ	3951	;# 
  3309   000F70                     BRGCON1         equ	3952	;# 
  3310   000F71                     BRGCON2         equ	3953	;# 
  3311   000F72                     BRGCON3         equ	3954	;# 
  3312   000F73                     CIOCON          equ	3955	;# 
  3313   000F74                     COMSTAT         equ	3956	;# 
  3314   000F75                     RXERRCNT        equ	3957	;# 
  3315   000F76                     TXERRCNT        equ	3958	;# 
  3316   000F77                     ECANCON         equ	3959	;# 
  3317   000F80                     PORTA           equ	3968	;# 
  3318   000F81                     PORTB           equ	3969	;# 
  3319   000F82                     PORTC           equ	3970	;# 
  3320   000F83                     PORTD           equ	3971	;# 
  3321   000F84                     PORTE           equ	3972	;# 
  3322   000F89                     LATA            equ	3977	;# 
  3323   000F8A                     LATB            equ	3978	;# 
  3324   000F8B                     LATC            equ	3979	;# 
  3325   000F8C                     LATD            equ	3980	;# 
  3326   000F8D                     LATE            equ	3981	;# 
  3327   000F92                     TRISA           equ	3986	;# 
  3328   000F92                     DDRA            equ	3986	;# 
  3329   000F93                     TRISB           equ	3987	;# 
  3330   000F93                     DDRB            equ	3987	;# 
  3331   000F94                     TRISC           equ	3988	;# 
  3332   000F94                     DDRC            equ	3988	;# 
  3333   000F95                     TRISD           equ	3989	;# 
  3334   000F95                     DDRD            equ	3989	;# 
  3335   000F96                     TRISE           equ	3990	;# 
  3336   000F96                     DDRE            equ	3990	;# 
  3337   000F9B                     OSCTUNE         equ	3995	;# 
  3338   000F9D                     PIE1            equ	3997	;# 
  3339   000F9E                     PIR1            equ	3998	;# 
  3340   000F9F                     IPR1            equ	3999	;# 
  3341   000FA0                     PIE2            equ	4000	;# 
  3342   000FA1                     PIR2            equ	4001	;# 
  3343   000FA2                     IPR2            equ	4002	;# 
  3344   000FA3                     PIE3            equ	4003	;# 
  3345   000FA4                     PIR3            equ	4004	;# 
  3346   000FA5                     IPR3            equ	4005	;# 
  3347   000FA6                     EECON1          equ	4006	;# 
  3348   000FA7                     EECON2          equ	4007	;# 
  3349   000FA8                     EEDATA          equ	4008	;# 
  3350   000FA9                     EEADR           equ	4009	;# 
  3351   000FAB                     RCSTA           equ	4011	;# 
  3352   000FAB                     RCSTA1          equ	4011	;# 
  3353   000FAC                     TXSTA           equ	4012	;# 
  3354   000FAC                     TXSTA1          equ	4012	;# 
  3355   000FAD                     TXREG           equ	4013	;# 
  3356   000FAD                     TXREG1          equ	4013	;# 
  3357   000FAE                     RCREG           equ	4014	;# 
  3358   000FAE                     RCREG1          equ	4014	;# 
  3359   000FAF                     SPBRG           equ	4015	;# 
  3360   000FAF                     SPBRG1          equ	4015	;# 
  3361   000FB0                     SPBRGH          equ	4016	;# 
  3362   000FB1                     T3CON           equ	4017	;# 
  3363   000FB2                     TMR3            equ	4018	;# 
  3364   000FB2                     TMR3L           equ	4018	;# 
  3365   000FB3                     TMR3H           equ	4019	;# 
  3366   000FB4                     CMCON           equ	4020	;# 
  3367   000FB5                     CVRCON          equ	4021	;# 
  3368   000FB6                     ECCP1AS         equ	4022	;# 
  3369   000FB7                     ECCP1DEL        equ	4023	;# 
  3370   000FB8                     BAUDCON         equ	4024	;# 
  3371   000FB8                     BAUDCTL         equ	4024	;# 
  3372   000FBA                     ECCP1CON        equ	4026	;# 
  3373   000FBB                     ECCPR1          equ	4027	;# 
  3374   000FBB                     ECCPR1L         equ	4027	;# 
  3375   000FBC                     ECCPR1H         equ	4028	;# 
  3376   000FBD                     CCP1CON         equ	4029	;# 
  3377   000FBE                     CCPR1           equ	4030	;# 
  3378   000FBE                     CCPR1L          equ	4030	;# 
  3379   000FBF                     CCPR1H          equ	4031	;# 
  3380   000FC0                     ADCON2          equ	4032	;# 
  3381   000FC1                     ADCON1          equ	4033	;# 
  3382   000FC2                     ADCON0          equ	4034	;# 
  3383   000FC3                     ADRES           equ	4035	;# 
  3384   000FC3                     ADRESL          equ	4035	;# 
  3385   000FC4                     ADRESH          equ	4036	;# 
  3386   000FC5                     SSPCON2         equ	4037	;# 
  3387   000FC6                     SSPCON1         equ	4038	;# 
  3388   000FC7                     SSPSTAT         equ	4039	;# 
  3389   000FC8                     SSPADD          equ	4040	;# 
  3390   000FC9                     SSPBUF          equ	4041	;# 
  3391   000FCA                     T2CON           equ	4042	;# 
  3392   000FCB                     PR2             equ	4043	;# 
  3393   000FCB                     MEMCON          equ	4043	;# 
  3394   000FCC                     TMR2            equ	4044	;# 
  3395   000FCD                     T1CON           equ	4045	;# 
  3396   000FCE                     TMR1            equ	4046	;# 
  3397   000FCE                     TMR1L           equ	4046	;# 
  3398   000FCF                     TMR1H           equ	4047	;# 
  3399   000FD0                     RCON            equ	4048	;# 
  3400   000FD1                     WDTCON          equ	4049	;# 
  3401   000FD2                     HLVDCON         equ	4050	;# 
  3402   000FD2                     LVDCON          equ	4050	;# 
  3403   000FD3                     OSCCON          equ	4051	;# 
  3404   000FD5                     T0CON           equ	4053	;# 
  3405   000FD6                     TMR0            equ	4054	;# 
  3406   000FD6                     TMR0L           equ	4054	;# 
  3407   000FD7                     TMR0H           equ	4055	;# 
  3408   000FD8                     STATUS          equ	4056	;# 
  3409   000FD9                     FSR2            equ	4057	;# 
  3410   000FD9                     FSR2L           equ	4057	;# 
  3411   000FDA                     FSR2H           equ	4058	;# 
  3412   000FDB                     PLUSW2          equ	4059	;# 
  3413   000FDC                     PREINC2         equ	4060	;# 
  3414   000FDD                     POSTDEC2        equ	4061	;# 
  3415   000FDE                     POSTINC2        equ	4062	;# 
  3416   000FDF                     INDF2           equ	4063	;# 
  3417   000FE0                     BSR             equ	4064	;# 
  3418   000FE1                     FSR1            equ	4065	;# 
  3419   000FE1                     FSR1L           equ	4065	;# 
  3420   000FE2                     FSR1H           equ	4066	;# 
  3421   000FE3                     PLUSW1          equ	4067	;# 
  3422   000FE4                     PREINC1         equ	4068	;# 
  3423   000FE5                     POSTDEC1        equ	4069	;# 
  3424   000FE6                     POSTINC1        equ	4070	;# 
  3425   000FE7                     INDF1           equ	4071	;# 
  3426   000FE8                     WREG            equ	4072	;# 
  3427   000FE9                     FSR0            equ	4073	;# 
  3428   000FE9                     FSR0L           equ	4073	;# 
  3429   000FEA                     FSR0H           equ	4074	;# 
  3430   000FEB                     PLUSW0          equ	4075	;# 
  3431   000FEC                     PREINC0         equ	4076	;# 
  3432   000FED                     POSTDEC0        equ	4077	;# 
  3433   000FEE                     POSTINC0        equ	4078	;# 
  3434   000FEF                     INDF0           equ	4079	;# 
  3435   000FF0                     INTCON3         equ	4080	;# 
  3436   000FF1                     INTCON2         equ	4081	;# 
  3437   000FF2                     INTCON          equ	4082	;# 
  3438   000FF3                     PROD            equ	4083	;# 
  3439   000FF3                     PRODL           equ	4083	;# 
  3440   000FF4                     PRODH           equ	4084	;# 
  3441   000FF5                     TABLAT          equ	4085	;# 
  3442   000FF6                     TBLPTR          equ	4086	;# 
  3443   000FF6                     TBLPTRL         equ	4086	;# 
  3444   000FF7                     TBLPTRH         equ	4087	;# 
  3445   000FF8                     TBLPTRU         equ	4088	;# 
  3446   000FF9                     PCLAT           equ	4089	;# 
  3447   000FF9                     PC              equ	4089	;# 
  3448   000FF9                     PCL             equ	4089	;# 
  3449   000FFA                     PCLATH          equ	4090	;# 
  3450   000FFB                     PCLATU          equ	4091	;# 
  3451   000FFC                     STKPTR          equ	4092	;# 
  3452   000FFD                     TOS             equ	4093	;# 
  3453   000FFD                     TOSL            equ	4093	;# 
  3454   000FFE                     TOSH            equ	4094	;# 
  3455   000FFF                     TOSU            equ	4095	;# 
  3456                           
  3457                           	psect	idataCOMRAM
  3458   002C5A                     __pidataCOMRAM:
  3459                           	callstack 0
  3460                           
  3461                           ;initializer for _oper1
  3462   002C5A  01                 	db	1
  3463                           
  3464                           ;initializer for _hour
  3465   002C5B  0001               	dw	1
  3466                           
  3467                           	psect	idataBANK0
  3468   002C22                     __pidataBANK0:
  3469                           	callstack 0
  3470                           
  3471                           ;initializer for _T
  3472   002C22  0002               	dw	2
  3473                           
  3474                           ;initializer for _dur_minute
  3475   002C24  0005               	dw	5
  3476                           
  3477                           ;initializer for _bytes
  3478   002C26  01                 	db	1
  3479                           
  3480                           ;initializer for _INC
  3481   002C27  01                 	db	1
  3482                           
  3483                           ;initializer for _once
  3484   002C28  01                 	db	1
  3485                           
  3486                           ;initializer for _event_field
  3487   002C29  01                 	db	1
  3488                           
  3489                           ;initializer for _change_field
  3490   002C2A  01                 	db	1
  3491                           
  3492                           ;initializer for _oper
  3493   002C2B  01                 	db	1
  3494                           
  3495                           ;initializer for read_switches@once
  3496   002C2C  01                 	db	1
  3497   000FD6                     _TMR0           set	4054
  3498   000F94                     _TRISC          set	3988
  3499   000F95                     _TRISD          set	3989
  3500   000F83                     _PORTD          set	3971
  3501   000F81                     _PORTBbits      set	3969
  3502   000F81                     _PORTB          set	3969
  3503   000F93                     _TRISB          set	3987
  3504   000FC1                     _ADCON1         set	4033
  3505   000FC9                     _SSPBUF         set	4041
  3506   000FC8                     _SSPADD         set	4040
  3507   000FC6                     _SSPCON1        set	4038
  3508   007F95                     _TMR0IE         set	32661
  3509   007F92                     _TMR0IF         set	32658
  3510   007EAB                     _PSA            set	32427
  3511   007EAF                     _TMR0ON         set	32431
  3512   007EAD                     _T0CS           set	32429
  3513   007EAE                     _T08BIT         set	32430
  3514   007C08                     _RB0            set	31752
  3515   007C98                     _TRISB0         set	31896
  3516   007C20                     _RE0            set	31776
  3517   007CB0                     _TRISE0         set	31920
  3518   007F97                     _GIE            set	32663
  3519   007F96                     _PEIE           set	32662
  3520   007C1F                     _RD7            set	31775
  3521   007C10                     _RC0            set	31760
  3522   007CAF                     _TRISD7         set	31919
  3523   007C12                     _RC2            set	31762
  3524   007C11                     _RC1            set	31761
  3525   007F8F                     _RBPU           set	32655
  3526   007E2C                     _ACKEN          set	32300
  3527   007E2D                     _ACKDT          set	32301
  3528   007E2B                     _RCEN           set	32299
  3529   007E29                     _RSEN           set	32297
  3530   007E2A                     _PEN            set	32298
  3531   007E28                     _SEN            set	32296
  3532   007E2E                     _ACKSTAT        set	32302
  3533   007D0B                     _BCLIF          set	32011
  3534   007CF3                     _SSPIF          set	31987
  3535   007E3F                     _SMP            set	32319
  3536   007E3E                     _CKE            set	32318
  3537   007CA4                     _TRISC4         set	31908
  3538   007CA3                     _TRISC3         set	31907
  3539                           
  3540                           	psect	mediumconst
  3541   002F58                     __pmediumconst:
  3542                           	callstack 0
  3543   002F58  00                 	db	0
  3544   002F59                     STR_11:
  3545   002F59  20                 	db	32
  3546   002F5A  53                 	db	83	;'S'
  3547   002F5B  45                 	db	69	;'E'
  3548   002F5C  54                 	db	84	;'T'
  3549   002F5D  20                 	db	32
  3550   002F5E  54                 	db	84	;'T'
  3551   002F5F  49                 	db	73	;'I'
  3552   002F60  4D                 	db	77	;'M'
  3553   002F61  45                 	db	69	;'E'
  3554   002F62  20                 	db	32
  3555   002F63  20                 	db	32
  3556   002F64  20                 	db	32
  3557   002F65  20                 	db	32
  3558   002F66  20                 	db	32
  3559   002F67  20                 	db	32
  3560   002F68  20                 	db	32
  3561   002F69  00                 	db	0
  3562   002F6A                     STR_15:
  3563   002F6A  20                 	db	32
  3564   002F6B  53                 	db	83	;'S'
  3565   002F6C  45                 	db	69	;'E'
  3566   002F6D  54                 	db	84	;'T'
  3567   002F6E  20                 	db	32
  3568   002F6F  44                 	db	68	;'D'
  3569   002F70  41                 	db	65	;'A'
  3570   002F71  54                 	db	84	;'T'
  3571   002F72  45                 	db	69	;'E'
  3572   002F73  20                 	db	32
  3573   002F74  20                 	db	32
  3574   002F75  20                 	db	32
  3575   002F76  20                 	db	32
  3576   002F77  20                 	db	32
  3577   002F78  20                 	db	32
  3578   002F79  20                 	db	32
  3579   002F7A  00                 	db	0
  3580   002F7B                     STR_21:
  3581   002F7B  53                 	db	83	;'S'
  3582   002F7C  45                 	db	69	;'E'
  3583   002F7D  54                 	db	84	;'T'
  3584   002F7E  20                 	db	32
  3585   002F7F  54                 	db	84	;'T'
  3586   002F80  49                 	db	73	;'I'
  3587   002F81  4D                 	db	77	;'M'
  3588   002F82  45                 	db	69	;'E'
  3589   002F83  20                 	db	32
  3590   002F84  20                 	db	32
  3591   002F85  20                 	db	32
  3592   002F86  20                 	db	32
  3593   002F87  20                 	db	32
  3594   002F88  20                 	db	32
  3595   002F89  00                 	db	0
  3596   002F8A                     STR_22:
  3597   002F8A  53                 	db	83	;'S'
  3598   002F8B  45                 	db	69	;'E'
  3599   002F8C  54                 	db	84	;'T'
  3600   002F8D  20                 	db	32
  3601   002F8E  44                 	db	68	;'D'
  3602   002F8F  41                 	db	65	;'A'
  3603   002F90  54                 	db	84	;'T'
  3604   002F91  45                 	db	69	;'E'
  3605   002F92  20                 	db	32
  3606   002F93  20                 	db	32
  3607   002F94  20                 	db	32
  3608   002F95  20                 	db	32
  3609   002F96  20                 	db	32
  3610   002F97  20                 	db	32
  3611   002F98  00                 	db	0
  3612   002F99                     STR_24:
  3613   002F99  53                 	db	83	;'S'
  3614   002F9A  45                 	db	69	;'E'
  3615   002F9B  54                 	db	84	;'T'
  3616   002F9C  20                 	db	32
  3617   002F9D  45                 	db	69	;'E'
  3618   002F9E  56                 	db	86	;'V'
  3619   002F9F  45                 	db	69	;'E'
  3620   002FA0  4E                 	db	78	;'N'
  3621   002FA1  54                 	db	84	;'T'
  3622   002FA2  20                 	db	32
  3623   002FA3  20                 	db	32
  3624   002FA4  20                 	db	32
  3625   002FA5  20                 	db	32
  3626   002FA6  20                 	db	32
  3627   002FA7  00                 	db	0
  3628   002FA8                     STR_23:
  3629   002FA8  56                 	db	86	;'V'
  3630   002FA9  49                 	db	73	;'I'
  3631   002FAA  45                 	db	69	;'E'
  3632   002FAB  57                 	db	87	;'W'
  3633   002FAC  20                 	db	32
  3634   002FAD  45                 	db	69	;'E'
  3635   002FAE  56                 	db	86	;'V'
  3636   002FAF  45                 	db	69	;'E'
  3637   002FB0  4E                 	db	78	;'N'
  3638   002FB1  54                 	db	84	;'T'
  3639   002FB2  20                 	db	32
  3640   002FB3  20                 	db	32
  3641   002FB4  20                 	db	32
  3642   002FB5  20                 	db	32
  3643   002FB6  00                 	db	0
  3644   002FB7                     STR_33:
  3645   002FB7  53                 	db	83	;'S'
  3646   002FB8  45                 	db	69	;'E'
  3647   002FB9  54                 	db	84	;'T'
  3648   002FBA  5F                 	db	95	;'_'
  3649   002FBB  54                 	db	84	;'T'
  3650   002FBC  49                 	db	73	;'I'
  3651   002FBD  4D                 	db	77	;'M'
  3652   002FBE  45                 	db	69	;'E'
  3653   002FBF  2F                 	db	47
  3654   002FC0  44                 	db	68	;'D'
  3655   002FC1  41                 	db	65	;'A'
  3656   002FC2  54                 	db	84	;'T'
  3657   002FC3  45                 	db	69	;'E'
  3658   002FC4  20                 	db	32
  3659   002FC5  00                 	db	0
  3660   002FC6                     STR_34:
  3661   002FC6  53                 	db	83	;'S'
  3662   002FC7  45                 	db	69	;'E'
  3663   002FC8  54                 	db	84	;'T'
  3664   002FC9  2F                 	db	47
  3665   002FCA  56                 	db	86	;'V'
  3666   002FCB  49                 	db	73	;'I'
  3667   002FCC  45                 	db	69	;'E'
  3668   002FCD  57                 	db	87	;'W'
  3669   002FCE  20                 	db	32
  3670   002FCF  45                 	db	69	;'E'
  3671   002FD0  56                 	db	86	;'V'
  3672   002FD1  45                 	db	69	;'E'
  3673   002FD2  4E                 	db	78	;'N'
  3674   002FD3  54                 	db	84	;'T'
  3675   002FD4  00                 	db	0
  3676   002FD5                     STR_10:
  3677   002FD5  44                 	db	68	;'D'
  3678   002FD6  55                 	db	85	;'U'
  3679   002FD7  52                 	db	82	;'R'
  3680   002FD8  20                 	db	32
  3681   002FD9  2D                 	db	45
  3682   002FDA  20                 	db	32
  3683   002FDB  00                 	db	0
  3684   002FDC                     STR_2:
  3685   002FDC  54                 	db	84	;'T'
  3686   002FDD  49                 	db	73	;'I'
  3687   002FDE  4D                 	db	77	;'M'
  3688   002FDF  45                 	db	69	;'E'
  3689   002FE0  20                 	db	32
  3690   002FE1  00                 	db	0
  3691   002FE2                     STR_7:
  3692   002FE2  20                 	db	32
  3693   002FE3  44                 	db	68	;'D'
  3694   002FE4  2D                 	db	45
  3695   002FE5  20                 	db	32
  3696   002FE6  00                 	db	0
  3697   002FE7                     STR_5:
  3698   002FE7  20                 	db	32
  3699   002FE8  54                 	db	84	;'T'
  3700   002FE9  2D                 	db	45
  3701   002FEA  20                 	db	32
  3702   002FEB  00                 	db	0
  3703   002FEC                     STR_8:
  3704   002FEC  54                 	db	84	;'T'
  3705   002FED  49                 	db	73	;'I'
  3706   002FEE  4D                 	db	77	;'M'
  3707   002FEF  45                 	db	69	;'E'
  3708   002FF0  00                 	db	0
  3709   002FF1                     STR_6:
  3710   002FF1  20                 	db	32
  3711   002FF2  20                 	db	32
  3712   002FF3  2A                 	db	42
  3713   002FF4  00                 	db	0
  3714   002FF5                     STR_17:
  3715   002FF5  2D                 	db	45
  3716   002FF6  3E                 	db	62	;'>'
  3717   002FF7  00                 	db	0
  3718   002FF8                     STR_4:
  3719   002FF8  41                 	db	65	;'A'
  3720   002FF9  4D                 	db	77	;'M'
  3721   002FFA  00                 	db	0
  3722   002FFB                     STR_3:
  3723   002FFB  50                 	db	80	;'P'
  3724   002FFC  4D                 	db	77	;'M'
  3725   002FFD  00                 	db	0
  3726   002FFB                     STR_14          equ	STR_3
  3727   002FF8                     STR_13          equ	STR_4
  3728   002FF5                     STR_20          equ	STR_17
  3729   002FF5                     STR_25          equ	STR_17
  3730   002FF5                     STR_27          equ	STR_17
  3731   002FF5                     STR_29          equ	STR_17
  3732   002FF5                     STR_31          equ	STR_17
  3733   002FC0                     STR_1           equ	STR_33+9
  3734   002F63                     STR_12          equ	STR_11+10
  3735   002F65                     STR_16          equ	STR_11+12
  3736   002F66                     STR_9           equ	STR_11+13
  3737   002F67                     STR_18          equ	STR_11+14
  3738   002F67                     STR_19          equ	STR_11+14
  3739   002F67                     STR_26          equ	STR_11+14
  3740   002F67                     STR_28          equ	STR_11+14
  3741   002F67                     STR_30          equ	STR_11+14
  3742   002F67                     STR_32          equ	STR_11+14
  3743   002FFE  00                 	db	0	; dummy byte at the end
  3744   000002                     __activetblptr  equ	2
  3745                           
  3746                           ; #config settings
  3747                           
  3748                           	psect	cinit
  3749   002484                     __pcinit:
  3750                           	callstack 0
  3751   002484                     start_initialization:
  3752                           	callstack 0
  3753   002484                     __initialization:
  3754                           	callstack 0
  3755                           
  3756                           ; Initialize objects allocated to BANK0 (11 bytes)
  3757                           ; load TBLPTR registers with __pidataBANK0
  3758   002484  0E22               	movlw	low __pidataBANK0
  3759   002486  6EF6               	movwf	tblptrl,c
  3760   002488  0E2C               	movlw	high __pidataBANK0
  3761   00248A  6EF7               	movwf	tblptrh,c
  3762   00248C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3763   00248E  6EF8               	movwf	tblptru,c
  3764   002490  EE00  F0E8         	lfsr	0,__pdataBANK0
  3765   002494  EE10 F00B          	lfsr	1,11
  3766   002498                     copy_data0:
  3767   002498  0009               	tblrd		*+
  3768   00249A  CFF5 FFEE          	movff	tablat,postinc0
  3769   00249E  50E5               	movf	postdec1,w,c
  3770   0024A0  50E1               	movf	fsr1l,w,c
  3771   0024A2  E1FA               	bnz	copy_data0
  3772                           
  3773                           ; Initialize objects allocated to COMRAM (3 bytes)
  3774                           ; load TBLPTR registers with __pidataCOMRAM
  3775   0024A4  0E5A               	movlw	low __pidataCOMRAM
  3776   0024A6  6EF6               	movwf	tblptrl,c
  3777   0024A8  0E2C               	movlw	high __pidataCOMRAM
  3778   0024AA  6EF7               	movwf	tblptrh,c
  3779   0024AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3780   0024AE  6EF8               	movwf	tblptru,c
  3781   0024B0  0009               	tblrd		*+	;fetch initializer
  3782   0024B2  CFF5 F058          	movff	tablat,__pdataCOMRAM
  3783   0024B6  0009               	tblrd		*+	;fetch initializer
  3784   0024B8  CFF5 F059          	movff	tablat,__pdataCOMRAM+1
  3785   0024BC  0009               	tblrd		*+	;fetch initializer
  3786   0024BE  CFF5 F05A          	movff	tablat,__pdataCOMRAM+2
  3787                           
  3788                           ; Clear objects allocated to BANK3 (180 bytes)
  3789   0024C2  EE03  F000         	lfsr	0,__pbssBANK3
  3790   0024C6  0EB4               	movlw	180
  3791   0024C8                     clear_0:
  3792   0024C8  6AEE               	clrf	postinc0,c
  3793   0024CA  06E8               	decf	wreg,f,c
  3794   0024CC  E1FD               	bnz	clear_0
  3795                           
  3796                           ; Clear objects allocated to BANK2 (180 bytes)
  3797   0024CE  EE02  F000         	lfsr	0,__pbssBANK2
  3798   0024D2  0EB4               	movlw	180
  3799   0024D4                     clear_1:
  3800   0024D4  6AEE               	clrf	postinc0,c
  3801   0024D6  06E8               	decf	wreg,f,c
  3802   0024D8  E1FD               	bnz	clear_1
  3803                           
  3804                           ; Clear objects allocated to BANK1 (180 bytes)
  3805   0024DA  EE01  F000         	lfsr	0,__pbssBANK1
  3806   0024DE  0EB4               	movlw	180
  3807   0024E0                     clear_2:
  3808   0024E0  6AEE               	clrf	postinc0,c
  3809   0024E2  06E8               	decf	wreg,f,c
  3810   0024E4  E1FD               	bnz	clear_2
  3811                           
  3812                           ; Clear objects allocated to BANK0 (116 bytes)
  3813   0024E6  EE00  F060         	lfsr	0,__pbssBANK0
  3814   0024EA  0E74               	movlw	116
  3815   0024EC                     clear_3:
  3816   0024EC  6AEE               	clrf	postinc0,c
  3817   0024EE  06E8               	decf	wreg,f,c
  3818   0024F0  E1FD               	bnz	clear_3
  3819                           
  3820                           ; Clear objects allocated to COMRAM (16 bytes)
  3821   0024F2  EE00  F048         	lfsr	0,__pbssCOMRAM
  3822   0024F6  0E10               	movlw	16
  3823   0024F8                     clear_4:
  3824   0024F8  6AEE               	clrf	postinc0,c
  3825   0024FA  06E8               	decf	wreg,f,c
  3826   0024FC  E1FD               	bnz	clear_4
  3827   0024FE                     end_of_initialization:
  3828                           	callstack 0
  3829   0024FE                     __end_of__initialization:
  3830                           	callstack 0
  3831   0024FE  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3832   002500  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3833   002502  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3834   002504  6EF8               	movwf	tblptru,c
  3835   002506  0100               	movlb	0
  3836   002508  EF09  F000         	goto	_main	;jump to C main() function
  3837                           
  3838                           	psect	bssCOMRAM
  3839   000048                     __pbssCOMRAM:
  3840                           	callstack 0
  3841   000048                     _event_count:
  3842                           	callstack 0
  3843   000048                     	ds	2
  3844   00004A                     _day:
  3845                           	callstack 0
  3846   00004A                     	ds	2
  3847   00004C                     _month:
  3848                           	callstack 0
  3849   00004C                     	ds	2
  3850   00004E                     _year:
  3851                           	callstack 0
  3852   00004E                     	ds	2
  3853   000050                     _AM_PM:
  3854                           	callstack 0
  3855   000050                     	ds	2
  3856   000052                     _sec:
  3857                           	callstack 0
  3858   000052                     	ds	2
  3859   000054                     _minute:
  3860                           	callstack 0
  3861   000054                     	ds	2
  3862   000056                     _count:
  3863                           	callstack 0
  3864   000056                     	ds	1
  3865   000057                     read_switches@key:
  3866                           	callstack 0
  3867   000057                     	ds	1
  3868                           
  3869                           	psect	dataCOMRAM
  3870   000058                     __pdataCOMRAM:
  3871                           	callstack 0
  3872   000058                     _oper1:
  3873                           	callstack 0
  3874   000058                     	ds	1
  3875   000059                     _hour:
  3876                           	callstack 0
  3877   000059                     	ds	2
  3878                           
  3879                           	psect	bssBANK0
  3880   000060                     __pbssBANK0:
  3881                           	callstack 0
  3882   000060                     isr@sec_2_count:
  3883                           	callstack 0
  3884   000060                     	ds	4
  3885   000064                     isr@sec_5_count:
  3886                           	callstack 0
  3887   000064                     	ds	4
  3888   000068                     isr@count:
  3889                           	callstack 0
  3890   000068                     	ds	4
  3891   00006C                     _duration_:
  3892                           	callstack 0
  3893   00006C                     	ds	4
  3894   000070                     _calender_reg:
  3895                           	callstack 0
  3896   000070                     	ds	4
  3897   000074                     _clock_reg:
  3898                           	callstack 0
  3899   000074                     	ds	3
  3900   000077                     _seconds_5:
  3901                           	callstack 0
  3902   000077                     	ds	2
  3903   000079                     _seconds_2:
  3904                           	callstack 0
  3905   000079                     	ds	2
  3906   00007B                     _event_day:
  3907                           	callstack 0
  3908   00007B                     	ds	2
  3909   00007D                     _match:
  3910                           	callstack 0
  3911   00007D                     	ds	2
  3912   00007F                     _n:
  3913                           	callstack 0
  3914   00007F                     	ds	2
  3915   000081                     _m:
  3916                           	callstack 0
  3917   000081                     	ds	2
  3918   000083                     _stop:
  3919                           	callstack 0
  3920   000083                     	ds	2
  3921   000085                     _p:
  3922                           	callstack 0
  3923   000085                     	ds	2
  3924   000087                     _F:
  3925                           	callstack 0
  3926   000087                     	ds	2
  3927   000089                     _SECONDS:
  3928                           	callstack 0
  3929   000089                     	ds	2
  3930   00008B                     _MINUTES:
  3931                           	callstack 0
  3932   00008B                     	ds	2
  3933   00008D                     _HOURS:
  3934                           	callstack 0
  3935   00008D                     	ds	2
  3936   00008F                     _wait:
  3937                           	callstack 0
  3938   00008F                     	ds	2
  3939   000091                     _DATE:
  3940                           	callstack 0
  3941   000091                     	ds	2
  3942   000093                     _w:
  3943                           	callstack 0
  3944   000093                     	ds	2
  3945   000095                     _dur_sec:
  3946                           	callstack 0
  3947   000095                     	ds	2
  3948   000097                     _dur_hour:
  3949                           	callstack 0
  3950   000097                     	ds	2
  3951   000099                     _seconds_flag:
  3952                           	callstack 0
  3953   000099                     	ds	2
  3954   00009B                     _duration_var:
  3955                           	callstack 0
  3956   00009B                     	ds	1
  3957   00009C                     _AM_PM2:
  3958                           	callstack 0
  3959   00009C                     	ds	1
  3960   00009D                     _timer_flag:
  3961                           	callstack 0
  3962   00009D                     	ds	1
  3963   00009E                     _f:
  3964                           	callstack 0
  3965   00009E                     	ds	1
  3966   00009F                     _key:
  3967                           	callstack 0
  3968   00009F                     	ds	1
  3969   0000A0                     _flag:
  3970                           	callstack 0
  3971   0000A0                     	ds	1
  3972   0000A1                     _duration:
  3973                           	callstack 0
  3974   0000A1                     	ds	16
  3975   0000B1                     _date:
  3976                           	callstack 0
  3977   0000B1                     	ds	16
  3978   0000C1                     _STORE_TIME:
  3979                           	callstack 0
  3980   0000C1                     	ds	10
  3981   0000CB                     _time:
  3982                           	callstack 0
  3983   0000CB                     	ds	9
  3984                           
  3985                           	psect	dataBANK0
  3986   0000E8                     __pdataBANK0:
  3987                           	callstack 0
  3988   0000E8                     _T:
  3989                           	callstack 0
  3990   0000E8                     	ds	2
  3991   0000EA                     _dur_minute:
  3992                           	callstack 0
  3993   0000EA                     	ds	2
  3994   0000EC                     _bytes:
  3995                           	callstack 0
  3996   0000EC                     	ds	1
  3997   0000ED                     _INC:
  3998                           	callstack 0
  3999   0000ED                     	ds	1
  4000   0000EE                     _once:
  4001                           	callstack 0
  4002   0000EE                     	ds	1
  4003   0000EF                     _event_field:
  4004                           	callstack 0
  4005   0000EF                     	ds	1
  4006   0000F0                     _change_field:
  4007                           	callstack 0
  4008   0000F0                     	ds	1
  4009   0000F1                     _oper:
  4010                           	callstack 0
  4011   0000F1                     	ds	1
  4012   0000F2                     read_switches@once:
  4013                           	callstack 0
  4014   0000F2                     	ds	1
  4015                           
  4016                           	psect	bssBANK1
  4017   000100                     __pbssBANK1:
  4018                           	callstack 0
  4019   000100                     _view_event:
  4020                           	callstack 0
  4021   000100                     	ds	180
  4022                           
  4023                           	psect	bssBANK2
  4024   000200                     __pbssBANK2:
  4025                           	callstack 0
  4026   000200                     _temp_AM:
  4027                           	callstack 0
  4028   000200                     	ds	180
  4029                           
  4030                           	psect	bssBANK3
  4031   000300                     __pbssBANK3:
  4032                           	callstack 0
  4033   000300                     _temp_PM:
  4034                           	callstack 0
  4035   000300                     	ds	180
  4036                           
  4037                           	psect	cstackBANK0
  4038   0000D4                     __pcstackBANK0:
  4039                           	callstack 0
  4040   0000D4                     ??_main:
  4041                           
  4042                           ; 1 bytes @ 0x0
  4043   0000D4                     	ds	4
  4044   0000D8                     main@count2:
  4045                           	callstack 0
  4046                           
  4047                           ; 2 bytes @ 0x4
  4048   0000D8                     	ds	2
  4049   0000DA                     main@l:
  4050                           	callstack 0
  4051                           
  4052                           ; 2 bytes @ 0x6
  4053   0000DA                     	ds	2
  4054   0000DC                     main@i:
  4055                           	callstack 0
  4056                           
  4057                           ; 2 bytes @ 0x8
  4058   0000DC                     	ds	2
  4059   0000DE                     main@j_381:
  4060                           	callstack 0
  4061                           
  4062                           ; 2 bytes @ 0xA
  4063   0000DE                     	ds	2
  4064   0000E0                     main@j:
  4065                           	callstack 0
  4066                           
  4067                           ; 2 bytes @ 0xC
  4068   0000E0                     	ds	2
  4069   0000E2                     main@i_375:
  4070                           	callstack 0
  4071                           
  4072                           ; 2 bytes @ 0xE
  4073   0000E2                     	ds	2
  4074   0000E4                     main@x:
  4075                           	callstack 0
  4076                           
  4077                           ; 2 bytes @ 0x10
  4078   0000E4                     	ds	2
  4079   0000E6                     main@i_382:
  4080                           	callstack 0
  4081                           
  4082                           ; 2 bytes @ 0x12
  4083   0000E6                     	ds	2
  4084                           
  4085                           	psect	cstackCOMRAM
  4086   000001                     __pcstackCOMRAM:
  4087                           	callstack 0
  4088   000001                     ??_isr:
  4089                           
  4090                           ; 1 bytes @ 0x0
  4091   000001                     	ds	4
  4092   000005                     ?_strcmp:
  4093                           	callstack 0
  4094   000005                     ?___lwdiv:
  4095                           	callstack 0
  4096   000005                     ?___lwmod:
  4097                           	callstack 0
  4098   000005                     ?___lmul:
  4099                           	callstack 0
  4100   000005                     i2c_write@data:
  4101                           	callstack 0
  4102   000005                     read_switches@detection_type:
  4103                           	callstack 0
  4104   000005                     clcd_write@control_bit:
  4105                           	callstack 0
  4106   000005                     strcopy@ptr:
  4107                           	callstack 0
  4108   000005                     ___lwdiv@dividend:
  4109                           	callstack 0
  4110   000005                     ___lwmod@dividend:
  4111                           	callstack 0
  4112   000005                     strcmp@l:
  4113                           	callstack 0
  4114   000005                     strcpy@dest:
  4115                           	callstack 0
  4116   000005                     ___lmul@multiplier:
  4117                           	callstack 0
  4118   000005                     ??_current_date:
  4119                           
  4120                           ; 1 bytes @ 0x4
  4121   000005                     	ds	1
  4122   000006                     read_ds1307@address:
  4123                           	callstack 0
  4124   000006                     clcd_write@byte:
  4125                           	callstack 0
  4126   000006                     read_EEPROM@address1:
  4127                           	callstack 0
  4128   000006                     
  4129                           ; 1 bytes @ 0x5
  4130   000006                     	ds	1
  4131   000007                     read_ds1307@data:
  4132                           	callstack 0
  4133   000007                     clcd_putch@addr:
  4134                           	callstack 0
  4135   000007                     read_EEPROM@data:
  4136                           	callstack 0
  4137   000007                     clcd_print@data:
  4138                           	callstack 0
  4139   000007                     strcopy@qtr:
  4140                           	callstack 0
  4141   000007                     ___lwdiv@divisor:
  4142                           	callstack 0
  4143   000007                     ___lwmod@divisor:
  4144                           	callstack 0
  4145   000007                     strcmp@r:
  4146                           	callstack 0
  4147   000007                     strcpy@src:
  4148                           	callstack 0
  4149   000007                     ??_init_clcd:
  4150                           
  4151                           ; 1 bytes @ 0x6
  4152   000007                     	ds	1
  4153   000008                     clcd_putch@data:
  4154                           	callstack 0
  4155   000008                     
  4156                           ; 1 bytes @ 0x7
  4157   000008                     	ds	1
  4158   000009                     clcd_print@addr:
  4159                           	callstack 0
  4160   000009                     ___lwmod@counter:
  4161                           	callstack 0
  4162   000009                     strcopy@i:
  4163                           	callstack 0
  4164   000009                     ___lwdiv@quotient:
  4165                           	callstack 0
  4166   000009                     strcpy@d:
  4167                           	callstack 0
  4168   000009                     ___lmul@multiplicand:
  4169                           	callstack 0
  4170   000009                     ??_strcmp:
  4171   000009                     
  4172                           ; 1 bytes @ 0x8
  4173   000009                     	ds	1
  4174   00000A                     write_EEPROM@data:
  4175                           	callstack 0
  4176   00000A                     ??_view_ALARM:
  4177                           
  4178                           ; 1 bytes @ 0x9
  4179   00000A                     	ds	1
  4180   00000B                     ___lwdiv@counter:
  4181                           	callstack 0
  4182   00000B                     compare@a:
  4183                           	callstack 0
  4184   00000B                     write_EEPROM@i:
  4185                           	callstack 0
  4186   00000B                     
  4187                           ; 1 bytes @ 0xA
  4188   00000B                     	ds	1
  4189   00000C                     write_ds1307@data:
  4190                           	callstack 0
  4191                           
  4192                           ; 1 bytes @ 0xB
  4193   00000C                     	ds	1
  4194   00000D                     write_ds1307@address:
  4195                           	callstack 0
  4196   00000D                     write_EEPROM@address1:
  4197                           	callstack 0
  4198   00000D                     compare@temp:
  4199                           	callstack 0
  4200   00000D                     ___lmul@product:
  4201                           	callstack 0
  4202   00000D                     
  4203                           ; 1 bytes @ 0xC
  4204   00000D                     	ds	1
  4205   00000E                     init_ds1307@dummy:
  4206                           	callstack 0
  4207   00000E                     view_ALARM@line_variable:
  4208                           	callstack 0
  4209   00000E                     ??_write:
  4210   00000E                     ??_set_time:
  4211   00000E                     ??_set_date:
  4212                           
  4213                           ; 1 bytes @ 0xD
  4214   00000E                     	ds	1
  4215   00000F                     ??_compare:
  4216                           
  4217                           ; 1 bytes @ 0xE
  4218   00000F                     	ds	1
  4219   000010                     view_ALARM@k:
  4220                           	callstack 0
  4221   000010                     
  4222                           ; 1 bytes @ 0xF
  4223   000010                     	ds	1
  4224   000011                     ?_get_current_day:
  4225                           	callstack 0
  4226   000011                     calculate_duration@k:
  4227                           	callstack 0
  4228                           
  4229                           ; 2 bytes @ 0x10
  4230   000011                     	ds	1
  4231   000012                     write@i:
  4232                           	callstack 0
  4233                           
  4234                           ; 2 bytes @ 0x11
  4235   000012                     	ds	1
  4236   000013                     ??_calculate_duration:
  4237   000013                     ??_get_current_day:
  4238                           
  4239                           ; 1 bytes @ 0x12
  4240   000013                     	ds	1
  4241   000014                     write@i_307:
  4242                           	callstack 0
  4243                           
  4244                           ; 2 bytes @ 0x13
  4245   000014                     	ds	1
  4246   000015                     get_current_day@current_day:
  4247                           	callstack 0
  4248   000015                     compare@temp2:
  4249                           	callstack 0
  4250                           
  4251                           ; 18 bytes @ 0x14
  4252   000015                     	ds	1
  4253   000016                     write@j:
  4254                           	callstack 0
  4255                           
  4256                           ; 2 bytes @ 0x15
  4257   000016                     	ds	2
  4258   000018                     ??_set_EVENT:
  4259                           
  4260                           ; 1 bytes @ 0x17
  4261   000018                     	ds	2
  4262   00001A                     
  4263                           ; 1 bytes @ 0x19
  4264   00001A                     	ds	4
  4265   00001E                     calculate_duration@temp_minute:
  4266                           	callstack 0
  4267                           
  4268                           ; 4 bytes @ 0x1D
  4269   00001E                     	ds	4
  4270   000022                     calculate_duration@temp_sec:
  4271                           	callstack 0
  4272                           
  4273                           ; 4 bytes @ 0x21
  4274   000022                     	ds	4
  4275   000026                     calculate_duration@j:
  4276                           	callstack 0
  4277                           
  4278                           ; 2 bytes @ 0x25
  4279   000026                     	ds	1
  4280   000027                     compare@i:
  4281                           	callstack 0
  4282                           
  4283                           ; 2 bytes @ 0x26
  4284   000027                     	ds	1
  4285   000028                     calculate_duration@i_470:
  4286                           	callstack 0
  4287                           
  4288                           ; 2 bytes @ 0x27
  4289   000028                     	ds	1
  4290   000029                     compare@j:
  4291                           	callstack 0
  4292                           
  4293                           ; 2 bytes @ 0x28
  4294   000029                     	ds	1
  4295   00002A                     calculate_duration@i:
  4296                           	callstack 0
  4297                           
  4298                           ; 2 bytes @ 0x29
  4299   00002A                     	ds	2
  4300   00002C                     ?_check_event_time:
  4301                           	callstack 0
  4302                           
  4303                           ; 2 bytes @ 0x2B
  4304   00002C                     	ds	2
  4305   00002E                     ??_check_event_time:
  4306                           
  4307                           ; 1 bytes @ 0x2D
  4308   00002E                     	ds	4
  4309   000032                     check_event_time@ptr:
  4310                           	callstack 0
  4311                           
  4312                           ; 10 bytes @ 0x31
  4313   000032                     	ds	10
  4314   00003C                     check_event_time@i:
  4315                           	callstack 0
  4316                           
  4317                           ; 2 bytes @ 0x3B
  4318   00003C                     	ds	2
  4319   00003E                     check_event_time@j:
  4320                           	callstack 0
  4321                           
  4322                           ; 2 bytes @ 0x3D
  4323   00003E                     	ds	2
  4324   000040                     ??_check_weekly_event:
  4325   000040                     
  4326                           ; 1 bytes @ 0x3F
  4327   000040                     	ds	1
  4328   000041                     check_weekly_event@current_day_of_week:
  4329                           	callstack 0
  4330                           
  4331                           ; 2 bytes @ 0x40
  4332   000041                     	ds	2
  4333   000043                     ??_check_event_trigger:
  4334                           
  4335                           ; 1 bytes @ 0x42
  4336   000043                     	ds	3
  4337   000046                     check_event_trigger@i:
  4338                           	callstack 0
  4339                           
  4340                           ; 2 bytes @ 0x45
  4341   000046                     	ds	2
  4342                           
  4343 ;;
  4344 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4345 ;;
  4346 ;; *************** function _main *****************
  4347 ;; Defined at:
  4348 ;;		line 730 in file "main.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  j               2   12[BANK0 ] int 
  4353 ;;  i               2   18[BANK0 ] int 
  4354 ;;  j               2   10[BANK0 ] int 
  4355 ;;  i               2   14[BANK0 ] unsigned int 
  4356 ;;  i               2    8[BANK0 ] unsigned int 
  4357 ;;  x               2   16[BANK0 ] int 
  4358 ;;  l               2    6[BANK0 ] int 
  4359 ;;  count2          2    4[BANK0 ] unsigned int 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4369 ;;      Params:         0       0       0       0       0       0       0
  4370 ;;      Locals:         0      16       0       0       0       0       0
  4371 ;;      Temps:          0       4       0       0       0       0       0
  4372 ;;      Totals:         0      20       0       0       0       0       0
  4373 ;;Total ram usage:       20 bytes
  4374 ;; Hardware stack levels required when called: 9
  4375 ;; This function calls:
  4376 ;;		_GOTO_SET_EVENT
  4377 ;;		_GOTO_SET_TIMEDATA
  4378 ;;		_check_event_trigger
  4379 ;;		_clcd_print
  4380 ;;		_clcd_putch
  4381 ;;		_clcd_write
  4382 ;;		_compare
  4383 ;;		_display_date
  4384 ;;		_display_time
  4385 ;;		_get_date
  4386 ;;		_get_time
  4387 ;;		_init_config
  4388 ;;		_read_EEPROM
  4389 ;;		_read_switches
  4390 ;;		_strcopy
  4391 ;; This function is called by:
  4392 ;;		Startup code after reset
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text0
  4397   000012                     __ptext0:
  4398                           	callstack 0
  4399   000012                     _main:
  4400                           	callstack 22
  4401   000012                     
  4402                           ;main.c: 732:  init_config();
  4403   000012  EC9F  F015         	call	_init_config	;wreg free
  4404   000016                     
  4405                           ;main.c: 733:     TRISB0=0;
  4406   000016  9093               	bcf	3987,0,c	;volatile
  4407   000018                     
  4408                           ;main.c: 734:     RB0=0;
  4409   000018  9081               	bcf	3969,0,c	;volatile
  4410                           
  4411                           ;main.c: 739:   event_count=read_EEPROM(0x00)-'0';
  4412   00001A  0E00               	movlw	0
  4413   00001C  EC8A  F015         	call	_read_EEPROM
  4414   000020  0100               	movlb	0	; () banked
  4415   000022  6FD4               	movwf	??_main& (0+255),b
  4416   000024  0ED0               	movlw	208
  4417   000026  25D4               	addwf	??_main& (0+255),w,b
  4418   000028  6E48               	movwf	_event_count^0,c
  4419   00002A  6A49               	clrf	(_event_count+1)^0,c
  4420   00002C  0EFF               	movlw	255
  4421   00002E  2249               	addwfc	(_event_count+1)^0,f,c
  4422   000030                     
  4423                           ; BSR set to: 0
  4424                           ;main.c: 741:     for(unsigned int i=0;i<event_count;i++)
  4425   000030  0E00               	movlw	0
  4426   000032  6FDD               	movwf	(main@i+1)& (0+255),b
  4427   000034  0E00               	movlw	0
  4428   000036  6FDC               	movwf	main@i& (0+255),b
  4429   000038  EF50  F000         	goto	l4201
  4430   00003C                     l4185:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;main.c: 742:     {;main.c: 743:         for(int j=0;j<18;j++)
  4434   00003C  0E00               	movlw	0
  4435   00003E  6FE1               	movwf	(main@j+1)& (0+255),b
  4436   000040  0E00               	movlw	0
  4437   000042  6FE0               	movwf	main@j& (0+255),b
  4438   000044                     l4191:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;main.c: 744:         {;main.c: 745:             view_event[i][j]=read_EEPROM(bytes);
  4442   000044  0E12               	movlw	18
  4443   000046  03DC               	mulwf	main@i& (0+255),b
  4444   000048  CFF3 F0D4          	movff	prodl,??_main
  4445   00004C  CFF4 F0D5          	movff	prodh,??_main+1
  4446   000050  03DD               	mulwf	(main@i+1)& (0+255),b
  4447   000052  50F3               	movf	prodl,w,c
  4448   000054  27D5               	addwf	(??_main+1)& (0+255),f,b
  4449   000056  0E00               	movlw	low _view_event
  4450   000058  25D4               	addwf	??_main& (0+255),w,b
  4451   00005A  6FD6               	movwf	(??_main+2)& (0+255),b
  4452   00005C  0E01               	movlw	high _view_event
  4453   00005E  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4454   000060  6FD7               	movwf	(??_main+3)& (0+255),b
  4455   000062  51E0               	movf	main@j& (0+255),w,b
  4456   000064  25D6               	addwf	(??_main+2)& (0+255),w,b
  4457   000066  6ED9               	movwf	fsr2l,c
  4458   000068  51E1               	movf	(main@j+1)& (0+255),w,b
  4459   00006A  21D7               	addwfc	(??_main+3)& (0+255),w,b
  4460   00006C  6EDA               	movwf	fsr2h,c
  4461   00006E  51EC               	movf	_bytes& (0+255),w,b
  4462   000070  EC8A  F015         	call	_read_EEPROM
  4463   000074  6EDF               	movwf	indf2,c
  4464   000076                     
  4465                           ;main.c: 746:             bytes=bytes+0x01;
  4466   000076  0100               	movlb	0	; () banked
  4467   000078  29EC               	incf	_bytes& (0+255),w,b
  4468   00007A  6FEC               	movwf	_bytes& (0+255),b
  4469   00007C                     
  4470                           ; BSR set to: 0
  4471                           ;main.c: 747:         }
  4472   00007C  4BE0               	infsnz	main@j& (0+255),f,b
  4473   00007E  2BE1               	incf	(main@j+1)& (0+255),f,b
  4474   000080                     
  4475                           ; BSR set to: 0
  4476   000080  BFE1               	btfsc	(main@j+1)& (0+255),7,b
  4477   000082  EF4C  F000         	goto	u4351
  4478   000086  51E1               	movf	(main@j+1)& (0+255),w,b
  4479   000088  E109               	bnz	u4350
  4480   00008A  0E12               	movlw	18
  4481   00008C  5DE0               	subwf	main@j& (0+255),w,b
  4482   00008E  A0D8               	btfss	status,0,c
  4483   000090  EF4C  F000         	goto	u4351
  4484   000094  EF4E  F000         	goto	u4350
  4485   000098                     u4351:
  4486   000098  EF22  F000         	goto	l4191
  4487   00009C                     u4350:
  4488   00009C                     
  4489                           ; BSR set to: 0
  4490                           ;main.c: 748:     }
  4491   00009C  4BDC               	infsnz	main@i& (0+255),f,b
  4492   00009E  2BDD               	incf	(main@i+1)& (0+255),f,b
  4493   0000A0                     l4201:
  4494                           
  4495                           ; BSR set to: 0
  4496   0000A0  5048               	movf	_event_count^0,w,c
  4497   0000A2  5DDC               	subwf	main@i& (0+255),w,b
  4498   0000A4  5049               	movf	(_event_count+1)^0,w,c
  4499   0000A6  59DD               	subwfb	(main@i+1)& (0+255),w,b
  4500   0000A8  A0D8               	btfss	status,0,c
  4501   0000AA  EF59  F000         	goto	u4361
  4502   0000AE  EF5B  F000         	goto	u4360
  4503   0000B2                     u4361:
  4504   0000B2  EF1E  F000         	goto	l4185
  4505   0000B6                     u4360:
  4506   0000B6                     
  4507                           ; BSR set to: 0
  4508                           ;main.c: 751:     for(unsigned int i=0;i<event_count;i++)
  4509   0000B6  0E00               	movlw	0
  4510   0000B8  6FE3               	movwf	(main@i_375+1)& (0+255),b
  4511   0000BA  0E00               	movlw	0
  4512   0000BC  6FE2               	movwf	main@i_375& (0+255),b
  4513   0000BE  EFDB  F000         	goto	l4219
  4514   0000C2                     l4205:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;main.c: 752:     {;main.c: 753:         if(view_event[i][6]=='A')
  4518   0000C2  0E12               	movlw	18
  4519   0000C4  03E2               	mulwf	main@i_375& (0+255),b
  4520   0000C6  CFF3 F0D4          	movff	prodl,??_main
  4521   0000CA  CFF4 F0D5          	movff	prodh,??_main+1
  4522   0000CE  03E3               	mulwf	(main@i_375+1)& (0+255),b
  4523   0000D0  50F3               	movf	prodl,w,c
  4524   0000D2  27D5               	addwf	(??_main+1)& (0+255),f,b
  4525   0000D4  0E06               	movlw	low (_view_event+6)
  4526   0000D6  25D4               	addwf	??_main& (0+255),w,b
  4527   0000D8  6ED9               	movwf	fsr2l,c
  4528   0000DA  0E01               	movlw	high (_view_event+6)
  4529   0000DC  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4530   0000DE  6EDA               	movwf	fsr2h,c
  4531   0000E0  0E41               	movlw	65
  4532   0000E2  18DE               	xorwf	postinc2,w,c
  4533   0000E4  A4D8               	btfss	status,2,c
  4534   0000E6  EF77  F000         	goto	u4371
  4535   0000EA  EF79  F000         	goto	u4370
  4536   0000EE                     u4371:
  4537   0000EE  EF9E  F000         	goto	l4211
  4538   0000F2                     u4370:
  4539   0000F2                     
  4540                           ; BSR set to: 0
  4541                           ;main.c: 754:         {;main.c: 755:             strcopy(temp_AM[m],view_event[i]);
  4542   0000F2  0E12               	movlw	18
  4543   0000F4  0381               	mulwf	_m& (0+255),b
  4544   0000F6  CFF3 F0D4          	movff	prodl,??_main
  4545   0000FA  CFF4 F0D5          	movff	prodh,??_main+1
  4546   0000FE  0382               	mulwf	(_m+1)& (0+255),b
  4547   000100  50F3               	movf	prodl,w,c
  4548   000102  27D5               	addwf	(??_main+1)& (0+255),f,b
  4549   000104  0E00               	movlw	low _temp_AM
  4550   000106  25D4               	addwf	??_main& (0+255),w,b
  4551   000108  6E05               	movwf	strcopy@ptr^0,c
  4552   00010A  0E02               	movlw	high _temp_AM
  4553   00010C  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4554   00010E  6E06               	movwf	(strcopy@ptr+1)^0,c
  4555   000110  0E12               	movlw	18
  4556   000112  03E2               	mulwf	main@i_375& (0+255),b
  4557   000114  CFF3 F0D6          	movff	prodl,??_main+2
  4558   000118  CFF4 F0D7          	movff	prodh,??_main+3
  4559   00011C  03E3               	mulwf	(main@i_375+1)& (0+255),b
  4560   00011E  50F3               	movf	prodl,w,c
  4561   000120  27D7               	addwf	(??_main+3)& (0+255),f,b
  4562   000122  0E00               	movlw	low _view_event
  4563   000124  25D6               	addwf	(??_main+2)& (0+255),w,b
  4564   000126  6E07               	movwf	strcopy@qtr^0,c
  4565   000128  0E01               	movlw	high _view_event
  4566   00012A  21D7               	addwfc	(??_main+3)& (0+255),w,b
  4567   00012C  6E08               	movwf	(strcopy@qtr+1)^0,c
  4568   00012E  ECAB  F014         	call	_strcopy	;wreg free
  4569   000132                     
  4570                           ;main.c: 756:             m++;
  4571   000132  0100               	movlb	0	; () banked
  4572   000134  4B81               	infsnz	_m& (0+255),f,b
  4573   000136  2B82               	incf	(_m+1)& (0+255),f,b
  4574                           
  4575                           ;main.c: 758:         }
  4576   000138  EFD9  F000         	goto	l4217
  4577   00013C                     l4211:
  4578                           
  4579                           ; BSR set to: 0
  4580   00013C  0E12               	movlw	18
  4581   00013E  03E2               	mulwf	main@i_375& (0+255),b
  4582   000140  CFF3 F0D4          	movff	prodl,??_main
  4583   000144  CFF4 F0D5          	movff	prodh,??_main+1
  4584   000148  03E3               	mulwf	(main@i_375+1)& (0+255),b
  4585   00014A  50F3               	movf	prodl,w,c
  4586   00014C  27D5               	addwf	(??_main+1)& (0+255),f,b
  4587   00014E  0E06               	movlw	low (_view_event+6)
  4588   000150  25D4               	addwf	??_main& (0+255),w,b
  4589   000152  6ED9               	movwf	fsr2l,c
  4590   000154  0E01               	movlw	high (_view_event+6)
  4591   000156  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4592   000158  6EDA               	movwf	fsr2h,c
  4593   00015A  0E50               	movlw	80
  4594   00015C  18DE               	xorwf	postinc2,w,c
  4595   00015E  A4D8               	btfss	status,2,c
  4596   000160  EFB4  F000         	goto	u4381
  4597   000164  EFB6  F000         	goto	u4380
  4598   000168                     u4381:
  4599   000168  EFD9  F000         	goto	l4217
  4600   00016C                     u4380:
  4601   00016C                     
  4602                           ; BSR set to: 0
  4603                           ;main.c: 760:         {;main.c: 761:             strcopy(temp_PM[n],view_event[i]);
  4604   00016C  0E12               	movlw	18
  4605   00016E  037F               	mulwf	_n& (0+255),b
  4606   000170  CFF3 F0D4          	movff	prodl,??_main
  4607   000174  CFF4 F0D5          	movff	prodh,??_main+1
  4608   000178  0380               	mulwf	(_n+1)& (0+255),b
  4609   00017A  50F3               	movf	prodl,w,c
  4610   00017C  27D5               	addwf	(??_main+1)& (0+255),f,b
  4611   00017E  0E00               	movlw	low _temp_PM
  4612   000180  25D4               	addwf	??_main& (0+255),w,b
  4613   000182  6E05               	movwf	strcopy@ptr^0,c
  4614   000184  0E03               	movlw	high _temp_PM
  4615   000186  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4616   000188  6E06               	movwf	(strcopy@ptr+1)^0,c
  4617   00018A  0E12               	movlw	18
  4618   00018C  03E2               	mulwf	main@i_375& (0+255),b
  4619   00018E  CFF3 F0D6          	movff	prodl,??_main+2
  4620   000192  CFF4 F0D7          	movff	prodh,??_main+3
  4621   000196  03E3               	mulwf	(main@i_375+1)& (0+255),b
  4622   000198  50F3               	movf	prodl,w,c
  4623   00019A  27D7               	addwf	(??_main+3)& (0+255),f,b
  4624   00019C  0E00               	movlw	low _view_event
  4625   00019E  25D6               	addwf	(??_main+2)& (0+255),w,b
  4626   0001A0  6E07               	movwf	strcopy@qtr^0,c
  4627   0001A2  0E01               	movlw	high _view_event
  4628   0001A4  21D7               	addwfc	(??_main+3)& (0+255),w,b
  4629   0001A6  6E08               	movwf	(strcopy@qtr+1)^0,c
  4630   0001A8  ECAB  F014         	call	_strcopy	;wreg free
  4631   0001AC                     
  4632                           ;main.c: 765:              n++;
  4633   0001AC  0100               	movlb	0	; () banked
  4634   0001AE  4B7F               	infsnz	_n& (0+255),f,b
  4635   0001B0  2B80               	incf	(_n+1)& (0+255),f,b
  4636   0001B2                     l4217:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;main.c: 768:     }
  4640   0001B2  4BE2               	infsnz	main@i_375& (0+255),f,b
  4641   0001B4  2BE3               	incf	(main@i_375+1)& (0+255),f,b
  4642   0001B6                     l4219:
  4643                           
  4644                           ; BSR set to: 0
  4645   0001B6  5048               	movf	_event_count^0,w,c
  4646   0001B8  5DE2               	subwf	main@i_375& (0+255),w,b
  4647   0001BA  5049               	movf	(_event_count+1)^0,w,c
  4648   0001BC  59E3               	subwfb	(main@i_375+1)& (0+255),w,b
  4649   0001BE  A0D8               	btfss	status,0,c
  4650   0001C0  EFE4  F000         	goto	u4391
  4651   0001C4  EFE6  F000         	goto	u4390
  4652   0001C8                     u4391:
  4653   0001C8  EF61  F000         	goto	l4205
  4654   0001CC                     u4390:
  4655   0001CC                     
  4656                           ; BSR set to: 0
  4657                           ;main.c: 770:     compare(m,temp_AM);
  4658   0001CC  C081  F00B         	movff	_m,compare@a
  4659   0001D0  C082  F00C         	movff	_m+1,compare@a+1
  4660   0001D4  0E00               	movlw	low _temp_AM
  4661   0001D6  6E0D               	movwf	compare@temp^0,c
  4662   0001D8  0E02               	movlw	high _temp_AM
  4663   0001DA  6E0E               	movwf	(compare@temp+1)^0,c
  4664   0001DC  EC28  F00D         	call	_compare	;wreg free
  4665                           
  4666                           ;main.c: 771:     compare(n,temp_PM);
  4667   0001E0  C07F  F00B         	movff	_n,compare@a
  4668   0001E4  C080  F00C         	movff	_n+1,compare@a+1
  4669   0001E8  0E00               	movlw	low _temp_PM
  4670   0001EA  6E0D               	movwf	compare@temp^0,c
  4671   0001EC  0E03               	movlw	high _temp_PM
  4672   0001EE  6E0E               	movwf	(compare@temp+1)^0,c
  4673   0001F0  EC28  F00D         	call	_compare	;wreg free
  4674   0001F4                     
  4675                           ;main.c: 772:      int x;;main.c: 773:     for( x=0;x<m;x++)
  4676   0001F4  0E00               	movlw	0
  4677   0001F6  0100               	movlb	0	; () banked
  4678   0001F8  6FE5               	movwf	(main@x+1)& (0+255),b
  4679   0001FA  0E00               	movlw	0
  4680   0001FC  6FE4               	movwf	main@x& (0+255),b
  4681   0001FE  EF24  F001         	goto	l4229
  4682   000202                     l4225:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;main.c: 774:     {;main.c: 775:         strcopy(view_event[x],temp_AM[x]);
  4686   000202  0E12               	movlw	18
  4687   000204  03E4               	mulwf	main@x& (0+255),b
  4688   000206  CFF3 F0D4          	movff	prodl,??_main
  4689   00020A  CFF4 F0D5          	movff	prodh,??_main+1
  4690   00020E  03E5               	mulwf	(main@x+1)& (0+255),b
  4691   000210  50F3               	movf	prodl,w,c
  4692   000212  27D5               	addwf	(??_main+1)& (0+255),f,b
  4693   000214  0E00               	movlw	low _view_event
  4694   000216  25D4               	addwf	??_main& (0+255),w,b
  4695   000218  6E05               	movwf	strcopy@ptr^0,c
  4696   00021A  0E01               	movlw	high _view_event
  4697   00021C  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4698   00021E  6E06               	movwf	(strcopy@ptr+1)^0,c
  4699   000220  0E12               	movlw	18
  4700   000222  03E4               	mulwf	main@x& (0+255),b
  4701   000224  CFF3 F0D6          	movff	prodl,??_main+2
  4702   000228  CFF4 F0D7          	movff	prodh,??_main+3
  4703   00022C  03E5               	mulwf	(main@x+1)& (0+255),b
  4704   00022E  50F3               	movf	prodl,w,c
  4705   000230  27D7               	addwf	(??_main+3)& (0+255),f,b
  4706   000232  0E00               	movlw	low _temp_AM
  4707   000234  25D6               	addwf	(??_main+2)& (0+255),w,b
  4708   000236  6E07               	movwf	strcopy@qtr^0,c
  4709   000238  0E02               	movlw	high _temp_AM
  4710   00023A  21D7               	addwfc	(??_main+3)& (0+255),w,b
  4711   00023C  6E08               	movwf	(strcopy@qtr+1)^0,c
  4712   00023E  ECAB  F014         	call	_strcopy	;wreg free
  4713   000242                     
  4714                           ;main.c: 776:     }
  4715   000242  0100               	movlb	0	; () banked
  4716   000244  4BE4               	infsnz	main@x& (0+255),f,b
  4717   000246  2BE5               	incf	(main@x+1)& (0+255),f,b
  4718   000248                     l4229:
  4719                           
  4720                           ; BSR set to: 0
  4721   000248  5181               	movf	_m& (0+255),w,b
  4722   00024A  5DE4               	subwf	main@x& (0+255),w,b
  4723   00024C  51E5               	movf	(main@x+1)& (0+255),w,b
  4724   00024E  0A80               	xorlw	128
  4725   000250  6FD4               	movwf	??_main& (0+255),b
  4726   000252  5182               	movf	(_m+1)& (0+255),w,b
  4727   000254  0A80               	xorlw	128
  4728   000256  59D4               	subwfb	??_main& (0+255),w,b
  4729   000258  A0D8               	btfss	status,0,c
  4730   00025A  EF31  F001         	goto	u4401
  4731   00025E  EF33  F001         	goto	u4400
  4732   000262                     u4401:
  4733   000262  EF01  F001         	goto	l4225
  4734   000266                     u4400:
  4735   000266                     
  4736                           ; BSR set to: 0
  4737                           ;main.c: 777:      int l=0;
  4738   000266  0E00               	movlw	0
  4739   000268  6FDB               	movwf	(main@l+1)& (0+255),b
  4740   00026A  0E00               	movlw	0
  4741   00026C  6FDA               	movwf	main@l& (0+255),b
  4742                           
  4743                           ;main.c: 778:     for( ;x<m+n;x++)
  4744   00026E  EF5E  F001         	goto	l4239
  4745   000272                     l4233:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;main.c: 779:     {;main.c: 780:         strcopy(view_event[x],temp_PM[l]);
  4749   000272  0E12               	movlw	18
  4750   000274  03E4               	mulwf	main@x& (0+255),b
  4751   000276  CFF3 F0D4          	movff	prodl,??_main
  4752   00027A  CFF4 F0D5          	movff	prodh,??_main+1
  4753   00027E  03E5               	mulwf	(main@x+1)& (0+255),b
  4754   000280  50F3               	movf	prodl,w,c
  4755   000282  27D5               	addwf	(??_main+1)& (0+255),f,b
  4756   000284  0E00               	movlw	low _view_event
  4757   000286  25D4               	addwf	??_main& (0+255),w,b
  4758   000288  6E05               	movwf	strcopy@ptr^0,c
  4759   00028A  0E01               	movlw	high _view_event
  4760   00028C  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4761   00028E  6E06               	movwf	(strcopy@ptr+1)^0,c
  4762   000290  0E12               	movlw	18
  4763   000292  03DA               	mulwf	main@l& (0+255),b
  4764   000294  CFF3 F0D6          	movff	prodl,??_main+2
  4765   000298  CFF4 F0D7          	movff	prodh,??_main+3
  4766   00029C  03DB               	mulwf	(main@l+1)& (0+255),b
  4767   00029E  50F3               	movf	prodl,w,c
  4768   0002A0  27D7               	addwf	(??_main+3)& (0+255),f,b
  4769   0002A2  0E00               	movlw	low _temp_PM
  4770   0002A4  25D6               	addwf	(??_main+2)& (0+255),w,b
  4771   0002A6  6E07               	movwf	strcopy@qtr^0,c
  4772   0002A8  0E03               	movlw	high _temp_PM
  4773   0002AA  21D7               	addwfc	(??_main+3)& (0+255),w,b
  4774   0002AC  6E08               	movwf	(strcopy@qtr+1)^0,c
  4775   0002AE  ECAB  F014         	call	_strcopy	;wreg free
  4776   0002B2                     
  4777                           ;main.c: 781:         l++;
  4778   0002B2  0100               	movlb	0	; () banked
  4779   0002B4  4BDA               	infsnz	main@l& (0+255),f,b
  4780   0002B6  2BDB               	incf	(main@l+1)& (0+255),f,b
  4781   0002B8                     
  4782                           ; BSR set to: 0
  4783                           ;main.c: 782:     }
  4784   0002B8  4BE4               	infsnz	main@x& (0+255),f,b
  4785   0002BA  2BE5               	incf	(main@x+1)& (0+255),f,b
  4786   0002BC                     l4239:
  4787                           
  4788                           ; BSR set to: 0
  4789   0002BC  517F               	movf	_n& (0+255),w,b
  4790   0002BE  2581               	addwf	_m& (0+255),w,b
  4791   0002C0  6FD4               	movwf	??_main& (0+255),b
  4792   0002C2  5180               	movf	(_n+1)& (0+255),w,b
  4793   0002C4  2182               	addwfc	(_m+1)& (0+255),w,b
  4794   0002C6  6FD5               	movwf	(??_main+1)& (0+255),b
  4795   0002C8  51D4               	movf	??_main& (0+255),w,b
  4796   0002CA  5DE4               	subwf	main@x& (0+255),w,b
  4797   0002CC  51E5               	movf	(main@x+1)& (0+255),w,b
  4798   0002CE  0A80               	xorlw	128
  4799   0002D0  6FD6               	movwf	(??_main+2)& (0+255),b
  4800   0002D2  51D5               	movf	(??_main+1)& (0+255),w,b
  4801   0002D4  0A80               	xorlw	128
  4802   0002D6  59D6               	subwfb	(??_main+2)& (0+255),w,b
  4803   0002D8  A0D8               	btfss	status,0,c
  4804   0002DA  EF71  F001         	goto	u4411
  4805   0002DE  EF73  F001         	goto	u4410
  4806   0002E2                     u4411:
  4807   0002E2  EF39  F001         	goto	l4233
  4808   0002E6                     u4410:
  4809   0002E6                     
  4810                           ; BSR set to: 0
  4811                           ;main.c: 787:     INC=bytes;
  4812   0002E6  C0EC  F0ED         	movff	_bytes,_INC
  4813   0002EA                     
  4814                           ; BSR set to: 0
  4815                           ;main.c: 788:     unsigned int count2=0;
  4816   0002EA  0E00               	movlw	0
  4817   0002EC  6FD9               	movwf	(main@count2+1)& (0+255),b
  4818   0002EE  0E00               	movlw	0
  4819   0002F0  6FD8               	movwf	main@count2& (0+255),b
  4820   0002F2                     l4243:
  4821                           
  4822                           ;main.c: 791:  {;main.c: 792:             key=read_switches(1);
  4823   0002F2  0E01               	movlw	1
  4824   0002F4  ECC8  F012         	call	_read_switches
  4825   0002F8  0100               	movlb	0	; () banked
  4826   0002FA  6F9F               	movwf	_key& (0+255),b
  4827   0002FC                     
  4828                           ; BSR set to: 0
  4829                           ;main.c: 793:             if(key==0xFF)
  4830   0002FC  299F               	incf	_key& (0+255),w,b
  4831   0002FE  A4D8               	btfss	status,2,c
  4832   000300  EF84  F001         	goto	u4421
  4833   000304  EF86  F001         	goto	u4420
  4834   000308                     u4421:
  4835   000308  EFA9  F001         	goto	l4255
  4836   00030C                     u4420:
  4837   00030C                     
  4838                           ; BSR set to: 0
  4839                           ;main.c: 794:             {;main.c: 795:             T=(10*(time[6]-'0'))+(time[7]-'0');
  4840   00030C  51D1               	movf	(_time+6)& (0+255),w,b
  4841   00030E  0D0A               	mullw	10
  4842   000310  CFF3 F0D4          	movff	prodl,??_main
  4843   000314  CFF4 F0D5          	movff	prodh,??_main+1
  4844   000318  51D2               	movf	(_time+7)& (0+255),w,b
  4845   00031A  27D4               	addwf	??_main& (0+255),f,b
  4846   00031C  0E00               	movlw	0
  4847   00031E  23D5               	addwfc	(??_main+1)& (0+255),f,b
  4848   000320  0EF0               	movlw	240
  4849   000322  25D4               	addwf	??_main& (0+255),w,b
  4850   000324  6FE8               	movwf	_T& (0+255),b
  4851   000326  0EFD               	movlw	253
  4852   000328  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4853   00032A  6FE9               	movwf	(_T+1)& (0+255),b
  4854   00032C                     
  4855                           ; BSR set to: 0
  4856                           ;main.c: 796:             if(T==0)
  4857   00032C  51E8               	movf	_T& (0+255),w,b
  4858   00032E  11E9               	iorwf	(_T+1)& (0+255),w,b
  4859   000330  A4D8               	btfss	status,2,c
  4860   000332  EF9D  F001         	goto	u4431
  4861   000336  EF9F  F001         	goto	u4430
  4862   00033A                     u4431:
  4863   00033A  EFA9  F001         	goto	l4255
  4864   00033E                     u4430:
  4865   00033E                     
  4866                           ; BSR set to: 0
  4867                           ;main.c: 797:             {;main.c: 798:             f=2;
  4868   00033E  0E02               	movlw	2
  4869   000340  6F9E               	movwf	_f& (0+255),b
  4870                           
  4871                           ;main.c: 799:             flag=2;
  4872   000342  0E02               	movlw	2
  4873   000344  6FA0               	movwf	_flag& (0+255),b
  4874                           
  4875                           ;main.c: 800:             stop=1;
  4876   000346  0E00               	movlw	0
  4877   000348  6F84               	movwf	(_stop+1)& (0+255),b
  4878   00034A  0E01               	movlw	1
  4879   00034C  6F83               	movwf	_stop& (0+255),b
  4880   00034E                     
  4881                           ; BSR set to: 0
  4882                           ;main.c: 801:              check_event_trigger();
  4883   00034E  EC30  F011         	call	_check_event_trigger	;wreg free
  4884   000352                     l4255:
  4885                           
  4886                           ;main.c: 805:         if(seconds_flag==1)
  4887   000352  0100               	movlb	0	; () banked
  4888   000354  0599               	decf	_seconds_flag& (0+255),w,b
  4889   000356  119A               	iorwf	(_seconds_flag+1)& (0+255),w,b
  4890   000358  A4D8               	btfss	status,2,c
  4891   00035A  EFB1  F001         	goto	u4441
  4892   00035E  EFB3  F001         	goto	u4440
  4893   000362                     u4441:
  4894   000362  EF31  F002         	goto	l4295
  4895   000366                     u4440:
  4896   000366                     
  4897                           ; BSR set to: 0
  4898                           ;main.c: 806:         {;main.c: 807:             clcd_write(0x01, 0);
  4899   000366  0E00               	movlw	0
  4900   000368  6E05               	movwf	clcd_write@control_bit^0,c
  4901   00036A  0E01               	movlw	1
  4902   00036C  EC10  F015         	call	_clcd_write
  4903   000370                     
  4904                           ;main.c: 808:             flag=2;
  4905   000370  0E02               	movlw	2
  4906   000372  0100               	movlb	0	; () banked
  4907   000374  6FA0               	movwf	_flag& (0+255),b
  4908   000376                     
  4909                           ; BSR set to: 0
  4910                           ;main.c: 809:             f=2;
  4911   000376  0E02               	movlw	2
  4912   000378  6F9E               	movwf	_f& (0+255),b
  4913   00037A                     
  4914                           ; BSR set to: 0
  4915                           ;main.c: 810:               int j=0;
  4916   00037A  0E00               	movlw	0
  4917   00037C  6FDF               	movwf	(main@j_381+1)& (0+255),b
  4918   00037E  0E00               	movlw	0
  4919   000380  6FDE               	movwf	main@j_381& (0+255),b
  4920   000382                     
  4921                           ; BSR set to: 0
  4922                           ;main.c: 811:                int i=0;
  4923   000382  0E00               	movlw	0
  4924   000384  6FE7               	movwf	(main@i_382+1)& (0+255),b
  4925   000386  0E00               	movlw	0
  4926   000388  6FE6               	movwf	main@i_382& (0+255),b
  4927   00038A                     
  4928                           ; BSR set to: 0
  4929                           ;main.c: 812:                for(i=0;i<8;i++)
  4930   00038A  0E00               	movlw	0
  4931   00038C  6FE7               	movwf	(main@i_382+1)& (0+255),b
  4932   00038E  0E00               	movlw	0
  4933   000390  6FE6               	movwf	main@i_382& (0+255),b
  4934   000392                     l4269:
  4935                           
  4936                           ; BSR set to: 0
  4937   000392  BFE7               	btfsc	(main@i_382+1)& (0+255),7,b
  4938   000394  EFD5  F001         	goto	u4451
  4939   000398  51E7               	movf	(main@i_382+1)& (0+255),w,b
  4940   00039A  E109               	bnz	u4450
  4941   00039C  0E08               	movlw	8
  4942   00039E  5DE6               	subwf	main@i_382& (0+255),w,b
  4943   0003A0  A0D8               	btfss	status,0,c
  4944   0003A2  EFD5  F001         	goto	u4451
  4945   0003A6  EFD7  F001         	goto	u4450
  4946   0003AA                     u4451:
  4947   0003AA  EFD9  F001         	goto	l4273
  4948   0003AE                     u4450:
  4949   0003AE  EFFB  F001         	goto	l4281
  4950   0003B2                     l4273:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;main.c: 813:                {;main.c: 814:                    clcd_putch(view_event[p][
      +                          i],(0x80 + (j)));
  4954   0003B2  51DE               	movf	main@j_381& (0+255),w,b
  4955   0003B4  0F80               	addlw	128
  4956   0003B6  6E07               	movwf	clcd_putch@addr^0,c
  4957   0003B8  0E12               	movlw	18
  4958   0003BA  0385               	mulwf	_p& (0+255),b
  4959   0003BC  CFF3 F0D4          	movff	prodl,??_main
  4960   0003C0  CFF4 F0D5          	movff	prodh,??_main+1
  4961   0003C4  0386               	mulwf	(_p+1)& (0+255),b
  4962   0003C6  50F3               	movf	prodl,w,c
  4963   0003C8  27D5               	addwf	(??_main+1)& (0+255),f,b
  4964   0003CA  0E00               	movlw	low _view_event
  4965   0003CC  25D4               	addwf	??_main& (0+255),w,b
  4966   0003CE  6FD6               	movwf	(??_main+2)& (0+255),b
  4967   0003D0  0E01               	movlw	high _view_event
  4968   0003D2  21D5               	addwfc	(??_main+1)& (0+255),w,b
  4969   0003D4  6FD7               	movwf	(??_main+3)& (0+255),b
  4970   0003D6  51E6               	movf	main@i_382& (0+255),w,b
  4971   0003D8  25D6               	addwf	(??_main+2)& (0+255),w,b
  4972   0003DA  6ED9               	movwf	fsr2l,c
  4973   0003DC  51E7               	movf	(main@i_382+1)& (0+255),w,b
  4974   0003DE  21D7               	addwfc	(??_main+3)& (0+255),w,b
  4975   0003E0  6EDA               	movwf	fsr2h,c
  4976   0003E2  50DF               	movf	indf2,w,c
  4977   0003E4  ECD1  F015         	call	_clcd_putch
  4978   0003E8                     
  4979                           ;main.c: 815:                    j++;
  4980   0003E8  0100               	movlb	0	; () banked
  4981   0003EA  4BDE               	infsnz	main@j_381& (0+255),f,b
  4982   0003EC  2BDF               	incf	(main@j_381+1)& (0+255),f,b
  4983   0003EE                     
  4984                           ; BSR set to: 0
  4985                           ;main.c: 816:                }
  4986   0003EE  4BE6               	infsnz	main@i_382& (0+255),f,b
  4987   0003F0  2BE7               	incf	(main@i_382+1)& (0+255),f,b
  4988   0003F2  EFC9  F001         	goto	l4269
  4989   0003F6                     l4281:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;main.c: 817:                j=0;
  4993   0003F6  0E00               	movlw	0
  4994   0003F8  6FDF               	movwf	(main@j_381+1)& (0+255),b
  4995   0003FA  0E00               	movlw	0
  4996   0003FC  6FDE               	movwf	main@j_381& (0+255),b
  4997   0003FE                     l4283:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;main.c: 818:                for(;i<18;i++)
  5001   0003FE  BFE7               	btfsc	(main@i_382+1)& (0+255),7,b
  5002   000400  EF0B  F002         	goto	u4461
  5003   000404  51E7               	movf	(main@i_382+1)& (0+255),w,b
  5004   000406  E109               	bnz	u4460
  5005   000408  0E12               	movlw	18
  5006   00040A  5DE6               	subwf	main@i_382& (0+255),w,b
  5007   00040C  A0D8               	btfss	status,0,c
  5008   00040E  EF0B  F002         	goto	u4461
  5009   000412  EF0D  F002         	goto	u4460
  5010   000416                     u4461:
  5011   000416  EF0F  F002         	goto	l4287
  5012   00041A                     u4460:
  5013   00041A  EF31  F002         	goto	l4295
  5014   00041E                     l4287:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;main.c: 819:                {;main.c: 820:                    clcd_putch(view_event[p][
      +                          i],(0xC0 + (j)));
  5018   00041E  51DE               	movf	main@j_381& (0+255),w,b
  5019   000420  0FC0               	addlw	192
  5020   000422  6E07               	movwf	clcd_putch@addr^0,c
  5021   000424  0E12               	movlw	18
  5022   000426  0385               	mulwf	_p& (0+255),b
  5023   000428  CFF3 F0D4          	movff	prodl,??_main
  5024   00042C  CFF4 F0D5          	movff	prodh,??_main+1
  5025   000430  0386               	mulwf	(_p+1)& (0+255),b
  5026   000432  50F3               	movf	prodl,w,c
  5027   000434  27D5               	addwf	(??_main+1)& (0+255),f,b
  5028   000436  0E00               	movlw	low _view_event
  5029   000438  25D4               	addwf	??_main& (0+255),w,b
  5030   00043A  6FD6               	movwf	(??_main+2)& (0+255),b
  5031   00043C  0E01               	movlw	high _view_event
  5032   00043E  21D5               	addwfc	(??_main+1)& (0+255),w,b
  5033   000440  6FD7               	movwf	(??_main+3)& (0+255),b
  5034   000442  51E6               	movf	main@i_382& (0+255),w,b
  5035   000444  25D6               	addwf	(??_main+2)& (0+255),w,b
  5036   000446  6ED9               	movwf	fsr2l,c
  5037   000448  51E7               	movf	(main@i_382+1)& (0+255),w,b
  5038   00044A  21D7               	addwfc	(??_main+3)& (0+255),w,b
  5039   00044C  6EDA               	movwf	fsr2h,c
  5040   00044E  50DF               	movf	indf2,w,c
  5041   000450  ECD1  F015         	call	_clcd_putch
  5042   000454                     
  5043                           ;main.c: 821:                    j++;
  5044   000454  0100               	movlb	0	; () banked
  5045   000456  4BDE               	infsnz	main@j_381& (0+255),f,b
  5046   000458  2BDF               	incf	(main@j_381+1)& (0+255),f,b
  5047   00045A                     
  5048                           ; BSR set to: 0
  5049                           ;main.c: 822:                }
  5050   00045A  4BE6               	infsnz	main@i_382& (0+255),f,b
  5051   00045C  2BE7               	incf	(main@i_382+1)& (0+255),f,b
  5052   00045E  EFFF  F001         	goto	l4283
  5053   000462                     l4295:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;main.c: 830:         if(key==12)
  5057   000462  0E0C               	movlw	12
  5058   000464  199F               	xorwf	_key& (0+255),w,b
  5059   000466  A4D8               	btfss	status,2,c
  5060   000468  EF38  F002         	goto	u4471
  5061   00046C  EF3A  F002         	goto	u4470
  5062   000470                     u4471:
  5063   000470  EF46  F002         	goto	l4303
  5064   000474                     u4470:
  5065   000474                     
  5066                           ; BSR set to: 0
  5067                           ;main.c: 831:         {;main.c: 832:             event_field++;
  5068   000474  2BEF               	incf	_event_field& (0+255),f,b
  5069   000476                     
  5070                           ; BSR set to: 0
  5071                           ;main.c: 833:             if(event_field==8)
  5072   000476  0E08               	movlw	8
  5073   000478  19EF               	xorwf	_event_field& (0+255),w,b
  5074   00047A  A4D8               	btfss	status,2,c
  5075   00047C  EF42  F002         	goto	u4481
  5076   000480  EF44  F002         	goto	u4480
  5077   000484                     u4481:
  5078   000484  EF46  F002         	goto	l4303
  5079   000488                     u4480:
  5080   000488                     
  5081                           ; BSR set to: 0
  5082                           ;main.c: 834:             {;main.c: 835:               event_field=1;
  5083   000488  0E01               	movlw	1
  5084   00048A  6FEF               	movwf	_event_field& (0+255),b
  5085   00048C                     l4303:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;main.c: 838:        if(key==12)
  5089   00048C  0E0C               	movlw	12
  5090   00048E  199F               	xorwf	_key& (0+255),w,b
  5091   000490  A4D8               	btfss	status,2,c
  5092   000492  EF4D  F002         	goto	u4491
  5093   000496  EF4F  F002         	goto	u4490
  5094   00049A                     u4491:
  5095   00049A  EF64  F002         	goto	l535
  5096   00049E                     u4490:
  5097   00049E                     
  5098                           ; BSR set to: 0
  5099                           ;main.c: 839:         {;main.c: 840:          if(f==2)
  5100   00049E  0E02               	movlw	2
  5101   0004A0  199E               	xorwf	_f& (0+255),w,b
  5102   0004A2  A4D8               	btfss	status,2,c
  5103   0004A4  EF56  F002         	goto	u4501
  5104   0004A8  EF58  F002         	goto	u4500
  5105   0004AC                     u4501:
  5106   0004AC  EF64  F002         	goto	l535
  5107   0004B0                     u4500:
  5108   0004B0                     
  5109                           ; BSR set to: 0
  5110                           ;main.c: 841:         {;main.c: 842:            change_field++;
  5111   0004B0  2BF0               	incf	_change_field& (0+255),f,b
  5112   0004B2                     
  5113                           ; BSR set to: 0
  5114                           ;main.c: 843:            if(change_field==5)
  5115   0004B2  0E05               	movlw	5
  5116   0004B4  19F0               	xorwf	_change_field& (0+255),w,b
  5117   0004B6  A4D8               	btfss	status,2,c
  5118   0004B8  EF60  F002         	goto	u4511
  5119   0004BC  EF62  F002         	goto	u4510
  5120   0004C0                     u4511:
  5121   0004C0  EF64  F002         	goto	l535
  5122   0004C4                     u4510:
  5123   0004C4                     
  5124                           ; BSR set to: 0
  5125                           ;main.c: 844:             {;main.c: 845:               change_field=1;
  5126   0004C4  0E01               	movlw	1
  5127   0004C6  6FF0               	movwf	_change_field& (0+255),b
  5128   0004C8                     l535:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;main.c: 849:        if(flag==0)
  5132   0004C8  51A0               	movf	_flag& (0+255),w,b
  5133   0004CA  A4D8               	btfss	status,2,c
  5134   0004CC  EF6A  F002         	goto	u4521
  5135   0004D0  EF6C  F002         	goto	u4520
  5136   0004D4                     u4521:
  5137   0004D4  EF86  F002         	goto	l538
  5138   0004D8                     u4520:
  5139   0004D8                     
  5140                           ; BSR set to: 0
  5141                           ;main.c: 850:         {;main.c: 851:         if(key==11||key==12)
  5142   0004D8  0E0B               	movlw	11
  5143   0004DA  199F               	xorwf	_key& (0+255),w,b
  5144   0004DC  B4D8               	btfsc	status,2,c
  5145   0004DE  EF73  F002         	goto	u4531
  5146   0004E2  EF75  F002         	goto	u4530
  5147   0004E6                     u4531:
  5148   0004E6  EF7E  F002         	goto	l4317
  5149   0004EA                     u4530:
  5150   0004EA                     
  5151                           ; BSR set to: 0
  5152   0004EA  0E0C               	movlw	12
  5153   0004EC  199F               	xorwf	_key& (0+255),w,b
  5154   0004EE  A4D8               	btfss	status,2,c
  5155   0004F0  EF7C  F002         	goto	u4541
  5156   0004F4  EF7E  F002         	goto	u4540
  5157   0004F8                     u4541:
  5158   0004F8  EF86  F002         	goto	l538
  5159   0004FC                     u4540:
  5160   0004FC                     l4317:
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;main.c: 852:         {;main.c: 853:             flag=1;
  5164   0004FC  0E01               	movlw	1
  5165   0004FE  6FA0               	movwf	_flag& (0+255),b
  5166                           
  5167                           ;main.c: 854:             stop=1;
  5168   000500  0E00               	movlw	0
  5169   000502  6F84               	movwf	(_stop+1)& (0+255),b
  5170   000504  0E01               	movlw	1
  5171   000506  6F83               	movwf	_stop& (0+255),b
  5172   000508                     
  5173                           ; BSR set to: 0
  5174                           ;main.c: 855:             GIE=0;
  5175   000508  9EF2               	bcf	4082,7,c	;volatile
  5176   00050A                     
  5177                           ; BSR set to: 0
  5178                           ;main.c: 856:             PEIE=0;
  5179   00050A  9CF2               	bcf	4082,6,c	;volatile
  5180   00050C                     l538:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;main.c: 859:         if(flag==0)
  5184   00050C  51A0               	movf	_flag& (0+255),w,b
  5185   00050E  A4D8               	btfss	status,2,c
  5186   000510  EF8C  F002         	goto	u4551
  5187   000514  EF8E  F002         	goto	u4550
  5188   000518                     u4551:
  5189   000518  EF98  F002         	goto	l4329
  5190   00051C                     u4550:
  5191   00051C                     
  5192                           ; BSR set to: 0
  5193                           ;main.c: 860:         {;main.c: 861:            get_date();
  5194   00051C  EC40  F013         	call	_get_date	;wreg free
  5195   000520                     
  5196                           ;main.c: 862:            display_date();
  5197   000520  EC60  F015         	call	_display_date	;wreg free
  5198   000524                     
  5199                           ;main.c: 863:       get_time();
  5200   000524  EC86  F012         	call	_get_time	;wreg free
  5201                           
  5202                           ;main.c: 864:       display_time();
  5203   000528  EC04  F013         	call	_display_time	;wreg free
  5204                           
  5205                           ;main.c: 865:        }
  5206   00052C  EF79  F001         	goto	l4243
  5207   000530                     l4329:
  5208                           
  5209                           ; BSR set to: 0
  5210   000530  05A0               	decf	_flag& (0+255),w,b
  5211   000532  A4D8               	btfss	status,2,c
  5212   000534  EF9E  F002         	goto	u4561
  5213   000538  EFA0  F002         	goto	u4560
  5214   00053C                     u4561:
  5215   00053C  EF79  F001         	goto	l4243
  5216   000540                     u4560:
  5217   000540                     
  5218                           ; BSR set to: 0
  5219                           ;main.c: 867:        {;main.c: 868:           if(key==1)
  5220   000540  059F               	decf	_key& (0+255),w,b
  5221   000542  A4D8               	btfss	status,2,c
  5222   000544  EFA6  F002         	goto	u4571
  5223   000548  EFA8  F002         	goto	u4570
  5224   00054C                     u4571:
  5225   00054C  EFCD  F002         	goto	l545
  5226   000550                     u4570:
  5227   000550                     
  5228                           ; BSR set to: 0
  5229                           ;main.c: 869:             {;main.c: 870:                 if(f==2)
  5230   000550  0E02               	movlw	2
  5231   000552  199E               	xorwf	_f& (0+255),w,b
  5232   000554  A4D8               	btfss	status,2,c
  5233   000556  EFAF  F002         	goto	u4581
  5234   00055A  EFB1  F002         	goto	u4580
  5235   00055E                     u4581:
  5236   00055E  EFB7  F002         	goto	l4339
  5237   000562                     u4580:
  5238   000562                     
  5239                           ; BSR set to: 0
  5240                           ;main.c: 871:                 {;main.c: 872:                     f=0;
  5241   000562  6B9E               	clrf	_f& (0+255),b
  5242                           
  5243                           ;main.c: 873:                     flag=0;
  5244   000564  6BA0               	clrf	_flag& (0+255),b
  5245   000566                     
  5246                           ; BSR set to: 0
  5247                           ;main.c: 874:                     once=1;
  5248   000566  0E01               	movlw	1
  5249   000568  6FEE               	movwf	_once& (0+255),b
  5250                           
  5251                           ;main.c: 875:                 }
  5252   00056A  EFCD  F002         	goto	l545
  5253   00056E                     l4339:
  5254                           
  5255                           ; BSR set to: 0
  5256   00056E  059E               	decf	_f& (0+255),w,b
  5257   000570  A4D8               	btfss	status,2,c
  5258   000572  EFBD  F002         	goto	u4591
  5259   000576  EFBF  F002         	goto	u4590
  5260   00057A                     u4591:
  5261   00057A  EFC3  F002         	goto	l4343
  5262   00057E                     u4590:
  5263   00057E                     
  5264                           ; BSR set to: 0
  5265                           ;main.c: 877:                 {;main.c: 878:                  f=2;
  5266   00057E  0E02               	movlw	2
  5267   000580  6F9E               	movwf	_f& (0+255),b
  5268                           
  5269                           ;main.c: 879:                 }
  5270   000582  EFCD  F002         	goto	l545
  5271   000586                     l4343:
  5272                           
  5273                           ; BSR set to: 0
  5274   000586  519E               	movf	_f& (0+255),w,b
  5275   000588  A4D8               	btfss	status,2,c
  5276   00058A  EFC9  F002         	goto	u4601
  5277   00058E  EFCB  F002         	goto	u4600
  5278   000592                     u4601:
  5279   000592  EFCD  F002         	goto	l545
  5280   000596                     u4600:
  5281   000596                     
  5282                           ; BSR set to: 0
  5283                           ;main.c: 881:                 {;main.c: 882:                 f=1;
  5284   000596  0E01               	movlw	1
  5285   000598  6F9E               	movwf	_f& (0+255),b
  5286   00059A                     l545:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;main.c: 885:             if(f==0)
  5290   00059A  519E               	movf	_f& (0+255),w,b
  5291   00059C  A4D8               	btfss	status,2,c
  5292   00059E  EFD3  F002         	goto	u4611
  5293   0005A2  EFD5  F002         	goto	u4610
  5294   0005A6                     u4611:
  5295   0005A6  EF55  F003         	goto	l4373
  5296   0005AA                     u4610:
  5297   0005AA                     
  5298                           ; BSR set to: 0
  5299                           ;main.c: 886:             {;main.c: 887:                clcd_write(0x01, 0);
  5300   0005AA  0E00               	movlw	0
  5301   0005AC  6E05               	movwf	clcd_write@control_bit^0,c
  5302   0005AE  0E01               	movlw	1
  5303   0005B0  EC10  F015         	call	_clcd_write
  5304   0005B4                     
  5305                           ;main.c: 888:             if(oper==1)
  5306   0005B4  0100               	movlb	0	; () banked
  5307   0005B6  05F1               	decf	_oper& (0+255),w,b
  5308   0005B8  A4D8               	btfss	status,2,c
  5309   0005BA  EFE1  F002         	goto	u4621
  5310   0005BE  EFE3  F002         	goto	u4620
  5311   0005C2                     u4621:
  5312   0005C2  EFF5  F002         	goto	l4353
  5313   0005C6                     u4620:
  5314   0005C6                     
  5315                           ; BSR set to: 0
  5316                           ;main.c: 889:            {;main.c: 890:               clcd_print("->",(0x80 + (0)));
  5317   0005C6  0EF5               	movlw	low STR_17
  5318   0005C8  6E07               	movwf	clcd_print@data^0,c
  5319   0005CA  0E2F               	movlw	high STR_17
  5320   0005CC  6E08               	movwf	(clcd_print@data+1)^0,c
  5321   0005CE  0E80               	movlw	128
  5322   0005D0  6E09               	movwf	clcd_print@addr^0,c
  5323   0005D2  ECEA  F013         	call	_clcd_print	;wreg free
  5324                           
  5325                           ;main.c: 891:                clcd_print("  ",(0xC0 + (0)));
  5326   0005D6  0E67               	movlw	low (STR_11+14)
  5327   0005D8  6E07               	movwf	clcd_print@data^0,c
  5328   0005DA  0E2F               	movlw	high (STR_11+14)
  5329   0005DC  6E08               	movwf	(clcd_print@data+1)^0,c
  5330   0005DE  0EC0               	movlw	192
  5331   0005E0  6E09               	movwf	clcd_print@addr^0,c
  5332   0005E2  ECEA  F013         	call	_clcd_print	;wreg free
  5333                           
  5334                           ;main.c: 892:             }
  5335   0005E6  EF0E  F003         	goto	l553
  5336   0005EA                     l4353:
  5337                           
  5338                           ; BSR set to: 0
  5339   0005EA  0E02               	movlw	2
  5340   0005EC  19F1               	xorwf	_oper& (0+255),w,b
  5341   0005EE  A4D8               	btfss	status,2,c
  5342   0005F0  EFFC  F002         	goto	u4631
  5343   0005F4  EFFE  F002         	goto	u4630
  5344   0005F8                     u4631:
  5345   0005F8  EF0E  F003         	goto	l553
  5346   0005FC                     u4630:
  5347   0005FC                     
  5348                           ; BSR set to: 0
  5349                           ;main.c: 894:            {;main.c: 895:               clcd_print("->",(0xC0 + (0)));
  5350   0005FC  0EF5               	movlw	low STR_17
  5351   0005FE  6E07               	movwf	clcd_print@data^0,c
  5352   000600  0E2F               	movlw	high STR_17
  5353   000602  6E08               	movwf	(clcd_print@data+1)^0,c
  5354   000604  0EC0               	movlw	192
  5355   000606  6E09               	movwf	clcd_print@addr^0,c
  5356   000608  ECEA  F013         	call	_clcd_print	;wreg free
  5357                           
  5358                           ;main.c: 896:                 clcd_print("  ",(0x80 + (0)));
  5359   00060C  0E67               	movlw	low (STR_11+14)
  5360   00060E  6E07               	movwf	clcd_print@data^0,c
  5361   000610  0E2F               	movlw	high (STR_11+14)
  5362   000612  6E08               	movwf	(clcd_print@data+1)^0,c
  5363   000614  0E80               	movlw	128
  5364   000616  6E09               	movwf	clcd_print@addr^0,c
  5365   000618  ECEA  F013         	call	_clcd_print	;wreg free
  5366   00061C                     l553:
  5367                           
  5368                           ;main.c: 899:           clcd_print("SET_TIME/DATE ",(0x80 + (2)));
  5369   00061C  0EB7               	movlw	low STR_33
  5370   00061E  6E07               	movwf	clcd_print@data^0,c
  5371   000620  0E2F               	movlw	high STR_33
  5372   000622  6E08               	movwf	(clcd_print@data+1)^0,c
  5373   000624  0E82               	movlw	130
  5374   000626  6E09               	movwf	clcd_print@addr^0,c
  5375   000628  ECEA  F013         	call	_clcd_print	;wreg free
  5376                           
  5377                           ;main.c: 900:             clcd_print("SET/VIEW EVENT",(0xC0 + (2)));
  5378   00062C  0EC6               	movlw	low STR_34
  5379   00062E  6E07               	movwf	clcd_print@data^0,c
  5380   000630  0E2F               	movlw	high STR_34
  5381   000632  6E08               	movwf	(clcd_print@data+1)^0,c
  5382   000634  0EC2               	movlw	194
  5383   000636  6E09               	movwf	clcd_print@addr^0,c
  5384   000638  ECEA  F013         	call	_clcd_print	;wreg free
  5385   00063C                     
  5386                           ;main.c: 902:            if(key==11)
  5387   00063C  0E0B               	movlw	11
  5388   00063E  0100               	movlb	0	; () banked
  5389   000640  199F               	xorwf	_key& (0+255),w,b
  5390   000642  A4D8               	btfss	status,2,c
  5391   000644  EF26  F003         	goto	u4641
  5392   000648  EF28  F003         	goto	u4640
  5393   00064C                     u4641:
  5394   00064C  EF39  F003         	goto	l4365
  5395   000650                     u4640:
  5396   000650                     
  5397                           ; BSR set to: 0
  5398                           ;main.c: 903:            {;main.c: 904:                 if(f==0)
  5399   000650  519E               	movf	_f& (0+255),w,b
  5400   000652  A4D8               	btfss	status,2,c
  5401   000654  EF2E  F003         	goto	u4651
  5402   000658  EF30  F003         	goto	u4650
  5403   00065C                     u4651:
  5404   00065C  EF39  F003         	goto	l4365
  5405   000660                     u4650:
  5406   000660                     
  5407                           ; BSR set to: 0
  5408                           ;main.c: 905:                if(oper>1)
  5409   000660  0E01               	movlw	1
  5410   000662  65F1               	cpfsgt	_oper& (0+255),b
  5411   000664  EF36  F003         	goto	u4661
  5412   000668  EF38  F003         	goto	u4660
  5413   00066C                     u4661:
  5414   00066C  EF39  F003         	goto	l4365
  5415   000670                     u4660:
  5416   000670                     
  5417                           ; BSR set to: 0
  5418                           ;main.c: 906:                 oper--;
  5419   000670  07F1               	decf	_oper& (0+255),f,b
  5420   000672                     l4365:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;main.c: 908:             if(key==12)
  5424   000672  0E0C               	movlw	12
  5425   000674  199F               	xorwf	_key& (0+255),w,b
  5426   000676  A4D8               	btfss	status,2,c
  5427   000678  EF40  F003         	goto	u4671
  5428   00067C  EF42  F003         	goto	u4670
  5429   000680                     u4671:
  5430   000680  EF55  F003         	goto	l4373
  5431   000684                     u4670:
  5432   000684                     
  5433                           ; BSR set to: 0
  5434                           ;main.c: 909:            {;main.c: 910:                 if(f==0)
  5435   000684  519E               	movf	_f& (0+255),w,b
  5436   000686  A4D8               	btfss	status,2,c
  5437   000688  EF48  F003         	goto	u4681
  5438   00068C  EF4A  F003         	goto	u4680
  5439   000690                     u4681:
  5440   000690  EF55  F003         	goto	l4373
  5441   000694                     u4680:
  5442   000694                     
  5443                           ; BSR set to: 0
  5444                           ;main.c: 911:                if(oper<2)
  5445   000694  0E02               	movlw	2
  5446   000696  61F1               	cpfslt	_oper& (0+255),b
  5447   000698  EF50  F003         	goto	u4691
  5448   00069C  EF52  F003         	goto	u4690
  5449   0006A0                     u4691:
  5450   0006A0  EF55  F003         	goto	l558
  5451   0006A4                     u4690:
  5452   0006A4                     
  5453                           ; BSR set to: 0
  5454                           ;main.c: 912:                 {;main.c: 913:                     oper++;
  5455   0006A4  2BF1               	incf	_oper& (0+255),f,b
  5456   0006A6  EF55  F003         	goto	l4373
  5457   0006AA                     l558:
  5458   0006AA                     l4373:
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;main.c: 917:             if(oper==1)
  5462   0006AA  05F1               	decf	_oper& (0+255),w,b
  5463   0006AC  A4D8               	btfss	status,2,c
  5464   0006AE  EF5B  F003         	goto	u4701
  5465   0006B2  EF5D  F003         	goto	u4700
  5466   0006B6                     u4701:
  5467   0006B6  EF72  F003         	goto	l4381
  5468   0006BA                     u4700:
  5469   0006BA                     
  5470                           ; BSR set to: 0
  5471                           ;main.c: 918:            {;main.c: 919:                 if(f==1||f==2)
  5472   0006BA  059E               	decf	_f& (0+255),w,b
  5473   0006BC  B4D8               	btfsc	status,2,c
  5474   0006BE  EF63  F003         	goto	u4711
  5475   0006C2  EF65  F003         	goto	u4710
  5476   0006C6                     u4711:
  5477   0006C6  EF6E  F003         	goto	l4379
  5478   0006CA                     u4710:
  5479   0006CA                     
  5480                           ; BSR set to: 0
  5481   0006CA  0E02               	movlw	2
  5482   0006CC  199E               	xorwf	_f& (0+255),w,b
  5483   0006CE  A4D8               	btfss	status,2,c
  5484   0006D0  EF6C  F003         	goto	u4721
  5485   0006D4  EF6E  F003         	goto	u4720
  5486   0006D8                     u4721:
  5487   0006D8  EF79  F001         	goto	l4243
  5488   0006DC                     u4720:
  5489   0006DC                     l4379:
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;main.c: 920:                 {;main.c: 921:                   GOTO_SET_TIMEDATA();
  5493   0006DC  EC5A  F00F         	call	_GOTO_SET_TIMEDATA	;wreg free
  5494   0006E0  EF79  F001         	goto	l4243
  5495   0006E4                     l4381:
  5496                           
  5497                           ; BSR set to: 0
  5498   0006E4  0E02               	movlw	2
  5499   0006E6  19F1               	xorwf	_oper& (0+255),w,b
  5500   0006E8  A4D8               	btfss	status,2,c
  5501   0006EA  EF79  F003         	goto	u4731
  5502   0006EE  EF7B  F003         	goto	u4730
  5503   0006F2                     u4731:
  5504   0006F2  EF90  F003         	goto	l544
  5505   0006F6                     u4730:
  5506   0006F6                     
  5507                           ; BSR set to: 0
  5508                           ;main.c: 925:             {;main.c: 926:                 if(f==1||f==2)
  5509   0006F6  059E               	decf	_f& (0+255),w,b
  5510   0006F8  B4D8               	btfsc	status,2,c
  5511   0006FA  EF81  F003         	goto	u4741
  5512   0006FE  EF83  F003         	goto	u4740
  5513   000702                     u4741:
  5514   000702  EF8C  F003         	goto	l4387
  5515   000706                     u4740:
  5516   000706                     
  5517                           ; BSR set to: 0
  5518   000706  0E02               	movlw	2
  5519   000708  199E               	xorwf	_f& (0+255),w,b
  5520   00070A  A4D8               	btfss	status,2,c
  5521   00070C  EF8A  F003         	goto	u4751
  5522   000710  EF8C  F003         	goto	u4750
  5523   000714                     u4751:
  5524   000714  EF90  F003         	goto	l544
  5525   000718                     u4750:
  5526   000718                     l4387:
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;main.c: 927:                 {;main.c: 928:                     GOTO_SET_EVENT();
  5530   000718  ECA7  F00E         	call	_GOTO_SET_EVENT	;wreg free
  5531   00071C  EF79  F001         	goto	l4243
  5532   000720                     l544:
  5533                           
  5534                           ; BSR set to: 0
  5535   000720  EF79  F001         	goto	l4243
  5536   000724  EF07  F000         	goto	start
  5537   000728                     __end_of_main:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _read_switches *****************
  5541 ;; Defined at:
  5542 ;;		line 88 in file "matrix_keypad.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  detection_ty    1    wreg     unsigned char 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  detection_ty    1    4[COMRAM] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5556 ;;      Params:         0       0       0       0       0       0       0
  5557 ;;      Locals:         1       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0
  5559 ;;      Totals:         1       0       0       0       0       0       0
  5560 ;;Total ram usage:        1 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 2
  5563 ;; This function calls:
  5564 ;;		_scan_key
  5565 ;; This function is called by:
  5566 ;;		_main
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text1
  5571   002590                     __ptext1:
  5572                           	callstack 0
  5573   002590                     _read_switches:
  5574                           	callstack 28
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;incstack = 0
  5578                           ;read_switches@detection_type stored from wreg
  5579   002590  6E05               	movwf	read_switches@detection_type^0,c
  5580   002592                     
  5581                           ;matrix_keypad.c: 88: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 89: {;matrix_keypad.c: 90:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 92:  if (detection_type == 1)
  5582   002592  0405               	decf	read_switches@detection_type^0,w,c
  5583   002594  A4D8               	btfss	status,2,c
  5584   002596  EFCF  F012         	goto	u3451
  5585   00259A  EFD1  F012         	goto	u3450
  5586   00259E                     u3451:
  5587   00259E  EFF6  F012         	goto	l3761
  5588   0025A2                     u3450:
  5589   0025A2                     
  5590                           ;matrix_keypad.c: 93:  {;matrix_keypad.c: 94:   key = scan_key();
  5591   0025A2  ECAC  F010         	call	_scan_key	;wreg free
  5592   0025A6  6E57               	movwf	read_switches@key^0,c
  5593   0025A8                     
  5594                           ;matrix_keypad.c: 95:   if(key != 0xFF && once )
  5595   0025A8  2857               	incf	read_switches@key^0,w,c
  5596   0025AA  B4D8               	btfsc	status,2,c
  5597   0025AC  EFDA  F012         	goto	u3461
  5598   0025B0  EFDC  F012         	goto	u3460
  5599   0025B4                     u3461:
  5600   0025B4  EFE9  F012         	goto	l3757
  5601   0025B8                     u3460:
  5602   0025B8  0100               	movlb	0	; () banked
  5603   0025BA  51F2               	movf	read_switches@once& (0+255),w,b
  5604   0025BC  B4D8               	btfsc	status,2,c
  5605   0025BE  EFE3  F012         	goto	u3471
  5606   0025C2  EFE5  F012         	goto	u3470
  5607   0025C6                     u3471:
  5608   0025C6  EFE9  F012         	goto	l3757
  5609   0025CA                     u3470:
  5610   0025CA                     
  5611                           ; BSR set to: 0
  5612                           ;matrix_keypad.c: 96:   {;matrix_keypad.c: 97:    once = 0;
  5613   0025CA  6BF2               	clrf	read_switches@once& (0+255),b
  5614   0025CC                     
  5615                           ; BSR set to: 0
  5616                           ;matrix_keypad.c: 98:    return key;
  5617   0025CC  5057               	movf	read_switches@key^0,w,c
  5618   0025CE  EF03  F013         	goto	l135
  5619   0025D2                     l3757:
  5620   0025D2  2857               	incf	read_switches@key^0,w,c
  5621   0025D4  A4D8               	btfss	status,2,c
  5622   0025D6  EFEF  F012         	goto	u3481
  5623   0025DA  EFF1  F012         	goto	u3480
  5624   0025DE                     u3481:
  5625   0025DE  EF02  F013         	goto	l3767
  5626   0025E2                     u3480:
  5627   0025E2                     
  5628                           ;matrix_keypad.c: 101:   {;matrix_keypad.c: 102:    once = 1;
  5629   0025E2  0E01               	movlw	1
  5630   0025E4  0100               	movlb	0	; () banked
  5631   0025E6  6FF2               	movwf	read_switches@once& (0+255),b
  5632   0025E8  EF02  F013         	goto	l3767
  5633   0025EC                     l3761:
  5634   0025EC  5005               	movf	read_switches@detection_type^0,w,c
  5635   0025EE  A4D8               	btfss	status,2,c
  5636   0025F0  EFFC  F012         	goto	u3491
  5637   0025F4  EFFE  F012         	goto	u3490
  5638   0025F8                     u3491:
  5639   0025F8  EF02  F013         	goto	l3767
  5640   0025FC                     u3490:
  5641   0025FC                     
  5642                           ;matrix_keypad.c: 106:  {;matrix_keypad.c: 107:   return scan_key();
  5643   0025FC  ECAC  F010         	call	_scan_key	;wreg free
  5644   002600  EF03  F013         	goto	l135
  5645   002604                     l3767:
  5646                           
  5647                           ;matrix_keypad.c: 110:  return 0xFF;
  5648   002604  0EFF               	movlw	255
  5649   002606                     l135:
  5650   002606  0012               	return		;funcret
  5651   002608                     __end_of_read_switches:
  5652                           	callstack 0
  5653                           
  5654 ;; *************** function _scan_key *****************
  5655 ;; Defined at:
  5656 ;;		line 18 in file "matrix_keypad.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;		None
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      unsigned char 
  5663 ;; Registers used:
  5664 ;;		wreg
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5670 ;;      Params:         0       0       0       0       0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0       0
  5673 ;;      Totals:         0       0       0       0       0       0       0
  5674 ;;Total ram usage:        0 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; Hardware stack levels required when called: 1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_read_switches
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text2
  5685   002158                     __ptext2:
  5686                           	callstack 0
  5687   002158                     _scan_key:
  5688                           	callstack 28
  5689   002158                     
  5690                           ;matrix_keypad.c: 20:  PORTBbits.RB5 = 0;
  5691   002158  9A81               	bcf	129,5,c	;volatile
  5692                           
  5693                           ;matrix_keypad.c: 21:  PORTBbits.RB6 = 1;
  5694   00215A  8C81               	bsf	129,6,c	;volatile
  5695                           
  5696                           ;matrix_keypad.c: 22:  PORTBbits.RB7 = 1;
  5697   00215C  8E81               	bsf	129,7,c	;volatile
  5698                           
  5699                           ;matrix_keypad.c: 24:  if (PORTBbits.RB1 == 0)
  5700   00215E  B281               	btfsc	129,1,c	;volatile
  5701   002160  EFB4  F010         	goto	u2551
  5702   002164  EFB6  F010         	goto	u2550
  5703   002168                     u2551:
  5704   002168  EFB9  F010         	goto	l105
  5705   00216C                     u2550:
  5706   00216C                     
  5707                           ;matrix_keypad.c: 25:  {;matrix_keypad.c: 26:   return 1;
  5708   00216C  0E01               	movlw	1
  5709   00216E  EF2F  F011         	goto	l106
  5710   002172                     l105:
  5711   002172  B481               	btfsc	129,2,c	;volatile
  5712   002174  EFBE  F010         	goto	u2561
  5713   002178  EFC0  F010         	goto	u2560
  5714   00217C                     u2561:
  5715   00217C  EFC3  F010         	goto	l108
  5716   002180                     u2560:
  5717   002180                     
  5718                           ;matrix_keypad.c: 29:  {;matrix_keypad.c: 30:   return 4;
  5719   002180  0E04               	movlw	4
  5720   002182  EF2F  F011         	goto	l106
  5721   002186                     l108:
  5722   002186  B681               	btfsc	129,3,c	;volatile
  5723   002188  EFC8  F010         	goto	u2571
  5724   00218C  EFCA  F010         	goto	u2570
  5725   002190                     u2571:
  5726   002190  EFCD  F010         	goto	l110
  5727   002194                     u2570:
  5728   002194                     
  5729                           ;matrix_keypad.c: 33:  {;matrix_keypad.c: 34:   return 7;
  5730   002194  0E07               	movlw	7
  5731   002196  EF2F  F011         	goto	l106
  5732   00219A                     l110:
  5733   00219A  B881               	btfsc	129,4,c	;volatile
  5734   00219C  EFD2  F010         	goto	u2581
  5735   0021A0  EFD4  F010         	goto	u2580
  5736   0021A4                     u2581:
  5737   0021A4  EFD7  F010         	goto	l107
  5738   0021A8                     u2580:
  5739   0021A8                     
  5740                           ;matrix_keypad.c: 37:  {;matrix_keypad.c: 38:   return 10;
  5741   0021A8  0E0A               	movlw	10
  5742   0021AA  EF2F  F011         	goto	l106
  5743   0021AE                     l107:
  5744                           
  5745                           ;matrix_keypad.c: 41:  PORTBbits.RB5 = 1;
  5746   0021AE  8A81               	bsf	129,5,c	;volatile
  5747                           
  5748                           ;matrix_keypad.c: 42:  PORTBbits.RB6 = 0;
  5749   0021B0  9C81               	bcf	129,6,c	;volatile
  5750                           
  5751                           ;matrix_keypad.c: 43:  PORTBbits.RB7 = 1;
  5752   0021B2  8E81               	bsf	129,7,c	;volatile
  5753                           
  5754                           ;matrix_keypad.c: 45:  if (PORTBbits.RB1 == 0)
  5755   0021B4  B281               	btfsc	129,1,c	;volatile
  5756   0021B6  EFDF  F010         	goto	u2591
  5757   0021BA  EFE1  F010         	goto	u2590
  5758   0021BE                     u2591:
  5759   0021BE  EFE4  F010         	goto	l113
  5760   0021C2                     u2590:
  5761   0021C2                     
  5762                           ;matrix_keypad.c: 46:  {;matrix_keypad.c: 47:   return 2;
  5763   0021C2  0E02               	movlw	2
  5764   0021C4  EF2F  F011         	goto	l106
  5765   0021C8                     l113:
  5766   0021C8  B481               	btfsc	129,2,c	;volatile
  5767   0021CA  EFE9  F010         	goto	u2601
  5768   0021CE  EFEB  F010         	goto	u2600
  5769   0021D2                     u2601:
  5770   0021D2  EFEE  F010         	goto	l115
  5771   0021D6                     u2600:
  5772   0021D6                     
  5773                           ;matrix_keypad.c: 50:  {;matrix_keypad.c: 51:   return 5;
  5774   0021D6  0E05               	movlw	5
  5775   0021D8  EF2F  F011         	goto	l106
  5776   0021DC                     l115:
  5777   0021DC  B681               	btfsc	129,3,c	;volatile
  5778   0021DE  EFF3  F010         	goto	u2611
  5779   0021E2  EFF5  F010         	goto	u2610
  5780   0021E6                     u2611:
  5781   0021E6  EFF8  F010         	goto	l117
  5782   0021EA                     u2610:
  5783   0021EA                     
  5784                           ;matrix_keypad.c: 54:  {;matrix_keypad.c: 55:   return 8;
  5785   0021EA  0E08               	movlw	8
  5786   0021EC  EF2F  F011         	goto	l106
  5787   0021F0                     l117:
  5788   0021F0  B881               	btfsc	129,4,c	;volatile
  5789   0021F2  EFFD  F010         	goto	u2621
  5790   0021F6  EFFF  F010         	goto	u2620
  5791   0021FA                     u2621:
  5792   0021FA  EF02  F011         	goto	l114
  5793   0021FE                     u2620:
  5794   0021FE                     
  5795                           ;matrix_keypad.c: 58:  {;matrix_keypad.c: 59:   return 11;
  5796   0021FE  0E0B               	movlw	11
  5797   002200  EF2F  F011         	goto	l106
  5798   002204                     l114:
  5799                           
  5800                           ;matrix_keypad.c: 62:  PORTBbits.RB5 = 1;
  5801   002204  8A81               	bsf	129,5,c	;volatile
  5802                           
  5803                           ;matrix_keypad.c: 63:  PORTBbits.RB6 = 1;
  5804   002206  8C81               	bsf	129,6,c	;volatile
  5805                           
  5806                           ;matrix_keypad.c: 64:  PORTBbits.RB7 = 0;
  5807   002208  9E81               	bcf	129,7,c	;volatile
  5808                           
  5809                           ;matrix_keypad.c: 66:  PORTBbits.RB7 = 0;
  5810   00220A  9E81               	bcf	129,7,c	;volatile
  5811                           
  5812                           ;matrix_keypad.c: 68:  if (PORTBbits.RB1 == 0)
  5813   00220C  B281               	btfsc	129,1,c	;volatile
  5814   00220E  EF0B  F011         	goto	u2631
  5815   002212  EF0D  F011         	goto	u2630
  5816   002216                     u2631:
  5817   002216  EF10  F011         	goto	l120
  5818   00221A                     u2630:
  5819   00221A                     
  5820                           ;matrix_keypad.c: 69:  {;matrix_keypad.c: 70:   return 3;
  5821   00221A  0E03               	movlw	3
  5822   00221C  EF2F  F011         	goto	l106
  5823   002220                     l120:
  5824   002220  B481               	btfsc	129,2,c	;volatile
  5825   002222  EF15  F011         	goto	u2641
  5826   002226  EF17  F011         	goto	u2640
  5827   00222A                     u2641:
  5828   00222A  EF1A  F011         	goto	l122
  5829   00222E                     u2640:
  5830   00222E                     
  5831                           ;matrix_keypad.c: 73:  {;matrix_keypad.c: 74:   return 6;
  5832   00222E  0E06               	movlw	6
  5833   002230  EF2F  F011         	goto	l106
  5834   002234                     l122:
  5835   002234  B681               	btfsc	129,3,c	;volatile
  5836   002236  EF1F  F011         	goto	u2651
  5837   00223A  EF21  F011         	goto	u2650
  5838   00223E                     u2651:
  5839   00223E  EF24  F011         	goto	l124
  5840   002242                     u2650:
  5841   002242                     
  5842                           ;matrix_keypad.c: 77:  {;matrix_keypad.c: 78:   return 9;
  5843   002242  0E09               	movlw	9
  5844   002244  EF2F  F011         	goto	l106
  5845   002248                     l124:
  5846   002248  B881               	btfsc	129,4,c	;volatile
  5847   00224A  EF29  F011         	goto	u2661
  5848   00224E  EF2B  F011         	goto	u2660
  5849   002252                     u2661:
  5850   002252  EF2E  F011         	goto	l123
  5851   002256                     u2660:
  5852   002256                     
  5853                           ;matrix_keypad.c: 81:  {;matrix_keypad.c: 82:   return 12;
  5854   002256  0E0C               	movlw	12
  5855   002258  EF2F  F011         	goto	l106
  5856   00225C                     l123:
  5857   00225C                     
  5858                           ;matrix_keypad.c: 85:  return 0xFF;
  5859   00225C  0EFF               	movlw	255
  5860   00225E                     l106:
  5861   00225E  0012               	return		;funcret
  5862   002260                     __end_of_scan_key:
  5863                           	callstack 0
  5864                           
  5865 ;; *************** function _init_config *****************
  5866 ;; Defined at:
  5867 ;;		line 68 in file "main.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5881 ;;      Params:         0       0       0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0
  5884 ;;      Totals:         0       0       0       0       0       0       0
  5885 ;;Total ram usage:        0 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 6
  5888 ;; This function calls:
  5889 ;;		_init_clcd
  5890 ;;		_init_ds1307
  5891 ;;		_init_i2c
  5892 ;;		_init_matrix_keypad
  5893 ;;		_init_timer0
  5894 ;; This function is called by:
  5895 ;;		_main
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text3
  5900   002B3E                     __ptext3:
  5901                           	callstack 0
  5902   002B3E                     _init_config:
  5903                           	callstack 24
  5904   002B3E                     
  5905                           ;main.c: 70:     PEIE = 1;
  5906   002B3E  8CF2               	bsf	4082,6,c	;volatile
  5907                           
  5908                           ;main.c: 71:     GIE = 1;
  5909   002B40  8EF2               	bsf	4082,7,c	;volatile
  5910                           
  5911                           ;main.c: 74:     PORTB = 0x00;
  5912   002B42  6A81               	clrf	129,c	;volatile
  5913                           
  5914                           ;main.c: 75:     TRISB = 0x00;
  5915   002B44  6A93               	clrf	147,c	;volatile
  5916   002B46                     
  5917                           ;main.c: 76:     ADCON1 = 0x0F;
  5918   002B46  0E0F               	movlw	15
  5919   002B48  6EC1               	movwf	193,c	;volatile
  5920   002B4A                     
  5921                           ;main.c: 79:     init_timer0();
  5922   002B4A  ECDD  F015         	call	_init_timer0	;wreg free
  5923   002B4E                     
  5924                           ;main.c: 81:     init_i2c();
  5925   002B4E  ECE8  F015         	call	_init_i2c	;wreg free
  5926   002B52                     
  5927                           ;main.c: 82:     init_ds1307();
  5928   002B52  EC87  F014         	call	_init_ds1307	;wreg free
  5929   002B56                     
  5930                           ;main.c: 83:     init_matrix_keypad();
  5931   002B56  ECF3  F015         	call	_init_matrix_keypad	;wreg free
  5932   002B5A                     
  5933                           ;main.c: 84:     init_clcd();
  5934   002B5A  ECEF  F011         	call	_init_clcd	;wreg free
  5935   002B5E                     
  5936                           ;main.c: 85:     TRISE0 = 0;
  5937   002B5E  9096               	bcf	3990,0,c	;volatile
  5938   002B60                     
  5939                           ;main.c: 86:     RE0 = 0;
  5940   002B60  9084               	bcf	3972,0,c	;volatile
  5941   002B62  0012               	return		;funcret
  5942   002B64                     __end_of_init_config:
  5943                           	callstack 0
  5944                           
  5945 ;; *************** function _init_timer0 *****************
  5946 ;; Defined at:
  5947 ;;		line 4 in file "timer0.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5961 ;;      Params:         0       0       0       0       0       0       0
  5962 ;;      Locals:         0       0       0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0
  5964 ;;      Totals:         0       0       0       0       0       0       0
  5965 ;;Total ram usage:        0 bytes
  5966 ;; Hardware stack levels used: 1
  5967 ;; Hardware stack levels required when called: 1
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_init_config
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text4
  5976   002BBA                     __ptext4:
  5977                           	callstack 0
  5978   002BBA                     _init_timer0:
  5979                           	callstack 28
  5980   002BBA                     
  5981                           ;timer0.c: 12:  T08BIT = 1;
  5982   002BBA  8CD5               	bsf	4053,6,c	;volatile
  5983                           
  5984                           ;timer0.c: 15:  T0CS = 0;
  5985   002BBC  9AD5               	bcf	4053,5,c	;volatile
  5986                           
  5987                           ;timer0.c: 18:  TMR0ON = 1;
  5988   002BBE  8ED5               	bsf	4053,7,c	;volatile
  5989                           
  5990                           ;timer0.c: 21:  PSA = 1;
  5991   002BC0  86D5               	bsf	4053,3,c	;volatile
  5992   002BC2                     
  5993                           ;timer0.c: 23:  TMR0 = 6;
  5994   002BC2  0E00               	movlw	0
  5995   002BC4  6ED7               	movwf	215,c	;volatile
  5996   002BC6  0E06               	movlw	6
  5997   002BC8  6ED6               	movwf	214,c	;volatile
  5998   002BCA                     
  5999                           ;timer0.c: 26:  TMR0IF = 0;
  6000   002BCA  94F2               	bcf	4082,2,c	;volatile
  6001   002BCC                     
  6002                           ;timer0.c: 29:  TMR0IE = 1;
  6003   002BCC  8AF2               	bsf	4082,5,c	;volatile
  6004   002BCE  0012               	return		;funcret
  6005   002BD0                     __end_of_init_timer0:
  6006                           	callstack 0
  6007                           
  6008 ;; *************** function _init_matrix_keypad *****************
  6009 ;; Defined at:
  6010 ;;		line 4 in file "matrix_keypad.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6024 ;;      Params:         0       0       0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0
  6026 ;;      Temps:          0       0       0       0       0       0       0
  6027 ;;      Totals:         0       0       0       0       0       0       0
  6028 ;;Total ram usage:        0 bytes
  6029 ;; Hardware stack levels used: 1
  6030 ;; Hardware stack levels required when called: 1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_init_config
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text5
  6039   002BE6                     __ptext5:
  6040                           	callstack 0
  6041   002BE6                     _init_matrix_keypad:
  6042                           	callstack 28
  6043   002BE6                     
  6044                           ;matrix_keypad.c: 7:  ADCON1 = 0x0F;
  6045   002BE6  0E0F               	movlw	15
  6046   002BE8  6EC1               	movwf	193,c	;volatile
  6047                           
  6048                           ;matrix_keypad.c: 10:  TRISB = 0x1E;
  6049   002BEA  0E1E               	movlw	30
  6050   002BEC  6E93               	movwf	147,c	;volatile
  6051   002BEE                     
  6052                           ;matrix_keypad.c: 13:  RBPU = 0;
  6053   002BEE  9EF1               	bcf	4081,7,c	;volatile
  6054   002BF0                     
  6055                           ;matrix_keypad.c: 15:  PORTB = PORTB | 0xE0;
  6056   002BF0  5081               	movf	129,w,c	;volatile
  6057   002BF2  09E0               	iorlw	224
  6058   002BF4  6E81               	movwf	129,c	;volatile
  6059   002BF6  0012               	return		;funcret
  6060   002BF8                     __end_of_init_matrix_keypad:
  6061                           	callstack 0
  6062                           
  6063 ;; *************** function _init_i2c *****************
  6064 ;; Defined at:
  6065 ;;		line 4 in file "i2c_1.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6079 ;;      Params:         0       0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_init_config
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text6
  6094   002BD0                     __ptext6:
  6095                           	callstack 0
  6096   002BD0                     _init_i2c:
  6097                           	callstack 28
  6098   002BD0                     
  6099                           ;i2c_1.c: 7:  TRISC3 = 1;
  6100   002BD0  8694               	bsf	3988,3,c	;volatile
  6101                           
  6102                           ;i2c_1.c: 8:  TRISC4 = 1;
  6103   002BD2  8894               	bsf	3988,4,c	;volatile
  6104   002BD4                     
  6105                           ;i2c_1.c: 10:  SSPCON1 = 0x28;
  6106   002BD4  0E28               	movlw	40
  6107   002BD6  6EC6               	movwf	198,c	;volatile
  6108                           
  6109                           ;i2c_1.c: 12:  SSPADD = 0x31;
  6110   002BD8  0E31               	movlw	49
  6111   002BDA  6EC8               	movwf	200,c	;volatile
  6112   002BDC                     
  6113                           ;i2c_1.c: 14:  CKE = 0;
  6114   002BDC  9CC7               	bcf	4039,6,c	;volatile
  6115   002BDE                     
  6116                           ;i2c_1.c: 16:  SMP = 1;
  6117   002BDE  8EC7               	bsf	4039,7,c	;volatile
  6118   002BE0                     
  6119                           ;i2c_1.c: 18:  SSPIF = 0;
  6120   002BE0  969E               	bcf	3998,3,c	;volatile
  6121   002BE2                     
  6122                           ;i2c_1.c: 20:  BCLIF = 0;
  6123   002BE2  96A1               	bcf	4001,3,c	;volatile
  6124   002BE4  0012               	return		;funcret
  6125   002BE6                     __end_of_init_i2c:
  6126                           	callstack 0
  6127                           
  6128 ;; *************** function _init_ds1307 *****************
  6129 ;; Defined at:
  6130 ;;		line 13 in file "ds1307.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  dummy           1   13[COMRAM] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6144 ;;      Params:         0       0       0       0       0       0       0
  6145 ;;      Locals:         1       0       0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0
  6147 ;;      Totals:         1       0       0       0       0       0       0
  6148 ;;Total ram usage:        1 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; Hardware stack levels required when called: 5
  6151 ;; This function calls:
  6152 ;;		_read_ds1307
  6153 ;;		_write_ds1307
  6154 ;; This function is called by:
  6155 ;;		_init_config
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text7
  6160   00290E                     __ptext7:
  6161                           	callstack 0
  6162   00290E                     _init_ds1307:
  6163                           	callstack 24
  6164   00290E                     
  6165                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  6166   00290E  0E00               	movlw	0
  6167   002910  EC75  F015         	call	_read_ds1307
  6168   002914  6E0E               	movwf	init_ds1307@dummy^0,c
  6169   002916                     
  6170                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  6171   002916  500E               	movf	init_ds1307@dummy^0,w,c
  6172   002918  0980               	iorlw	128
  6173   00291A  6E0C               	movwf	write_ds1307@data^0,c
  6174   00291C  0E00               	movlw	0
  6175   00291E  ECC2  F015         	call	_write_ds1307
  6176   002922                     
  6177                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  6178   002922  0E02               	movlw	2
  6179   002924  EC75  F015         	call	_read_ds1307
  6180   002928  6E0E               	movwf	init_ds1307@dummy^0,c
  6181                           
  6182                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  6183   00292A  500E               	movf	init_ds1307@dummy^0,w,c
  6184   00292C  0940               	iorlw	64
  6185   00292E  6E0C               	movwf	write_ds1307@data^0,c
  6186   002930  0E02               	movlw	2
  6187   002932  ECC2  F015         	call	_write_ds1307
  6188   002936                     
  6189                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  6190   002936  0E93               	movlw	147
  6191   002938  6E0C               	movwf	write_ds1307@data^0,c
  6192   00293A  0E07               	movlw	7
  6193   00293C  ECC2  F015         	call	_write_ds1307
  6194   002940                     
  6195                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  6196   002940  0E00               	movlw	0
  6197   002942  EC75  F015         	call	_read_ds1307
  6198   002946  6E0E               	movwf	init_ds1307@dummy^0,c
  6199                           
  6200                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  6201   002948  500E               	movf	init_ds1307@dummy^0,w,c
  6202   00294A  0B7F               	andlw	127
  6203   00294C  6E0C               	movwf	write_ds1307@data^0,c
  6204   00294E  0E00               	movlw	0
  6205   002950  ECC2  F015         	call	_write_ds1307
  6206   002954  0012               	return		;funcret
  6207   002956                     __end_of_init_ds1307:
  6208                           	callstack 0
  6209                           
  6210 ;; *************** function _init_clcd *****************
  6211 ;; Defined at:
  6212 ;;		line 26 in file "clcd.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2, status,0, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6226 ;;      Params:         0       0       0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0
  6228 ;;      Temps:          1       0       0       0       0       0       0
  6229 ;;      Totals:         1       0       0       0       0       0       0
  6230 ;;Total ram usage:        1 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 2
  6233 ;; This function calls:
  6234 ;;		_clcd_write
  6235 ;; This function is called by:
  6236 ;;		_init_config
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text8
  6241   0023DE                     __ptext8:
  6242                           	callstack 0
  6243   0023DE                     _init_clcd:
  6244                           	callstack 27
  6245   0023DE                     
  6246                           ;clcd.c: 29:  TRISD = 0x00;
  6247   0023DE  6A95               	clrf	149,c	;volatile
  6248   0023E0                     
  6249                           ;clcd.c: 31:  TRISC = TRISC & 0xF8;
  6250   0023E0  5094               	movf	148,w,c	;volatile
  6251   0023E2  0BF8               	andlw	248
  6252   0023E4  6E94               	movwf	148,c	;volatile
  6253   0023E6                     
  6254                           ;clcd.c: 33:  RC0 = 0;
  6255   0023E6  9082               	bcf	3970,0,c	;volatile
  6256   0023E8                     
  6257                           ;clcd.c: 37:     _delay((unsigned long)((30)*(20000000/4000.0)));
  6258   0023E8  0EC3               	movlw	195
  6259   0023EA  6E07               	movwf	??_init_clcd^0,c
  6260   0023EC  0ECD               	movlw	205
  6261   0023EE                     u4767:
  6262   0023EE  2EE8               	decfsz	wreg,f,c
  6263   0023F0  D7FE               	bra	u4767
  6264   0023F2  2E07               	decfsz	??_init_clcd^0,f,c
  6265   0023F4  D7FC               	bra	u4767
  6266   0023F6  0000               	nop	
  6267   0023F8                     
  6268                           ;clcd.c: 40:     clcd_write(0x33, 0);
  6269   0023F8  0E00               	movlw	0
  6270   0023FA  6E05               	movwf	clcd_write@control_bit^0,c
  6271   0023FC  0E33               	movlw	51
  6272   0023FE  EC10  F015         	call	_clcd_write
  6273   002402                     
  6274                           ;clcd.c: 41:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  6275   002402  0E1B               	movlw	27
  6276   002404  6E07               	movwf	??_init_clcd^0,c
  6277   002406  0E9E               	movlw	158
  6278   002408                     u4777:
  6279   002408  2EE8               	decfsz	wreg,f,c
  6280   00240A  D7FE               	bra	u4777
  6281   00240C  2E07               	decfsz	??_init_clcd^0,f,c
  6282   00240E  D7FC               	bra	u4777
  6283   002410  D000               	nop2	
  6284   002412                     
  6285                           ;clcd.c: 42:     clcd_write(0x33, 0);
  6286   002412  0E00               	movlw	0
  6287   002414  6E05               	movwf	clcd_write@control_bit^0,c
  6288   002416  0E33               	movlw	51
  6289   002418  EC10  F015         	call	_clcd_write
  6290   00241C                     
  6291                           ;clcd.c: 43:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6292   00241C  0EA6               	movlw	166
  6293   00241E                     u4787:
  6294   00241E  2EE8               	decfsz	wreg,f,c
  6295   002420  D7FE               	bra	u4787
  6296   002422  D000               	nop2	
  6297   002424                     
  6298                           ;clcd.c: 44:     clcd_write(0x33, 0);
  6299   002424  0E00               	movlw	0
  6300   002426  6E05               	movwf	clcd_write@control_bit^0,c
  6301   002428  0E33               	movlw	51
  6302   00242A  EC10  F015         	call	_clcd_write
  6303   00242E                     
  6304                           ;clcd.c: 45:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  6305   00242E  D000               	nop2		;2 cycle nop
  6306   002430  D000               	nop2		;2 cycle nop
  6307   002432  0000               	nop	
  6308   002434                     
  6309                           ;clcd.c: 47:     clcd_write(0x02, 0);
  6310   002434  0E00               	movlw	0
  6311   002436  6E05               	movwf	clcd_write@control_bit^0,c
  6312   002438  0E02               	movlw	2
  6313   00243A  EC10  F015         	call	_clcd_write
  6314   00243E                     
  6315                           ;clcd.c: 48:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6316   00243E  0EA6               	movlw	166
  6317   002440                     u4797:
  6318   002440  2EE8               	decfsz	wreg,f,c
  6319   002442  D7FE               	bra	u4797
  6320   002444  D000               	nop2	
  6321   002446                     
  6322                           ;clcd.c: 49:     clcd_write(0x38, 0);
  6323   002446  0E00               	movlw	0
  6324   002448  6E05               	movwf	clcd_write@control_bit^0,c
  6325   00244A  0E38               	movlw	56
  6326   00244C  EC10  F015         	call	_clcd_write
  6327   002450                     
  6328                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6329   002450  0EA6               	movlw	166
  6330   002452                     u4807:
  6331   002452  2EE8               	decfsz	wreg,f,c
  6332   002454  D7FE               	bra	u4807
  6333   002456  D000               	nop2	
  6334   002458                     
  6335                           ;clcd.c: 51:     clcd_write(0x01, 0);
  6336   002458  0E00               	movlw	0
  6337   00245A  6E05               	movwf	clcd_write@control_bit^0,c
  6338   00245C  0E01               	movlw	1
  6339   00245E  EC10  F015         	call	_clcd_write
  6340   002462                     
  6341                           ;clcd.c: 52:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  6342   002462  0E04               	movlw	4
  6343   002464  6E07               	movwf	??_init_clcd^0,c
  6344   002466  0E3E               	movlw	62
  6345   002468                     u4817:
  6346   002468  2EE8               	decfsz	wreg,f,c
  6347   00246A  D7FE               	bra	u4817
  6348   00246C  2E07               	decfsz	??_init_clcd^0,f,c
  6349   00246E  D7FC               	bra	u4817
  6350   002470                     
  6351                           ;clcd.c: 53:     clcd_write(0x0C, 0);
  6352   002470  0E00               	movlw	0
  6353   002472  6E05               	movwf	clcd_write@control_bit^0,c
  6354   002474  0E0C               	movlw	12
  6355   002476  EC10  F015         	call	_clcd_write
  6356   00247A                     
  6357                           ;clcd.c: 54:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6358   00247A  0EA6               	movlw	166
  6359   00247C                     u4827:
  6360   00247C  2EE8               	decfsz	wreg,f,c
  6361   00247E  D7FE               	bra	u4827
  6362   002480  D000               	nop2	
  6363   002482  0012               	return		;funcret
  6364   002484                     __end_of_init_clcd:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _display_time *****************
  6368 ;; Defined at:
  6369 ;;		line 132 in file "main.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6383 ;;      Params:         0       0       0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0
  6386 ;;      Totals:         0       0       0       0       0       0       0
  6387 ;;Total ram usage:        0 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; Hardware stack levels required when called: 3
  6390 ;; This function calls:
  6391 ;;		_clcd_print
  6392 ;;		_clcd_putch
  6393 ;; This function is called by:
  6394 ;;		_main
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text9
  6399   002608                     __ptext9:
  6400                           	callstack 0
  6401   002608                     _display_time:
  6402                           	callstack 27
  6403   002608                     
  6404                           ;main.c: 134:     clcd_print("TIME ",(0xC0 + (0)));
  6405   002608  0EDC               	movlw	low STR_2
  6406   00260A  6E07               	movwf	clcd_print@data^0,c
  6407   00260C  0E2F               	movlw	high STR_2
  6408   00260E  6E08               	movwf	(clcd_print@data+1)^0,c
  6409   002610  0EC0               	movlw	192
  6410   002612  6E09               	movwf	clcd_print@addr^0,c
  6411   002614  ECEA  F013         	call	_clcd_print	;wreg free
  6412                           
  6413                           ;main.c: 135:     clcd_print(time, (0xC0 + (5)));
  6414   002618  0ECB               	movlw	low _time
  6415   00261A  6E07               	movwf	clcd_print@data^0,c
  6416   00261C  6A08               	clrf	(clcd_print@data+1)^0,c
  6417   00261E  0EC5               	movlw	197
  6418   002620  6E09               	movwf	clcd_print@addr^0,c
  6419   002622  ECEA  F013         	call	_clcd_print	;wreg free
  6420   002626                     
  6421                           ;main.c: 136:     clcd_putch(' ',(0xC0 + (13)));
  6422   002626  0ECD               	movlw	205
  6423   002628  6E07               	movwf	clcd_putch@addr^0,c
  6424   00262A  0E20               	movlw	32
  6425   00262C  ECD1  F015         	call	_clcd_putch
  6426   002630                     
  6427                           ;main.c: 137:     if (clock_reg[0] & 0x40)
  6428   002630  0100               	movlb	0	; () banked
  6429   002632  AD74               	btfss	_clock_reg& (0+255),6,b
  6430   002634  EF1E  F013         	goto	u3501
  6431   002638  EF20  F013         	goto	u3500
  6432   00263C                     u3501:
  6433   00263C  EF3F  F013         	goto	l344
  6434   002640                     u3500:
  6435   002640                     
  6436                           ; BSR set to: 0
  6437                           ;main.c: 138:     {;main.c: 139:         if (clock_reg[0] & 0x20)
  6438   002640  AB74               	btfss	_clock_reg& (0+255),5,b
  6439   002642  EF25  F013         	goto	u3511
  6440   002646  EF27  F013         	goto	u3510
  6441   00264A                     u3511:
  6442   00264A  EF34  F013         	goto	l3805
  6443   00264E                     u3510:
  6444   00264E                     
  6445                           ; BSR set to: 0
  6446                           ;main.c: 140:         {;main.c: 141:           clcd_print("PM", (0xC0 + (14)));
  6447   00264E  0EFB               	movlw	low STR_3
  6448   002650  6E07               	movwf	clcd_print@data^0,c
  6449   002652  0E2F               	movlw	high STR_3
  6450   002654  6E08               	movwf	(clcd_print@data+1)^0,c
  6451   002656  0ECE               	movlw	206
  6452   002658  6E09               	movwf	clcd_print@addr^0,c
  6453   00265A  ECEA  F013         	call	_clcd_print	;wreg free
  6454   00265E                     
  6455                           ;main.c: 142:            AM_PM2='P';
  6456   00265E  0E50               	movlw	80
  6457   002660  0100               	movlb	0	; () banked
  6458   002662  6F9C               	movwf	_AM_PM2& (0+255),b
  6459                           
  6460                           ;main.c: 143:         }
  6461   002664  EF3F  F013         	goto	l344
  6462   002668                     l3805:
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;main.c: 145:         {;main.c: 146:            clcd_print("AM", (0xC0 + (14)));
  6466   002668  0EF8               	movlw	low STR_4
  6467   00266A  6E07               	movwf	clcd_print@data^0,c
  6468   00266C  0E2F               	movlw	high STR_4
  6469   00266E  6E08               	movwf	(clcd_print@data+1)^0,c
  6470   002670  0ECE               	movlw	206
  6471   002672  6E09               	movwf	clcd_print@addr^0,c
  6472   002674  ECEA  F013         	call	_clcd_print	;wreg free
  6473   002678                     
  6474                           ;main.c: 147:            AM_PM2='A';
  6475   002678  0E41               	movlw	65
  6476   00267A  0100               	movlb	0	; () banked
  6477   00267C  6F9C               	movwf	_AM_PM2& (0+255),b
  6478   00267E                     l344:
  6479                           
  6480                           ; BSR set to: 0
  6481   00267E  0012               	return		;funcret
  6482   002680                     __end_of_display_time:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function _display_date *****************
  6486 ;; Defined at:
  6487 ;;		line 124 in file "main.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;		None
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6501 ;;      Params:         0       0       0       0       0       0       0
  6502 ;;      Locals:         0       0       0       0       0       0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0
  6504 ;;      Totals:         0       0       0       0       0       0       0
  6505 ;;Total ram usage:        0 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 3
  6508 ;; This function calls:
  6509 ;;		_clcd_print
  6510 ;;		_clcd_putch
  6511 ;; This function is called by:
  6512 ;;		_main
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text10
  6517   002AC0                     __ptext10:
  6518                           	callstack 0
  6519   002AC0                     _display_date:
  6520                           	callstack 27
  6521   002AC0                     
  6522                           ;main.c: 126:    clcd_print("DATE ",(0x80 + (0)));
  6523   002AC0  0EC0               	movlw	low (STR_33+9)
  6524   002AC2  6E07               	movwf	clcd_print@data^0,c
  6525   002AC4  0E2F               	movlw	high (STR_33+9)
  6526   002AC6  6E08               	movwf	(clcd_print@data+1)^0,c
  6527   002AC8  0E80               	movlw	128
  6528   002ACA  6E09               	movwf	clcd_print@addr^0,c
  6529   002ACC  ECEA  F013         	call	_clcd_print	;wreg free
  6530                           
  6531                           ;main.c: 127:    clcd_print(date, (0x80 + (5)));
  6532   002AD0  0EB1               	movlw	low _date
  6533   002AD2  6E07               	movwf	clcd_print@data^0,c
  6534   002AD4  6A08               	clrf	(clcd_print@data+1)^0,c
  6535   002AD6  0E85               	movlw	133
  6536   002AD8  6E09               	movwf	clcd_print@addr^0,c
  6537   002ADA  ECEA  F013         	call	_clcd_print	;wreg free
  6538   002ADE                     
  6539                           ;main.c: 128:    clcd_putch(' ',(0x80 + (15)));
  6540   002ADE  0E8F               	movlw	143
  6541   002AE0  6E07               	movwf	clcd_putch@addr^0,c
  6542   002AE2  0E20               	movlw	32
  6543   002AE4  ECD1  F015         	call	_clcd_putch
  6544   002AE8  0012               	return		;funcret
  6545   002AEA                     __end_of_display_date:
  6546                           	callstack 0
  6547                           
  6548 ;; *************** function _compare *****************
  6549 ;; Defined at:
  6550 ;;		line 705 in file "main.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  a               2   10[COMRAM] int 
  6553 ;;  temp            2   12[COMRAM] PTR unsigned char [18]
  6554 ;;		 -> temp_PM(180), temp_AM(180), 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  temp2          18   20[COMRAM] unsigned char [18]
  6557 ;;  j               2   40[COMRAM] int 
  6558 ;;  i               2   38[COMRAM] int 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6568 ;;      Params:         4       0       0       0       0       0       0
  6569 ;;      Locals:        22       0       0       0       0       0       0
  6570 ;;      Temps:          6       0       0       0       0       0       0
  6571 ;;      Totals:        32       0       0       0       0       0       0
  6572 ;;Total ram usage:       32 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 2
  6575 ;; This function calls:
  6576 ;;		_strcmp
  6577 ;;		_strcopy
  6578 ;; This function is called by:
  6579 ;;		_main
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text11
  6584   001A50                     __ptext11:
  6585                           	callstack 0
  6586   001A50                     _compare:
  6587                           	callstack 28
  6588   001A50                     
  6589                           ;main.c: 705: void compare(int a,unsigned char temp[][18]);main.c: 706: {;main.c: 709:  
      +                          for( int i=0;i<a-1;i++)
  6590   001A50  0E00               	movlw	0
  6591   001A52  6E28               	movwf	(compare@i+1)^0,c
  6592   001A54  0E00               	movlw	0
  6593   001A56  6E27               	movwf	compare@i^0,c
  6594   001A58  EFDA  F00D         	goto	l3905
  6595   001A5C                     l3893:
  6596                           
  6597                           ;main.c: 710:     {;main.c: 711:         for( int j=0;j<a-1-i;j++)
  6598   001A5C  0E00               	movlw	0
  6599   001A5E  6E2A               	movwf	(compare@j+1)^0,c
  6600   001A60  0E00               	movlw	0
  6601   001A62  6E29               	movwf	compare@j^0,c
  6602   001A64  EFBD  F00D         	goto	l3901
  6603   001A68                     l3895:
  6604                           
  6605                           ;main.c: 712:         {;main.c: 713:             if((strcmp(temp[j],temp[j+1]))>0)
  6606   001A68  0E12               	movlw	18
  6607   001A6A  0229               	mulwf	compare@j^0,c
  6608   001A6C  CFF3 F00F          	movff	prodl,??_compare
  6609   001A70  CFF4 F010          	movff	prodh,??_compare+1
  6610   001A74  022A               	mulwf	(compare@j+1)^0,c
  6611   001A76  50F3               	movf	prodl,w,c
  6612   001A78  2610               	addwf	(??_compare+1)^0,f,c
  6613   001A7A  500F               	movf	??_compare^0,w,c
  6614   001A7C  240D               	addwf	compare@temp^0,w,c
  6615   001A7E  6E05               	movwf	strcmp@l^0,c
  6616   001A80  5010               	movf	(??_compare+1)^0,w,c
  6617   001A82  200E               	addwfc	(compare@temp+1)^0,w,c
  6618   001A84  6E06               	movwf	(strcmp@l+1)^0,c
  6619   001A86  0E12               	movlw	18
  6620   001A88  0229               	mulwf	compare@j^0,c
  6621   001A8A  CFF3 F011          	movff	prodl,??_compare+2
  6622   001A8E  CFF4 F012          	movff	prodh,??_compare+3
  6623   001A92  022A               	mulwf	(compare@j+1)^0,c
  6624   001A94  50F3               	movf	prodl,w,c
  6625   001A96  2612               	addwf	(??_compare+3)^0,f,c
  6626   001A98  5011               	movf	(??_compare+2)^0,w,c
  6627   001A9A  240D               	addwf	compare@temp^0,w,c
  6628   001A9C  6E13               	movwf	(??_compare+4)^0,c
  6629   001A9E  5012               	movf	(??_compare+3)^0,w,c
  6630   001AA0  200E               	addwfc	(compare@temp+1)^0,w,c
  6631   001AA2  6E14               	movwf	(??_compare+5)^0,c
  6632   001AA4  0E12               	movlw	18
  6633   001AA6  2413               	addwf	(??_compare+4)^0,w,c
  6634   001AA8  6E07               	movwf	strcmp@r^0,c
  6635   001AAA  0E00               	movlw	0
  6636   001AAC  2014               	addwfc	(??_compare+5)^0,w,c
  6637   001AAE  6E08               	movwf	(strcmp@r+1)^0,c
  6638   001AB0  ECB4  F013         	call	_strcmp	;wreg free
  6639   001AB4  BE06               	btfsc	(?_strcmp+1)^0,7,c
  6640   001AB6  EF65  F00D         	goto	u3781
  6641   001ABA  5006               	movf	(?_strcmp+1)^0,w,c
  6642   001ABC  E108               	bnz	u3780
  6643   001ABE  0405               	decf	?_strcmp^0,w,c
  6644   001AC0  A0D8               	btfss	status,0,c
  6645   001AC2  EF65  F00D         	goto	u3781
  6646   001AC6  EF67  F00D         	goto	u3780
  6647   001ACA                     u3781:
  6648   001ACA  EFBB  F00D         	goto	l3899
  6649   001ACE                     u3780:
  6650   001ACE                     
  6651                           ;main.c: 714:             {;main.c: 715:              unsigned char temp2[18];;main.c: 7
      +                          16:              strcopy(temp2,temp[j]);
  6652   001ACE  0E15               	movlw	low compare@temp2
  6653   001AD0  6E05               	movwf	strcopy@ptr^0,c
  6654   001AD2  6A06               	clrf	(strcopy@ptr+1)^0,c
  6655   001AD4  0E12               	movlw	18
  6656   001AD6  0229               	mulwf	compare@j^0,c
  6657   001AD8  CFF3 F00F          	movff	prodl,??_compare
  6658   001ADC  CFF4 F010          	movff	prodh,??_compare+1
  6659   001AE0  022A               	mulwf	(compare@j+1)^0,c
  6660   001AE2  50F3               	movf	prodl,w,c
  6661   001AE4  2610               	addwf	(??_compare+1)^0,f,c
  6662   001AE6  500F               	movf	??_compare^0,w,c
  6663   001AE8  240D               	addwf	compare@temp^0,w,c
  6664   001AEA  6E07               	movwf	strcopy@qtr^0,c
  6665   001AEC  5010               	movf	(??_compare+1)^0,w,c
  6666   001AEE  200E               	addwfc	(compare@temp+1)^0,w,c
  6667   001AF0  6E08               	movwf	(strcopy@qtr+1)^0,c
  6668   001AF2  ECAB  F014         	call	_strcopy	;wreg free
  6669                           
  6670                           ;main.c: 717:              strcopy(temp[j],temp[j+1]);
  6671   001AF6  0E12               	movlw	18
  6672   001AF8  0229               	mulwf	compare@j^0,c
  6673   001AFA  CFF3 F00F          	movff	prodl,??_compare
  6674   001AFE  CFF4 F010          	movff	prodh,??_compare+1
  6675   001B02  022A               	mulwf	(compare@j+1)^0,c
  6676   001B04  50F3               	movf	prodl,w,c
  6677   001B06  2610               	addwf	(??_compare+1)^0,f,c
  6678   001B08  500F               	movf	??_compare^0,w,c
  6679   001B0A  240D               	addwf	compare@temp^0,w,c
  6680   001B0C  6E05               	movwf	strcopy@ptr^0,c
  6681   001B0E  5010               	movf	(??_compare+1)^0,w,c
  6682   001B10  200E               	addwfc	(compare@temp+1)^0,w,c
  6683   001B12  6E06               	movwf	(strcopy@ptr+1)^0,c
  6684   001B14  0E12               	movlw	18
  6685   001B16  0229               	mulwf	compare@j^0,c
  6686   001B18  CFF3 F011          	movff	prodl,??_compare+2
  6687   001B1C  CFF4 F012          	movff	prodh,??_compare+3
  6688   001B20  022A               	mulwf	(compare@j+1)^0,c
  6689   001B22  50F3               	movf	prodl,w,c
  6690   001B24  2612               	addwf	(??_compare+3)^0,f,c
  6691   001B26  5011               	movf	(??_compare+2)^0,w,c
  6692   001B28  240D               	addwf	compare@temp^0,w,c
  6693   001B2A  6E13               	movwf	(??_compare+4)^0,c
  6694   001B2C  5012               	movf	(??_compare+3)^0,w,c
  6695   001B2E  200E               	addwfc	(compare@temp+1)^0,w,c
  6696   001B30  6E14               	movwf	(??_compare+5)^0,c
  6697   001B32  0E12               	movlw	18
  6698   001B34  2413               	addwf	(??_compare+4)^0,w,c
  6699   001B36  6E07               	movwf	strcopy@qtr^0,c
  6700   001B38  0E00               	movlw	0
  6701   001B3A  2014               	addwfc	(??_compare+5)^0,w,c
  6702   001B3C  6E08               	movwf	(strcopy@qtr+1)^0,c
  6703   001B3E  ECAB  F014         	call	_strcopy	;wreg free
  6704                           
  6705                           ;main.c: 718:              strcopy(temp[j+1],temp2);
  6706   001B42  0E12               	movlw	18
  6707   001B44  0229               	mulwf	compare@j^0,c
  6708   001B46  CFF3 F00F          	movff	prodl,??_compare
  6709   001B4A  CFF4 F010          	movff	prodh,??_compare+1
  6710   001B4E  022A               	mulwf	(compare@j+1)^0,c
  6711   001B50  50F3               	movf	prodl,w,c
  6712   001B52  2610               	addwf	(??_compare+1)^0,f,c
  6713   001B54  500F               	movf	??_compare^0,w,c
  6714   001B56  240D               	addwf	compare@temp^0,w,c
  6715   001B58  6E11               	movwf	(??_compare+2)^0,c
  6716   001B5A  5010               	movf	(??_compare+1)^0,w,c
  6717   001B5C  200E               	addwfc	(compare@temp+1)^0,w,c
  6718   001B5E  6E12               	movwf	(??_compare+3)^0,c
  6719   001B60  0E12               	movlw	18
  6720   001B62  2411               	addwf	(??_compare+2)^0,w,c
  6721   001B64  6E05               	movwf	strcopy@ptr^0,c
  6722   001B66  0E00               	movlw	0
  6723   001B68  2012               	addwfc	(??_compare+3)^0,w,c
  6724   001B6A  6E06               	movwf	(strcopy@ptr+1)^0,c
  6725   001B6C  0E15               	movlw	low compare@temp2
  6726   001B6E  6E07               	movwf	strcopy@qtr^0,c
  6727   001B70  6A08               	clrf	(strcopy@qtr+1)^0,c
  6728   001B72  ECAB  F014         	call	_strcopy	;wreg free
  6729   001B76                     l3899:
  6730                           
  6731                           ;main.c: 720:         }
  6732   001B76  4A29               	infsnz	compare@j^0,f,c
  6733   001B78  2A2A               	incf	(compare@j+1)^0,f,c
  6734   001B7A                     l3901:
  6735   001B7A  5027               	movf	compare@i^0,w,c
  6736   001B7C  5C0B               	subwf	compare@a^0,w,c
  6737   001B7E  6E0F               	movwf	??_compare^0,c
  6738   001B80  5028               	movf	(compare@i+1)^0,w,c
  6739   001B82  580C               	subwfb	(compare@a+1)^0,w,c
  6740   001B84  6E10               	movwf	(??_compare+1)^0,c
  6741   001B86  0EFF               	movlw	255
  6742   001B88  240F               	addwf	??_compare^0,w,c
  6743   001B8A  6E11               	movwf	(??_compare+2)^0,c
  6744   001B8C  0EFF               	movlw	255
  6745   001B8E  2010               	addwfc	(??_compare+1)^0,w,c
  6746   001B90  6E12               	movwf	(??_compare+3)^0,c
  6747   001B92  5011               	movf	(??_compare+2)^0,w,c
  6748   001B94  5C29               	subwf	compare@j^0,w,c
  6749   001B96  502A               	movf	(compare@j+1)^0,w,c
  6750   001B98  0A80               	xorlw	128
  6751   001B9A  6E13               	movwf	(??_compare+4)^0,c
  6752   001B9C  5012               	movf	(??_compare+3)^0,w,c
  6753   001B9E  0A80               	xorlw	128
  6754   001BA0  5813               	subwfb	(??_compare+4)^0,w,c
  6755   001BA2  A0D8               	btfss	status,0,c
  6756   001BA4  EFD6  F00D         	goto	u3791
  6757   001BA8  EFD8  F00D         	goto	u3790
  6758   001BAC                     u3791:
  6759   001BAC  EF34  F00D         	goto	l3895
  6760   001BB0                     u3790:
  6761   001BB0                     
  6762                           ;main.c: 721:     }
  6763   001BB0  4A27               	infsnz	compare@i^0,f,c
  6764   001BB2  2A28               	incf	(compare@i+1)^0,f,c
  6765   001BB4                     l3905:
  6766   001BB4  0EFF               	movlw	255
  6767   001BB6  240B               	addwf	compare@a^0,w,c
  6768   001BB8  6E0F               	movwf	??_compare^0,c
  6769   001BBA  0EFF               	movlw	255
  6770   001BBC  200C               	addwfc	(compare@a+1)^0,w,c
  6771   001BBE  6E10               	movwf	(??_compare+1)^0,c
  6772   001BC0  500F               	movf	??_compare^0,w,c
  6773   001BC2  5C27               	subwf	compare@i^0,w,c
  6774   001BC4  5028               	movf	(compare@i+1)^0,w,c
  6775   001BC6  0A80               	xorlw	128
  6776   001BC8  6E11               	movwf	(??_compare+2)^0,c
  6777   001BCA  5010               	movf	(??_compare+1)^0,w,c
  6778   001BCC  0A80               	xorlw	128
  6779   001BCE  5811               	subwfb	(??_compare+2)^0,w,c
  6780   001BD0  A0D8               	btfss	status,0,c
  6781   001BD2  EFED  F00D         	goto	u3801
  6782   001BD6  EFEF  F00D         	goto	u3800
  6783   001BDA                     u3801:
  6784   001BDA  EF2E  F00D         	goto	l3893
  6785   001BDE                     u3800:
  6786   001BDE  0012               	return		;funcret
  6787   001BE0                     __end_of_compare:
  6788                           	callstack 0
  6789                           
  6790 ;; *************** function _strcopy *****************
  6791 ;; Defined at:
  6792 ;;		line 723 in file "main.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  ptr             2    4[COMRAM] PTR unsigned char 
  6795 ;;		 -> temp_PM(180), temp_AM(180), compare@temp2(18), view_event(180), 
  6796 ;;  qtr             2    6[COMRAM] PTR unsigned char 
  6797 ;;		 -> temp_PM(180), temp_AM(180), compare@temp2(18), view_event(180), 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  i               2    8[COMRAM] int 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6809 ;;      Params:         4       0       0       0       0       0       0
  6810 ;;      Locals:         2       0       0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0
  6812 ;;      Totals:         6       0       0       0       0       0       0
  6813 ;;Total ram usage:        6 bytes
  6814 ;; Hardware stack levels used: 1
  6815 ;; Hardware stack levels required when called: 1
  6816 ;; This function calls:
  6817 ;;		Nothing
  6818 ;; This function is called by:
  6819 ;;		_compare
  6820 ;;		_main
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text12
  6825   002956                     __ptext12:
  6826                           	callstack 0
  6827   002956                     _strcopy:
  6828                           	callstack 29
  6829   002956                     
  6830                           ;main.c: 723: void strcopy(unsigned char *ptr,unsigned char *qtr);main.c: 724: {;main.c:
      +                           725:     for(int i=0;i<18;i++)
  6831   002956  0E00               	movlw	0
  6832   002958  6E0A               	movwf	(strcopy@i+1)^0,c
  6833   00295A  0E00               	movlw	0
  6834   00295C  6E09               	movwf	strcopy@i^0,c
  6835   00295E                     l3709:
  6836                           
  6837                           ;main.c: 726:     {;main.c: 727:         ptr[i]=qtr[i];
  6838   00295E  5009               	movf	strcopy@i^0,w,c
  6839   002960  2407               	addwf	strcopy@qtr^0,w,c
  6840   002962  6ED9               	movwf	fsr2l,c
  6841   002964  500A               	movf	(strcopy@i+1)^0,w,c
  6842   002966  2008               	addwfc	(strcopy@qtr+1)^0,w,c
  6843   002968  6EDA               	movwf	fsr2h,c
  6844   00296A  5009               	movf	strcopy@i^0,w,c
  6845   00296C  2405               	addwf	strcopy@ptr^0,w,c
  6846   00296E  6EE1               	movwf	fsr1l,c
  6847   002970  500A               	movf	(strcopy@i+1)^0,w,c
  6848   002972  2006               	addwfc	(strcopy@ptr+1)^0,w,c
  6849   002974  6EE2               	movwf	fsr1h,c
  6850   002976  CFDF FFE7          	movff	indf2,indf1
  6851   00297A                     
  6852                           ;main.c: 728:     }
  6853   00297A  4A09               	infsnz	strcopy@i^0,f,c
  6854   00297C  2A0A               	incf	(strcopy@i+1)^0,f,c
  6855   00297E  BE0A               	btfsc	(strcopy@i+1)^0,7,c
  6856   002980  EFCB  F014         	goto	u3421
  6857   002984  500A               	movf	(strcopy@i+1)^0,w,c
  6858   002986  E109               	bnz	u3420
  6859   002988  0E12               	movlw	18
  6860   00298A  5C09               	subwf	strcopy@i^0,w,c
  6861   00298C  A0D8               	btfss	status,0,c
  6862   00298E  EFCB  F014         	goto	u3421
  6863   002992  EFCD  F014         	goto	u3420
  6864   002996                     u3421:
  6865   002996  EFAF  F014         	goto	l3709
  6866   00299A                     u3420:
  6867   00299A  0012               	return		;funcret
  6868   00299C                     __end_of_strcopy:
  6869                           	callstack 0
  6870                           
  6871 ;; *************** function _check_event_trigger *****************
  6872 ;; Defined at:
  6873 ;;		line 196 in file "get_time.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;  ch              2    0        int 
  6878 ;;  ch              2    0        int 
  6879 ;;  ch              2    0        int 
  6880 ;;  i               2   69[COMRAM] unsigned int 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  1    wreg      void 
  6883 ;; Registers used:
  6884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6890 ;;      Params:         0       0       0       0       0       0       0
  6891 ;;      Locals:         2       0       0       0       0       0       0
  6892 ;;      Temps:          3       0       0       0       0       0       0
  6893 ;;      Totals:         5       0       0       0       0       0       0
  6894 ;;Total ram usage:        5 bytes
  6895 ;; Hardware stack levels used: 1
  6896 ;; Hardware stack levels required when called: 8
  6897 ;; This function calls:
  6898 ;;		_check_daily_event
  6899 ;;		_check_onetime_event
  6900 ;;		_check_weekly_event
  6901 ;;		_clcd_write
  6902 ;; This function is called by:
  6903 ;;		_main
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text13
  6908   002260                     __ptext13:
  6909                           	callstack 0
  6910   002260                     _check_event_trigger:
  6911                           	callstack 22
  6912   002260                     
  6913                           ;get_time.c: 198:     for (unsigned int i = 0; i < event_count; i++)
  6914   002260  0E00               	movlw	0
  6915   002262  6E47               	movwf	(check_event_trigger@i+1)^0,c
  6916   002264  0E00               	movlw	0
  6917   002266  6E46               	movwf	check_event_trigger@i^0,c
  6918   002268  EF8F  F011         	goto	l3925
  6919   00226C                     l3909:
  6920                           
  6921                           ;get_time.c: 199:     {;get_time.c: 200:         if (view_event[i][17]=='W')
  6922   00226C  0E12               	movlw	18
  6923   00226E  0246               	mulwf	check_event_trigger@i^0,c
  6924   002270  CFF3 F043          	movff	prodl,??_check_event_trigger
  6925   002274  CFF4 F044          	movff	prodh,??_check_event_trigger+1
  6926   002278  0247               	mulwf	(check_event_trigger@i+1)^0,c
  6927   00227A  50F3               	movf	prodl,w,c
  6928   00227C  2644               	addwf	(??_check_event_trigger+1)^0,f,c
  6929   00227E  0E11               	movlw	low (_view_event+17)
  6930   002280  2443               	addwf	??_check_event_trigger^0,w,c
  6931   002282  6ED9               	movwf	fsr2l,c
  6932   002284  0E01               	movlw	high (_view_event+17)
  6933   002286  2044               	addwfc	(??_check_event_trigger+1)^0,w,c
  6934   002288  6EDA               	movwf	fsr2h,c
  6935   00228A  0E57               	movlw	87
  6936   00228C  18DE               	xorwf	postinc2,w,c
  6937   00228E  A4D8               	btfss	status,2,c
  6938   002290  EF4C  F011         	goto	u3811
  6939   002294  EF4E  F011         	goto	u3810
  6940   002298                     u3811:
  6941   002298  EF52  F011         	goto	l3913
  6942   00229C                     u3810:
  6943   00229C                     
  6944                           ;get_time.c: 201:         {;get_time.c: 202:             int ch;;get_time.c: 205:       
      +                                check_weekly_event();
  6945   00229C  ECCE  F014         	call	_check_weekly_event	;wreg free
  6946                           
  6947                           ;get_time.c: 210:         }
  6948   0022A0  EF8D  F011         	goto	l3923
  6949   0022A4                     l3913:
  6950   0022A4  0E12               	movlw	18
  6951   0022A6  0246               	mulwf	check_event_trigger@i^0,c
  6952   0022A8  CFF3 F043          	movff	prodl,??_check_event_trigger
  6953   0022AC  CFF4 F044          	movff	prodh,??_check_event_trigger+1
  6954   0022B0  0247               	mulwf	(check_event_trigger@i+1)^0,c
  6955   0022B2  50F3               	movf	prodl,w,c
  6956   0022B4  2644               	addwf	(??_check_event_trigger+1)^0,f,c
  6957   0022B6  0E11               	movlw	low (_view_event+17)
  6958   0022B8  2443               	addwf	??_check_event_trigger^0,w,c
  6959   0022BA  6ED9               	movwf	fsr2l,c
  6960   0022BC  0E01               	movlw	high (_view_event+17)
  6961   0022BE  2044               	addwfc	(??_check_event_trigger+1)^0,w,c
  6962   0022C0  6EDA               	movwf	fsr2h,c
  6963   0022C2  0E44               	movlw	68
  6964   0022C4  18DE               	xorwf	postinc2,w,c
  6965   0022C6  A4D8               	btfss	status,2,c
  6966   0022C8  EF68  F011         	goto	u3821
  6967   0022CC  EF6A  F011         	goto	u3820
  6968   0022D0                     u3821:
  6969   0022D0  EF6E  F011         	goto	l3917
  6970   0022D4                     u3820:
  6971   0022D4                     
  6972                           ;get_time.c: 212:         {;get_time.c: 213:             int ch;;get_time.c: 215:       
      +                                check_daily_event();
  6973   0022D4  EC27  F016         	call	_check_daily_event	;wreg free
  6974                           
  6975                           ;get_time.c: 221:         }
  6976   0022D8  EF8D  F011         	goto	l3923
  6977   0022DC                     l3917:
  6978   0022DC  0E12               	movlw	18
  6979   0022DE  0246               	mulwf	check_event_trigger@i^0,c
  6980   0022E0  CFF3 F043          	movff	prodl,??_check_event_trigger
  6981   0022E4  CFF4 F044          	movff	prodh,??_check_event_trigger+1
  6982   0022E8  0247               	mulwf	(check_event_trigger@i+1)^0,c
  6983   0022EA  50F3               	movf	prodl,w,c
  6984   0022EC  2644               	addwf	(??_check_event_trigger+1)^0,f,c
  6985   0022EE  0E11               	movlw	low (_view_event+17)
  6986   0022F0  2443               	addwf	??_check_event_trigger^0,w,c
  6987   0022F2  6ED9               	movwf	fsr2l,c
  6988   0022F4  0E01               	movlw	high (_view_event+17)
  6989   0022F6  2044               	addwfc	(??_check_event_trigger+1)^0,w,c
  6990   0022F8  6EDA               	movwf	fsr2h,c
  6991   0022FA  0E4F               	movlw	79
  6992   0022FC  18DE               	xorwf	postinc2,w,c
  6993   0022FE  A4D8               	btfss	status,2,c
  6994   002300  EF84  F011         	goto	u3831
  6995   002304  EF86  F011         	goto	u3830
  6996   002308                     u3831:
  6997   002308  EF8D  F011         	goto	l3923
  6998   00230C                     u3830:
  6999   00230C                     
  7000                           ;get_time.c: 223:         {;get_time.c: 224:             clcd_write(0x01, 0);
  7001   00230C  0E00               	movlw	0
  7002   00230E  6E05               	movwf	clcd_write@control_bit^0,c
  7003   002310  0E01               	movlw	1
  7004   002312  EC10  F015         	call	_clcd_write
  7005   002316  ECB2  F015         	call	_check_onetime_event	;wreg free
  7006   00231A                     l3923:
  7007                           
  7008                           ;get_time.c: 236:     }
  7009   00231A  4A46               	infsnz	check_event_trigger@i^0,f,c
  7010   00231C  2A47               	incf	(check_event_trigger@i+1)^0,f,c
  7011   00231E                     l3925:
  7012   00231E  5048               	movf	_event_count^0,w,c
  7013   002320  5C46               	subwf	check_event_trigger@i^0,w,c
  7014   002322  5049               	movf	(_event_count+1)^0,w,c
  7015   002324  5847               	subwfb	(check_event_trigger@i+1)^0,w,c
  7016   002326  A0D8               	btfss	status,0,c
  7017   002328  EF98  F011         	goto	u3841
  7018   00232C  EF9A  F011         	goto	u3840
  7019   002330                     u3841:
  7020   002330  EF36  F011         	goto	l3909
  7021   002334                     u3840:
  7022   002334  0012               	return		;funcret
  7023   002336                     __end_of_check_event_trigger:
  7024                           	callstack 0
  7025                           
  7026 ;; *************** function _check_weekly_event *****************
  7027 ;; Defined at:
  7028 ;;		line 128 in file "get_time.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;		None
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  current_day_    2   64[COMRAM] unsigned int 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      unsigned char 
  7035 ;; Registers used:
  7036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7042 ;;      Params:         0       0       0       0       0       0       0
  7043 ;;      Locals:         2       0       0       0       0       0       0
  7044 ;;      Temps:          1       0       0       0       0       0       0
  7045 ;;      Totals:         3       0       0       0       0       0       0
  7046 ;;Total ram usage:        3 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; Hardware stack levels required when called: 7
  7049 ;; This function calls:
  7050 ;;		_check_event_time
  7051 ;;		_get_current_day
  7052 ;;		_get_date
  7053 ;;		_read_EEPROM
  7054 ;; This function is called by:
  7055 ;;		_check_event_trigger
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text14
  7060   00299C                     __ptext14:
  7061                           	callstack 0
  7062   00299C                     _check_weekly_event:
  7063                           	callstack 22
  7064   00299C                     
  7065                           ;get_time.c: 130:     get_date();
  7066   00299C  EC40  F013         	call	_get_date	;wreg free
  7067   0029A0                     
  7068                           ;get_time.c: 131:     unsigned int current_day_of_week = get_current_day();
  7069   0029A0  EC48  F015         	call	_get_current_day	;wreg free
  7070   0029A4  C011  F041         	movff	?_get_current_day,check_weekly_event@current_day_of_week
  7071   0029A8  C012  F042         	movff	?_get_current_day+1,check_weekly_event@current_day_of_week+1
  7072   0029AC                     
  7073                           ;get_time.c: 132:     event_day=read_EEPROM(0x0A)-'0';
  7074   0029AC  0E0A               	movlw	10
  7075   0029AE  EC8A  F015         	call	_read_EEPROM
  7076   0029B2  6E40               	movwf	??_check_weekly_event^0,c
  7077   0029B4  0ED0               	movlw	208
  7078   0029B6  2440               	addwf	??_check_weekly_event^0,w,c
  7079   0029B8  0100               	movlb	0	; () banked
  7080   0029BA  6F7B               	movwf	_event_day& (0+255),b
  7081   0029BC  6B7C               	clrf	(_event_day+1)& (0+255),b
  7082   0029BE  0EFF               	movlw	255
  7083   0029C0  237C               	addwfc	(_event_day+1)& (0+255),f,b
  7084   0029C2                     
  7085                           ; BSR set to: 0
  7086                           ;get_time.c: 133:     if (current_day_of_week == event_day)
  7087   0029C2  517B               	movf	_event_day& (0+255),w,b
  7088   0029C4  1841               	xorwf	check_weekly_event@current_day_of_week^0,w,c
  7089   0029C6  E107               	bnz	u3431
  7090   0029C8  517C               	movf	(_event_day+1)& (0+255),w,b
  7091   0029CA  1842               	xorwf	(check_weekly_event@current_day_of_week+1)^0,w,c
  7092   0029CC  A4D8               	btfss	status,2,c
  7093   0029CE  EFEB  F014         	goto	u3431
  7094   0029D2  EFED  F014         	goto	u3430
  7095   0029D6                     u3431:
  7096   0029D6  EFEF  F014         	goto	l683
  7097   0029DA                     u3430:
  7098   0029DA                     
  7099                           ; BSR set to: 0
  7100                           ;get_time.c: 134:     {;get_time.c: 136:         if(check_event_time())
  7101   0029DA  EC09  F010         	call	_check_event_time	;wreg free
  7102   0029DE                     l683:
  7103   0029DE  0012               	return		;funcret
  7104   0029E0                     __end_of_check_weekly_event:
  7105                           	callstack 0
  7106                           
  7107 ;; *************** function _get_date *****************
  7108 ;; Defined at:
  7109 ;;		line 680 in file "main.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;		None
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      void 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0, cstack
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7123 ;;      Params:         0       0       0       0       0       0       0
  7124 ;;      Locals:         0       0       0       0       0       0       0
  7125 ;;      Temps:          0       0       0       0       0       0       0
  7126 ;;      Totals:         0       0       0       0       0       0       0
  7127 ;;Total ram usage:        0 bytes
  7128 ;; Hardware stack levels used: 1
  7129 ;; Hardware stack levels required when called: 5
  7130 ;; This function calls:
  7131 ;;		_read_ds1307
  7132 ;; This function is called by:
  7133 ;;		_main
  7134 ;;		_check_weekly_event
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text15
  7139   002680                     __ptext15:
  7140                           	callstack 0
  7141   002680                     _get_date:
  7142                           	callstack 25
  7143   002680                     
  7144                           ;main.c: 682:  calender_reg[0] = read_ds1307(0x06);
  7145   002680  0E06               	movlw	6
  7146   002682  EC75  F015         	call	_read_ds1307
  7147   002686  0100               	movlb	0	; () banked
  7148   002688  6F70               	movwf	_calender_reg& (0+255),b
  7149                           
  7150                           ;main.c: 683:  calender_reg[1] = read_ds1307(0x05);
  7151   00268A  0E05               	movlw	5
  7152   00268C  EC75  F015         	call	_read_ds1307
  7153   002690  0100               	movlb	0	; () banked
  7154   002692  6F71               	movwf	(_calender_reg+1)& (0+255),b
  7155                           
  7156                           ;main.c: 684:  calender_reg[2] = read_ds1307(0x04);
  7157   002694  0E04               	movlw	4
  7158   002696  EC75  F015         	call	_read_ds1307
  7159   00269A  0100               	movlb	0	; () banked
  7160   00269C  6F72               	movwf	(_calender_reg+2)& (0+255),b
  7161                           
  7162                           ;main.c: 685:  calender_reg[3] = read_ds1307(0x03);
  7163   00269E  0E03               	movlw	3
  7164   0026A0  EC75  F015         	call	_read_ds1307
  7165   0026A4  0100               	movlb	0	; () banked
  7166   0026A6  6F73               	movwf	(_calender_reg+3)& (0+255),b
  7167   0026A8                     
  7168                           ; BSR set to: 0
  7169                           ;main.c: 688:  date[0] = '0' + ((calender_reg[2] >> 4) & 0x0F);
  7170   0026A8  3972               	swapf	(_calender_reg+2)& (0+255),w,b
  7171   0026AA  0B0F               	andlw	15
  7172   0026AC  0B0F               	andlw	15
  7173   0026AE  0F30               	addlw	48
  7174   0026B0  6FB1               	movwf	_date& (0+255),b
  7175   0026B2                     
  7176                           ; BSR set to: 0
  7177                           ;main.c: 689:  date[1] = '0' + (calender_reg[2] & 0x0F);
  7178   0026B2  5172               	movf	(_calender_reg+2)& (0+255),w,b
  7179   0026B4  0B0F               	andlw	15
  7180   0026B6  0F30               	addlw	48
  7181   0026B8  6FB2               	movwf	(_date+1)& (0+255),b
  7182   0026BA                     
  7183                           ; BSR set to: 0
  7184                           ;main.c: 690:  date[2] = '-';
  7185   0026BA  0E2D               	movlw	45
  7186   0026BC  6FB3               	movwf	(_date+2)& (0+255),b
  7187   0026BE                     
  7188                           ; BSR set to: 0
  7189                           ;main.c: 691:  date[3] = '0' + ((calender_reg[1] >> 4) & 0x0F);
  7190   0026BE  3971               	swapf	(_calender_reg+1)& (0+255),w,b
  7191   0026C0  0B0F               	andlw	15
  7192   0026C2  0B0F               	andlw	15
  7193   0026C4  0F30               	addlw	48
  7194   0026C6  6FB4               	movwf	(_date+3)& (0+255),b
  7195   0026C8                     
  7196                           ; BSR set to: 0
  7197                           ;main.c: 692:  date[4] = '0' + (calender_reg[1] & 0x0F);
  7198   0026C8  5171               	movf	(_calender_reg+1)& (0+255),w,b
  7199   0026CA  0B0F               	andlw	15
  7200   0026CC  0F30               	addlw	48
  7201   0026CE  6FB5               	movwf	(_date+4)& (0+255),b
  7202   0026D0                     
  7203                           ; BSR set to: 0
  7204                           ;main.c: 693:  date[5] = '-';
  7205   0026D0  0E2D               	movlw	45
  7206   0026D2  6FB6               	movwf	(_date+5)& (0+255),b
  7207   0026D4                     
  7208                           ; BSR set to: 0
  7209                           ;main.c: 694:     date[6] = '2';
  7210   0026D4  0E32               	movlw	50
  7211   0026D6  6FB7               	movwf	(_date+6)& (0+255),b
  7212   0026D8                     
  7213                           ; BSR set to: 0
  7214                           ;main.c: 695:  date[7] = '0';
  7215   0026D8  0E30               	movlw	48
  7216   0026DA  6FB8               	movwf	(_date+7)& (0+255),b
  7217   0026DC                     
  7218                           ; BSR set to: 0
  7219                           ;main.c: 696:  date[8] = '0' + ((calender_reg[0] >> 4) & 0x0F);
  7220   0026DC  3970               	swapf	_calender_reg& (0+255),w,b
  7221   0026DE  0B0F               	andlw	15
  7222   0026E0  0B0F               	andlw	15
  7223   0026E2  0F30               	addlw	48
  7224   0026E4  6FB9               	movwf	(_date+8)& (0+255),b
  7225   0026E6                     
  7226                           ; BSR set to: 0
  7227                           ;main.c: 697:  date[9] = '0' + (calender_reg[0] & 0x0F);
  7228   0026E6  5170               	movf	_calender_reg& (0+255),w,b
  7229   0026E8  0B0F               	andlw	15
  7230   0026EA  0F30               	addlw	48
  7231   0026EC  6FBA               	movwf	(_date+9)& (0+255),b
  7232   0026EE                     
  7233                           ; BSR set to: 0
  7234                           ;main.c: 698:     date[10]='\0';
  7235   0026EE  6BBB               	clrf	(_date+10)& (0+255),b
  7236   0026F0                     
  7237                           ; BSR set to: 0
  7238                           ;main.c: 702:     date[12]='\0';
  7239   0026F0  6BBD               	clrf	(_date+12)& (0+255),b
  7240   0026F2                     
  7241                           ; BSR set to: 0
  7242   0026F2  0012               	return		;funcret
  7243   0026F4                     __end_of_get_date:
  7244                           	callstack 0
  7245                           
  7246 ;; *************** function _get_current_day *****************
  7247 ;; Defined at:
  7248 ;;		line 34 in file "get_time.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  current_day     2   20[COMRAM] unsigned int 
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  2   16[COMRAM] unsigned int 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7262 ;;      Params:         2       0       0       0       0       0       0
  7263 ;;      Locals:         2       0       0       0       0       0       0
  7264 ;;      Temps:          2       0       0       0       0       0       0
  7265 ;;      Totals:         6       0       0       0       0       0       0
  7266 ;;Total ram usage:        6 bytes
  7267 ;; Hardware stack levels used: 1
  7268 ;; Hardware stack levels required when called: 2
  7269 ;; This function calls:
  7270 ;;		_current_date
  7271 ;; This function is called by:
  7272 ;;		_check_weekly_event
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	text16
  7277   002A90                     __ptext16:
  7278                           	callstack 0
  7279   002A90                     _get_current_day:
  7280                           	callstack 26
  7281   002A90                     
  7282                           ;get_time.c: 36:     current_date();
  7283   002A90  EC9B  F011         	call	_current_date	;wreg free
  7284   002A94                     
  7285                           ;get_time.c: 37:     unsigned int current_day = (date[0] - '0') * 10 + (date[1] - '0');
  7286   002A94  0100               	movlb	0	; () banked
  7287   002A96  51B1               	movf	_date& (0+255),w,b
  7288   002A98  0D0A               	mullw	10
  7289   002A9A  CFF3 F013          	movff	prodl,??_get_current_day
  7290   002A9E  CFF4 F014          	movff	prodh,??_get_current_day+1
  7291   002AA2  51B2               	movf	(_date+1)& (0+255),w,b
  7292   002AA4  2613               	addwf	??_get_current_day^0,f,c
  7293   002AA6  0E00               	movlw	0
  7294   002AA8  2214               	addwfc	(??_get_current_day+1)^0,f,c
  7295   002AAA  0EF0               	movlw	240
  7296   002AAC  2413               	addwf	??_get_current_day^0,w,c
  7297   002AAE  6E15               	movwf	get_current_day@current_day^0,c
  7298   002AB0  0EFD               	movlw	253
  7299   002AB2  2014               	addwfc	(??_get_current_day+1)^0,w,c
  7300   002AB4  6E16               	movwf	(get_current_day@current_day+1)^0,c
  7301   002AB6                     
  7302                           ; BSR set to: 0
  7303                           ;get_time.c: 38:     return current_day;
  7304   002AB6  C015  F011         	movff	get_current_day@current_day,?_get_current_day
  7305   002ABA  C016  F012         	movff	get_current_day@current_day+1,?_get_current_day+1
  7306   002ABE                     
  7307                           ; BSR set to: 0
  7308   002ABE  0012               	return		;funcret
  7309   002AC0                     __end_of_get_current_day:
  7310                           	callstack 0
  7311                           
  7312 ;; *************** function _current_date *****************
  7313 ;; Defined at:
  7314 ;;		line 28 in file "get_time.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;		None
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;		None
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      void 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, status,0, prodl, prodh
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7328 ;;      Params:         0       0       0       0       0       0       0
  7329 ;;      Locals:         0       0       0       0       0       0       0
  7330 ;;      Temps:         12       0       0       0       0       0       0
  7331 ;;      Totals:        12       0       0       0       0       0       0
  7332 ;;Total ram usage:       12 bytes
  7333 ;; Hardware stack levels used: 1
  7334 ;; Hardware stack levels required when called: 1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_get_current_day
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text17
  7343   002336                     __ptext17:
  7344                           	callstack 0
  7345   002336                     _current_date:
  7346                           	callstack 26
  7347   002336                     
  7348                           ;get_time.c: 30:     day = (date[0] - '0') * 10 + (date[1] - '0');
  7349   002336  0100               	movlb	0	; () banked
  7350   002338  51B1               	movf	_date& (0+255),w,b
  7351   00233A  0D0A               	mullw	10
  7352   00233C  CFF3 F005          	movff	prodl,??_current_date
  7353   002340  CFF4 F006          	movff	prodh,??_current_date+1
  7354   002344  51B2               	movf	(_date+1)& (0+255),w,b
  7355   002346  2605               	addwf	??_current_date^0,f,c
  7356   002348  0E00               	movlw	0
  7357   00234A  2206               	addwfc	(??_current_date+1)^0,f,c
  7358   00234C  0EF0               	movlw	240
  7359   00234E  2405               	addwf	??_current_date^0,w,c
  7360   002350  6E4A               	movwf	_day^0,c
  7361   002352  0EFD               	movlw	253
  7362   002354  2006               	addwfc	(??_current_date+1)^0,w,c
  7363   002356  6E4B               	movwf	(_day+1)^0,c
  7364                           
  7365                           ;get_time.c: 31:     month = (date[3] - '0') * 10 + (date[4] - '0');
  7366   002358  51B4               	movf	(_date+3)& (0+255),w,b
  7367   00235A  0D0A               	mullw	10
  7368   00235C  CFF3 F005          	movff	prodl,??_current_date
  7369   002360  CFF4 F006          	movff	prodh,??_current_date+1
  7370   002364  51B5               	movf	(_date+4)& (0+255),w,b
  7371   002366  2605               	addwf	??_current_date^0,f,c
  7372   002368  0E00               	movlw	0
  7373   00236A  2206               	addwfc	(??_current_date+1)^0,f,c
  7374   00236C  0EF0               	movlw	240
  7375   00236E  2405               	addwf	??_current_date^0,w,c
  7376   002370  6E4C               	movwf	_month^0,c
  7377   002372  0EFD               	movlw	253
  7378   002374  2006               	addwfc	(??_current_date+1)^0,w,c
  7379   002376  6E4D               	movwf	(_month+1)^0,c
  7380                           
  7381                           ;get_time.c: 32:     year = (date[6] - '0') * 1000 + (date[7] - '0') * 100 + (date[8] - 
      +                          '0') * 10 + (date[9] - '0');
  7382   002378  51B9               	movf	(_date+8)& (0+255),w,b
  7383   00237A  0D0A               	mullw	10
  7384   00237C  CFF3 F005          	movff	prodl,??_current_date
  7385   002380  CFF4 F006          	movff	prodh,??_current_date+1
  7386   002384  51B8               	movf	(_date+7)& (0+255),w,b
  7387   002386  0D64               	mullw	100
  7388   002388  CFF3 F007          	movff	prodl,??_current_date+2
  7389   00238C  CFF4 F008          	movff	prodh,??_current_date+3
  7390   002390  51B7               	movf	(_date+6)& (0+255),w,b
  7391   002392  6E09               	movwf	(??_current_date+4)^0,c
  7392   002394  6A0A               	clrf	(??_current_date+5)^0,c
  7393   002396  0EE8               	movlw	232
  7394   002398  0209               	mulwf	(??_current_date+4)^0,c
  7395   00239A  CFF3 F00B          	movff	prodl,??_current_date+6
  7396   00239E  CFF4 F00C          	movff	prodh,??_current_date+7
  7397   0023A2  020A               	mulwf	(??_current_date+5)^0,c
  7398   0023A4  50F3               	movf	prodl,w,c
  7399   0023A6  260C               	addwf	(??_current_date+7)^0,f,c
  7400   0023A8  0E03               	movlw	3
  7401   0023AA  0209               	mulwf	(??_current_date+4)^0,c
  7402   0023AC  50F3               	movf	prodl,w,c
  7403   0023AE  260C               	addwf	(??_current_date+7)^0,f,c
  7404   0023B0  5007               	movf	(??_current_date+2)^0,w,c
  7405   0023B2  240B               	addwf	(??_current_date+6)^0,w,c
  7406   0023B4  6E0D               	movwf	(??_current_date+8)^0,c
  7407   0023B6  5008               	movf	(??_current_date+3)^0,w,c
  7408   0023B8  200C               	addwfc	(??_current_date+7)^0,w,c
  7409   0023BA  6E0E               	movwf	(??_current_date+9)^0,c
  7410   0023BC  5005               	movf	??_current_date^0,w,c
  7411   0023BE  240D               	addwf	(??_current_date+8)^0,w,c
  7412   0023C0  6E0F               	movwf	(??_current_date+10)^0,c
  7413   0023C2  5006               	movf	(??_current_date+1)^0,w,c
  7414   0023C4  200E               	addwfc	(??_current_date+9)^0,w,c
  7415   0023C6  6E10               	movwf	(??_current_date+11)^0,c
  7416   0023C8  51BA               	movf	(_date+9)& (0+255),w,b
  7417   0023CA  260F               	addwf	(??_current_date+10)^0,f,c
  7418   0023CC  0E00               	movlw	0
  7419   0023CE  2210               	addwfc	(??_current_date+11)^0,f,c
  7420   0023D0  0EB0               	movlw	176
  7421   0023D2  240F               	addwf	(??_current_date+10)^0,w,c
  7422   0023D4  6E4E               	movwf	_year^0,c
  7423   0023D6  0E2F               	movlw	47
  7424   0023D8  2010               	addwfc	(??_current_date+11)^0,w,c
  7425   0023DA  6E4F               	movwf	(_year+1)^0,c
  7426   0023DC                     
  7427                           ; BSR set to: 0
  7428   0023DC  0012               	return		;funcret
  7429   0023DE                     __end_of_current_date:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _check_onetime_event *****************
  7433 ;; Defined at:
  7434 ;;		line 154 in file "get_time.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;		None
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      unsigned char 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7448 ;;      Params:         0       0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0
  7451 ;;      Totals:         0       0       0       0       0       0       0
  7452 ;;Total ram usage:        0 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; Hardware stack levels required when called: 7
  7455 ;; This function calls:
  7456 ;;		_check_event_time
  7457 ;; This function is called by:
  7458 ;;		_check_event_trigger
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text18
  7463   002B64                     __ptext18:
  7464                           	callstack 0
  7465   002B64                     _check_onetime_event:
  7466                           	callstack 22
  7467   002B64                     
  7468                           ;get_time.c: 157:     if(check_event_time())
  7469   002B64  EC09  F010         	call	_check_event_time	;wreg free
  7470   002B68  502C               	movf	?_check_event_time^0,w,c
  7471   002B6A  102D               	iorwf	(?_check_event_time+1)^0,w,c
  7472   002B6C  B4D8               	btfsc	status,2,c
  7473   002B6E  EFBB  F015         	goto	u3441
  7474   002B72  EFBD  F015         	goto	u3440
  7475   002B76                     u3441:
  7476   002B76  EFC0  F015         	goto	l3737
  7477   002B7A                     u3440:
  7478   002B7A                     
  7479                           ;get_time.c: 158:     {;get_time.c: 159:         return 1;
  7480   002B7A  0E01               	movlw	1
  7481   002B7C  EFC1  F015         	goto	l691
  7482   002B80                     l3737:
  7483                           
  7484                           ;get_time.c: 161:     return 0;
  7485   002B80  0E00               	movlw	0
  7486   002B82                     l691:
  7487   002B82  0012               	return		;funcret
  7488   002B84                     __end_of_check_onetime_event:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function _check_daily_event *****************
  7492 ;; Defined at:
  7493 ;;		line 144 in file "get_time.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;		None
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      unsigned char 
  7500 ;; Registers used:
  7501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7507 ;;      Params:         0       0       0       0       0       0       0
  7508 ;;      Locals:         0       0       0       0       0       0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0
  7510 ;;      Totals:         0       0       0       0       0       0       0
  7511 ;;Total ram usage:        0 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; Hardware stack levels required when called: 7
  7514 ;; This function calls:
  7515 ;;		_check_event_time
  7516 ;; This function is called by:
  7517 ;;		_check_event_trigger
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text19
  7522   002C4E                     __ptext19:
  7523                           	callstack 0
  7524   002C4E                     _check_daily_event:
  7525                           	callstack 22
  7526   002C4E                     
  7527                           ;get_time.c: 147:     if (check_event_time())
  7528   002C4E  EC09  F010         	call	_check_event_time	;wreg free
  7529   002C52  0012               	return		;funcret
  7530   002C54                     __end_of_check_daily_event:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _check_event_time *****************
  7534 ;; Defined at:
  7535 ;;		line 80 in file "get_time.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  j               2   61[COMRAM] int 
  7540 ;;  i               2   59[COMRAM] unsigned int 
  7541 ;;  ptr            10   49[COMRAM] unsigned char [10]
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  2   43[COMRAM] int 
  7544 ;; Registers used:
  7545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7551 ;;      Params:         2       0       0       0       0       0       0
  7552 ;;      Locals:        14       0       0       0       0       0       0
  7553 ;;      Temps:          4       0       0       0       0       0       0
  7554 ;;      Totals:        20       0       0       0       0       0       0
  7555 ;;Total ram usage:       20 bytes
  7556 ;; Hardware stack levels used: 1
  7557 ;; Hardware stack levels required when called: 6
  7558 ;; This function calls:
  7559 ;;		_calculate_duration
  7560 ;;		_clcd_write
  7561 ;;		_get_time
  7562 ;;		_strcmp
  7563 ;; This function is called by:
  7564 ;;		_check_weekly_event
  7565 ;;		_check_daily_event
  7566 ;;		_check_onetime_event
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text20
  7571   002012                     __ptext20:
  7572                           	callstack 0
  7573   002012                     _check_event_time:
  7574                           	callstack 22
  7575   002012                     
  7576                           ;get_time.c: 82:     get_time();
  7577   002012  EC86  F012         	call	_get_time	;wreg free
  7578   002016                     
  7579                           ;get_time.c: 83:     unsigned char ptr[10];;get_time.c: 84:     for(unsigned int i=0;i<e
      +                          vent_count;i++)
  7580   002016  0E00               	movlw	0
  7581   002018  6E3D               	movwf	(check_event_time@i+1)^0,c
  7582   00201A  0E00               	movlw	0
  7583   00201C  6E3C               	movwf	check_event_time@i^0,c
  7584   00201E  EF9E  F010         	goto	l3169
  7585   002022                     l3129:
  7586                           
  7587                           ;get_time.c: 85:     {;get_time.c: 86:         if(AM_PM2==view_event[i][6])
  7588   002022  0E12               	movlw	18
  7589   002024  023C               	mulwf	check_event_time@i^0,c
  7590   002026  CFF3 F02E          	movff	prodl,??_check_event_time
  7591   00202A  CFF4 F02F          	movff	prodh,??_check_event_time+1
  7592   00202E  023D               	mulwf	(check_event_time@i+1)^0,c
  7593   002030  50F3               	movf	prodl,w,c
  7594   002032  262F               	addwf	(??_check_event_time+1)^0,f,c
  7595   002034  0E06               	movlw	low (_view_event+6)
  7596   002036  242E               	addwf	??_check_event_time^0,w,c
  7597   002038  6ED9               	movwf	fsr2l,c
  7598   00203A  0E01               	movlw	high (_view_event+6)
  7599   00203C  202F               	addwfc	(??_check_event_time+1)^0,w,c
  7600   00203E  6EDA               	movwf	fsr2h,c
  7601   002040  0100               	movlb	0	; () banked
  7602   002042  519C               	movf	_AM_PM2& (0+255),w,b
  7603   002044  18DE               	xorwf	postinc2,w,c
  7604   002046  A4D8               	btfss	status,2,c
  7605   002048  EF28  F010         	goto	u2461
  7606   00204C  EF2A  F010         	goto	u2460
  7607   002050                     u2461:
  7608   002050  EF9C  F010         	goto	l3167
  7609   002054                     u2460:
  7610   002054                     
  7611                           ; BSR set to: 0
  7612                           ;get_time.c: 87:         {;get_time.c: 88:              for(int j=0;j<8;j++)
  7613   002054  0E00               	movlw	0
  7614   002056  6E3F               	movwf	(check_event_time@j+1)^0,c
  7615   002058  0E00               	movlw	0
  7616   00205A  6E3E               	movwf	check_event_time@j^0,c
  7617   00205C                     l3137:
  7618                           
  7619                           ;get_time.c: 89:              {;get_time.c: 90:               ptr[j]=view_event[i][j];
  7620   00205C  0E12               	movlw	18
  7621   00205E  023C               	mulwf	check_event_time@i^0,c
  7622   002060  CFF3 F02E          	movff	prodl,??_check_event_time
  7623   002064  CFF4 F02F          	movff	prodh,??_check_event_time+1
  7624   002068  023D               	mulwf	(check_event_time@i+1)^0,c
  7625   00206A  50F3               	movf	prodl,w,c
  7626   00206C  262F               	addwf	(??_check_event_time+1)^0,f,c
  7627   00206E  0E00               	movlw	low _view_event
  7628   002070  242E               	addwf	??_check_event_time^0,w,c
  7629   002072  6E30               	movwf	(??_check_event_time+2)^0,c
  7630   002074  0E01               	movlw	high _view_event
  7631   002076  202F               	addwfc	(??_check_event_time+1)^0,w,c
  7632   002078  6E31               	movwf	(??_check_event_time+3)^0,c
  7633   00207A  503E               	movf	check_event_time@j^0,w,c
  7634   00207C  2430               	addwf	(??_check_event_time+2)^0,w,c
  7635   00207E  6ED9               	movwf	fsr2l,c
  7636   002080  503F               	movf	(check_event_time@j+1)^0,w,c
  7637   002082  2031               	addwfc	(??_check_event_time+3)^0,w,c
  7638   002084  6EDA               	movwf	fsr2h,c
  7639   002086  503E               	movf	check_event_time@j^0,w,c
  7640   002088  0F32               	addlw	low check_event_time@ptr
  7641   00208A  6EE1               	movwf	fsr1l,c
  7642   00208C  6AE2               	clrf	fsr1h,c
  7643   00208E  CFDF FFE7          	movff	indf2,indf1
  7644   002092                     
  7645                           ;get_time.c: 91:              }
  7646   002092  4A3E               	infsnz	check_event_time@j^0,f,c
  7647   002094  2A3F               	incf	(check_event_time@j+1)^0,f,c
  7648   002096  BE3F               	btfsc	(check_event_time@j+1)^0,7,c
  7649   002098  EF57  F010         	goto	u2471
  7650   00209C  503F               	movf	(check_event_time@j+1)^0,w,c
  7651   00209E  E109               	bnz	u2470
  7652   0020A0  0E08               	movlw	8
  7653   0020A2  5C3E               	subwf	check_event_time@j^0,w,c
  7654   0020A4  A0D8               	btfss	status,0,c
  7655   0020A6  EF57  F010         	goto	u2471
  7656   0020AA  EF59  F010         	goto	u2470
  7657   0020AE                     u2471:
  7658   0020AE  EF2E  F010         	goto	l3137
  7659   0020B2                     u2470:
  7660   0020B2                     
  7661                           ;get_time.c: 92:              ptr[5]=':';
  7662   0020B2  0E3A               	movlw	58
  7663   0020B4  6E37               	movwf	(check_event_time@ptr+5)^0,c
  7664   0020B6                     
  7665                           ;get_time.c: 93:              ptr[8]='\0';
  7666   0020B6  6A3A               	clrf	(check_event_time@ptr+8)^0,c
  7667   0020B8                     
  7668                           ;get_time.c: 94:              if (clock_reg[0] & 0x40)
  7669   0020B8  0100               	movlb	0	; () banked
  7670   0020BA  AD74               	btfss	_clock_reg& (0+255),6,b
  7671   0020BC  EF62  F010         	goto	u2481
  7672   0020C0  EF64  F010         	goto	u2480
  7673   0020C4                     u2481:
  7674   0020C4  EF75  F010         	goto	l3155
  7675   0020C8                     u2480:
  7676   0020C8                     
  7677                           ; BSR set to: 0
  7678                           ;get_time.c: 95:              {;get_time.c: 96:              if (clock_reg[0] & 0x20)
  7679   0020C8  AB74               	btfss	_clock_reg& (0+255),5,b
  7680   0020CA  EF69  F010         	goto	u2491
  7681   0020CE  EF6B  F010         	goto	u2490
  7682   0020D2                     u2491:
  7683   0020D2  EF71  F010         	goto	l3153
  7684   0020D6                     u2490:
  7685   0020D6                     
  7686                           ; BSR set to: 0
  7687                           ;get_time.c: 97:              {;get_time.c: 98:                 time[6]='P';
  7688   0020D6  0E50               	movlw	80
  7689   0020D8  6FD1               	movwf	(_time+6)& (0+255),b
  7690                           
  7691                           ;get_time.c: 99:                 time[7]='M';
  7692   0020DA  0E4D               	movlw	77
  7693   0020DC  6FD2               	movwf	(_time+7)& (0+255),b
  7694                           
  7695                           ;get_time.c: 100:              }
  7696   0020DE  EF75  F010         	goto	l3155
  7697   0020E2                     l3153:
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;get_time.c: 102:              {;get_time.c: 103:                 time[6]='A';
  7701   0020E2  0E41               	movlw	65
  7702   0020E4  6FD1               	movwf	(_time+6)& (0+255),b
  7703                           
  7704                           ;get_time.c: 104:                 time[7]='M';
  7705   0020E6  0E4D               	movlw	77
  7706   0020E8  6FD2               	movwf	(_time+7)& (0+255),b
  7707   0020EA                     l3155:
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;get_time.c: 107:          time[8]='\0';
  7711   0020EA  6BD3               	clrf	(_time+8)& (0+255),b
  7712   0020EC                     
  7713                           ; BSR set to: 0
  7714                           ;get_time.c: 108:          clcd_write(0x01, 0);
  7715   0020EC  0E00               	movlw	0
  7716   0020EE  6E05               	movwf	clcd_write@control_bit^0,c
  7717   0020F0  0E01               	movlw	1
  7718   0020F2  EC10  F015         	call	_clcd_write
  7719   0020F6                     
  7720                           ;get_time.c: 115:         if (strcmp(time,ptr) == 0)
  7721   0020F6  0ECB               	movlw	low _time
  7722   0020F8  6E05               	movwf	strcmp@l^0,c
  7723   0020FA  6A06               	clrf	(strcmp@l+1)^0,c
  7724   0020FC  0E32               	movlw	low check_event_time@ptr
  7725   0020FE  6E07               	movwf	strcmp@r^0,c
  7726   002100  6A08               	clrf	(strcmp@r+1)^0,c
  7727   002102  ECB4  F013         	call	_strcmp	;wreg free
  7728   002106  5005               	movf	?_strcmp^0,w,c
  7729   002108  1006               	iorwf	(?_strcmp+1)^0,w,c
  7730   00210A  A4D8               	btfss	status,2,c
  7731   00210C  EF8A  F010         	goto	u2501
  7732   002110  EF8C  F010         	goto	u2500
  7733   002114                     u2501:
  7734   002114  EF9C  F010         	goto	l3167
  7735   002118                     u2500:
  7736   002118                     
  7737                           ;get_time.c: 116:           {;get_time.c: 117:             clcd_write(0x01, 0);
  7738   002118  0E00               	movlw	0
  7739   00211A  6E05               	movwf	clcd_write@control_bit^0,c
  7740   00211C  0E01               	movlw	1
  7741   00211E  EC10  F015         	call	_clcd_write
  7742   002122                     
  7743                           ;get_time.c: 120:             calculate_duration(i);
  7744   002122  C03C  F011         	movff	check_event_time@i,calculate_duration@k
  7745   002126  C03D  F012         	movff	check_event_time@i+1,calculate_duration@k+1
  7746   00212A  EC06  F00A         	call	_calculate_duration	;wreg free
  7747   00212E                     
  7748                           ;get_time.c: 121:             match=1;
  7749   00212E  0E00               	movlw	0
  7750   002130  0100               	movlb	0	; () banked
  7751   002132  6F7E               	movwf	(_match+1)& (0+255),b
  7752   002134  0E01               	movlw	1
  7753   002136  6F7D               	movwf	_match& (0+255),b
  7754   002138                     l3167:
  7755                           
  7756                           ;get_time.c: 125:     }
  7757   002138  4A3C               	infsnz	check_event_time@i^0,f,c
  7758   00213A  2A3D               	incf	(check_event_time@i+1)^0,f,c
  7759   00213C                     l3169:
  7760   00213C  5048               	movf	_event_count^0,w,c
  7761   00213E  5C3C               	subwf	check_event_time@i^0,w,c
  7762   002140  5049               	movf	(_event_count+1)^0,w,c
  7763   002142  583D               	subwfb	(check_event_time@i+1)^0,w,c
  7764   002144  A0D8               	btfss	status,0,c
  7765   002146  EFA7  F010         	goto	u2511
  7766   00214A  EFA9  F010         	goto	u2510
  7767   00214E                     u2511:
  7768   00214E  EF11  F010         	goto	l3129
  7769   002152                     u2510:
  7770   002152                     
  7771                           ;get_time.c: 126:     return -1;
  7772   002152  682C               	setf	?_check_event_time^0,c
  7773   002154  682D               	setf	(?_check_event_time+1)^0,c
  7774   002156  0012               	return		;funcret
  7775   002158                     __end_of_check_event_time:
  7776                           	callstack 0
  7777                           
  7778 ;; *************** function _strcmp *****************
  7779 ;; Defined at:
  7780 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  l               2    4[COMRAM] PTR const unsigned char 
  7783 ;;		 -> temp_PM(180), temp_AM(180), time(9), 
  7784 ;;  r               2    6[COMRAM] PTR const unsigned char 
  7785 ;;		 -> check_event_time@ptr(10), temp_PM(180), temp_AM(180), 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  2    4[COMRAM] int 
  7790 ;; Registers used:
  7791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7797 ;;      Params:         4       0       0       0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0
  7799 ;;      Temps:          2       0       0       0       0       0       0
  7800 ;;      Totals:         6       0       0       0       0       0       0
  7801 ;;Total ram usage:        6 bytes
  7802 ;; Hardware stack levels used: 1
  7803 ;; Hardware stack levels required when called: 1
  7804 ;; This function calls:
  7805 ;;		Nothing
  7806 ;; This function is called by:
  7807 ;;		_compare
  7808 ;;		_check_event_time
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           	psect	text21
  7813   002768                     __ptext21:
  7814                           	callstack 0
  7815   002768                     _strcmp:
  7816                           	callstack 28
  7817   002768  EFBA  F013         	goto	l2949
  7818   00276C                     l2947:
  7819   00276C  4A05               	infsnz	strcmp@l^0,f,c
  7820   00276E  2A06               	incf	(strcmp@l+1)^0,f,c
  7821   002770  4A07               	infsnz	strcmp@r^0,f,c
  7822   002772  2A08               	incf	(strcmp@r+1)^0,f,c
  7823   002774                     l2949:
  7824   002774  C007  FFD9         	movff	strcmp@r,fsr2l
  7825   002778  C008  FFDA         	movff	strcmp@r+1,fsr2h
  7826   00277C  C005  FFE1         	movff	strcmp@l,fsr1l
  7827   002780  C006  FFE2         	movff	strcmp@l+1,fsr1h
  7828   002784  50DE               	movf	postinc2,w,c
  7829   002786  18E6               	xorwf	postinc1,w,c
  7830   002788  A4D8               	btfss	status,2,c
  7831   00278A  EFC9  F013         	goto	u2271
  7832   00278E  EFCB  F013         	goto	u2270
  7833   002792                     u2271:
  7834   002792  EFD7  F013         	goto	l2953
  7835   002796                     u2270:
  7836   002796  C005  FFD9         	movff	strcmp@l,fsr2l
  7837   00279A  C006  FFDA         	movff	strcmp@l+1,fsr2h
  7838   00279E  50DF               	movf	indf2,w,c
  7839   0027A0  A4D8               	btfss	status,2,c
  7840   0027A2  EFD5  F013         	goto	u2281
  7841   0027A6  EFD7  F013         	goto	u2280
  7842   0027AA                     u2281:
  7843   0027AA  EFB6  F013         	goto	l2947
  7844   0027AE                     u2280:
  7845   0027AE                     l2953:
  7846   0027AE  C005  FFD9         	movff	strcmp@l,fsr2l
  7847   0027B2  C006  FFDA         	movff	strcmp@l+1,fsr2h
  7848   0027B6  50DF               	movf	indf2,w,c
  7849   0027B8  6E09               	movwf	??_strcmp^0,c
  7850   0027BA  C007  FFD9         	movff	strcmp@r,fsr2l
  7851   0027BE  C008  FFDA         	movff	strcmp@r+1,fsr2h
  7852   0027C2  50DF               	movf	indf2,w,c
  7853   0027C4  6E0A               	movwf	(??_strcmp+1)^0,c
  7854   0027C6  500A               	movf	(??_strcmp+1)^0,w,c
  7855   0027C8  5C09               	subwf	??_strcmp^0,w,c
  7856   0027CA  6E05               	movwf	?_strcmp^0,c
  7857   0027CC  6A06               	clrf	(?_strcmp+1)^0,c
  7858   0027CE  A0D8               	btfss	status,0,c
  7859   0027D0  0606               	decf	(?_strcmp+1)^0,f,c
  7860   0027D2  0012               	return		;funcret
  7861   0027D4                     __end_of_strcmp:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function _get_time *****************
  7865 ;; Defined at:
  7866 ;;		line 655 in file "main.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;		None
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;		None
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      void 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7880 ;;      Params:         0       0       0       0       0       0       0
  7881 ;;      Locals:         0       0       0       0       0       0       0
  7882 ;;      Temps:          0       0       0       0       0       0       0
  7883 ;;      Totals:         0       0       0       0       0       0       0
  7884 ;;Total ram usage:        0 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; Hardware stack levels required when called: 5
  7887 ;; This function calls:
  7888 ;;		_read_ds1307
  7889 ;; This function is called by:
  7890 ;;		_main
  7891 ;;		_check_event_time
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text22
  7896   00250C                     __ptext22:
  7897                           	callstack 0
  7898   00250C                     _get_time:
  7899                           	callstack 25
  7900   00250C                     
  7901                           ;main.c: 657:  clock_reg[0] = read_ds1307(0x02);
  7902   00250C  0E02               	movlw	2
  7903   00250E  EC75  F015         	call	_read_ds1307
  7904   002512  0100               	movlb	0	; () banked
  7905   002514  6F74               	movwf	_clock_reg& (0+255),b
  7906                           
  7907                           ;main.c: 658:  clock_reg[1] = read_ds1307(0x01);
  7908   002516  0E01               	movlw	1
  7909   002518  EC75  F015         	call	_read_ds1307
  7910   00251C  0100               	movlb	0	; () banked
  7911   00251E  6F75               	movwf	(_clock_reg+1)& (0+255),b
  7912                           
  7913                           ;main.c: 659:  clock_reg[2] = read_ds1307(0x00);
  7914   002520  0E00               	movlw	0
  7915   002522  EC75  F015         	call	_read_ds1307
  7916   002526  0100               	movlb	0	; () banked
  7917   002528  6F76               	movwf	(_clock_reg+2)& (0+255),b
  7918   00252A                     
  7919                           ; BSR set to: 0
  7920                           ;main.c: 661:  if (clock_reg[0] & 0x40)
  7921   00252A  AD74               	btfss	_clock_reg& (0+255),6,b
  7922   00252C  EF9A  F012         	goto	u2261
  7923   002530  EF9C  F012         	goto	u2260
  7924   002534                     u2261:
  7925   002534  EFA7  F012         	goto	l2933
  7926   002538                     u2260:
  7927   002538                     
  7928                           ; BSR set to: 0
  7929                           ;main.c: 662:  {;main.c: 663:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  7930   002538  3974               	swapf	_clock_reg& (0+255),w,b
  7931   00253A  0B0F               	andlw	15
  7932   00253C  0B01               	andlw	1
  7933   00253E  0F30               	addlw	48
  7934   002540  6FCB               	movwf	_time& (0+255),b
  7935                           
  7936                           ;main.c: 664:   time[1] = '0' + (clock_reg[0] & 0x0F);
  7937   002542  5174               	movf	_clock_reg& (0+255),w,b
  7938   002544  0B0F               	andlw	15
  7939   002546  0F30               	addlw	48
  7940   002548  6FCC               	movwf	(_time+1)& (0+255),b
  7941                           
  7942                           ;main.c: 665:  }
  7943   00254A  EFB0  F012         	goto	l2935
  7944   00254E                     l2933:
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;main.c: 667:  {;main.c: 668:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  7948   00254E  3974               	swapf	_clock_reg& (0+255),w,b
  7949   002550  0B0F               	andlw	15
  7950   002552  0B03               	andlw	3
  7951   002554  0F30               	addlw	48
  7952   002556  6FCB               	movwf	_time& (0+255),b
  7953                           
  7954                           ;main.c: 669:   time[1] = '0' + (clock_reg[0] & 0x0F);
  7955   002558  5174               	movf	_clock_reg& (0+255),w,b
  7956   00255A  0B0F               	andlw	15
  7957   00255C  0F30               	addlw	48
  7958   00255E  6FCC               	movwf	(_time+1)& (0+255),b
  7959   002560                     l2935:
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;main.c: 671:  time[2] = ':';
  7963   002560  0E3A               	movlw	58
  7964   002562  6FCD               	movwf	(_time+2)& (0+255),b
  7965   002564                     
  7966                           ; BSR set to: 0
  7967                           ;main.c: 672:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  7968   002564  3975               	swapf	(_clock_reg+1)& (0+255),w,b
  7969   002566  0B0F               	andlw	15
  7970   002568  0B0F               	andlw	15
  7971   00256A  0F30               	addlw	48
  7972   00256C  6FCE               	movwf	(_time+3)& (0+255),b
  7973   00256E                     
  7974                           ; BSR set to: 0
  7975                           ;main.c: 673:  time[4] = '0' + (clock_reg[1] & 0x0F);
  7976   00256E  5175               	movf	(_clock_reg+1)& (0+255),w,b
  7977   002570  0B0F               	andlw	15
  7978   002572  0F30               	addlw	48
  7979   002574  6FCF               	movwf	(_time+4)& (0+255),b
  7980   002576                     
  7981                           ; BSR set to: 0
  7982                           ;main.c: 674:  time[5] = ':';
  7983   002576  0E3A               	movlw	58
  7984   002578  6FD0               	movwf	(_time+5)& (0+255),b
  7985                           
  7986                           ;main.c: 675:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  7987   00257A  3976               	swapf	(_clock_reg+2)& (0+255),w,b
  7988   00257C  0B0F               	andlw	15
  7989   00257E  0B0F               	andlw	15
  7990   002580  0F30               	addlw	48
  7991   002582  6FD1               	movwf	(_time+6)& (0+255),b
  7992                           
  7993                           ;main.c: 676:  time[7] = '0' + (clock_reg[2] & 0x0F);
  7994   002584  5176               	movf	(_clock_reg+2)& (0+255),w,b
  7995   002586  0B0F               	andlw	15
  7996   002588  0F30               	addlw	48
  7997   00258A  6FD2               	movwf	(_time+7)& (0+255),b
  7998   00258C                     
  7999                           ; BSR set to: 0
  8000                           ;main.c: 677:  time[8] = '\0';
  8001   00258C  6BD3               	clrf	(_time+8)& (0+255),b
  8002   00258E                     
  8003                           ; BSR set to: 0
  8004   00258E  0012               	return		;funcret
  8005   002590                     __end_of_get_time:
  8006                           	callstack 0
  8007                           
  8008 ;; *************** function _read_ds1307 *****************
  8009 ;; Defined at:
  8010 ;;		line 55 in file "ds1307.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;  address         1    wreg     unsigned char 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  address         1    5[COMRAM] unsigned char 
  8015 ;;  data            1    6[COMRAM] unsigned char 
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      unsigned char 
  8018 ;; Registers used:
  8019 ;;		wreg, status,2, cstack
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8025 ;;      Params:         0       0       0       0       0       0       0
  8026 ;;      Locals:         2       0       0       0       0       0       0
  8027 ;;      Temps:          0       0       0       0       0       0       0
  8028 ;;      Totals:         2       0       0       0       0       0       0
  8029 ;;Total ram usage:        2 bytes
  8030 ;; Hardware stack levels used: 1
  8031 ;; Hardware stack levels required when called: 4
  8032 ;; This function calls:
  8033 ;;		_i2c_read
  8034 ;;		_i2c_rep_start
  8035 ;;		_i2c_start
  8036 ;;		_i2c_stop
  8037 ;;		_i2c_write
  8038 ;; This function is called by:
  8039 ;;		_init_ds1307
  8040 ;;		_get_time
  8041 ;;		_get_date
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text23
  8046   002AEA                     __ptext23:
  8047                           	callstack 0
  8048   002AEA                     _read_ds1307:
  8049                           	callstack 24
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;incstack = 0
  8053                           ;read_ds1307@address stored from wreg
  8054   002AEA  6E06               	movwf	read_ds1307@address^0,c
  8055   002AEC                     
  8056                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  8057   002AEC  EC1B  F016         	call	_i2c_start	;wreg free
  8058   002AF0                     
  8059                           ;ds1307.c: 60:  i2c_write(0xD0);
  8060   002AF0  0ED0               	movlw	208
  8061   002AF2  EC05  F016         	call	_i2c_write
  8062   002AF6                     
  8063                           ;ds1307.c: 61:  i2c_write(address);
  8064   002AF6  5006               	movf	read_ds1307@address^0,w,c
  8065   002AF8  EC05  F016         	call	_i2c_write
  8066   002AFC                     
  8067                           ;ds1307.c: 62:  i2c_rep_start();
  8068   002AFC  EC1F  F016         	call	_i2c_rep_start	;wreg free
  8069   002B00                     
  8070                           ;ds1307.c: 63:  i2c_write(0xD1);
  8071   002B00  0ED1               	movlw	209
  8072   002B02  EC05  F016         	call	_i2c_write
  8073                           
  8074                           ;ds1307.c: 64:  data = i2c_read();
  8075   002B06  EC0B  F016         	call	_i2c_read	;wreg free
  8076   002B0A  6E07               	movwf	read_ds1307@data^0,c
  8077   002B0C                     
  8078                           ;ds1307.c: 65:  i2c_stop();
  8079   002B0C  EC17  F016         	call	_i2c_stop	;wreg free
  8080                           
  8081                           ;ds1307.c: 67:  return data;
  8082   002B10  5007               	movf	read_ds1307@data^0,w,c
  8083   002B12  0012               	return		;funcret
  8084   002B14                     __end_of_read_ds1307:
  8085                           	callstack 0
  8086                           
  8087 ;; *************** function _calculate_duration *****************
  8088 ;; Defined at:
  8089 ;;		line 163 in file "get_time.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  k               2   16[COMRAM] unsigned int 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  i               2   39[COMRAM] int 
  8094 ;;  i               2   41[COMRAM] unsigned int 
  8095 ;;  temp_sec        4   33[COMRAM] unsigned long 
  8096 ;;  temp_minute     4   29[COMRAM] unsigned long 
  8097 ;;  j               2   37[COMRAM] int 
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  1    wreg      void 
  8100 ;; Registers used:
  8101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8107 ;;      Params:         2       0       0       0       0       0       0
  8108 ;;      Locals:        14       0       0       0       0       0       0
  8109 ;;      Temps:         11       0       0       0       0       0       0
  8110 ;;      Totals:        27       0       0       0       0       0       0
  8111 ;;Total ram usage:       27 bytes
  8112 ;; Hardware stack levels used: 1
  8113 ;; Hardware stack levels required when called: 3
  8114 ;; This function calls:
  8115 ;;		___lmul
  8116 ;;		_clcd_putch
  8117 ;;		_clcd_write
  8118 ;;		_strcpy
  8119 ;; This function is called by:
  8120 ;;		_check_event_time
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text24
  8125   00140C                     __ptext24:
  8126                           	callstack 0
  8127   00140C                     _calculate_duration:
  8128                           	callstack 24
  8129   00140C                     
  8130                           ;get_time.c: 163: void calculate_duration(unsigned int k);get_time.c: 164: {;get_time.c:
      +                           165:     clcd_write(0x01, 0);
  8131   00140C  0E00               	movlw	0
  8132   00140E  6E05               	movwf	clcd_write@control_bit^0,c
  8133   001410  0E01               	movlw	1
  8134   001412  EC10  F015         	call	_clcd_write
  8135   001416                     
  8136                           ;get_time.c: 166:     unsigned long int temp_minute=(10*(view_event[k][11]-48))+(view_ev
      +                          ent[k][12]-48);
  8137   001416  0E12               	movlw	18
  8138   001418  0211               	mulwf	calculate_duration@k^0,c
  8139   00141A  CFF3 F013          	movff	prodl,??_calculate_duration
  8140   00141E  CFF4 F014          	movff	prodh,??_calculate_duration+1
  8141   001422  0212               	mulwf	(calculate_duration@k+1)^0,c
  8142   001424  50F3               	movf	prodl,w,c
  8143   001426  2614               	addwf	(??_calculate_duration+1)^0,f,c
  8144   001428  0E0B               	movlw	low (_view_event+11)
  8145   00142A  2413               	addwf	??_calculate_duration^0,w,c
  8146   00142C  6ED9               	movwf	fsr2l,c
  8147   00142E  0E01               	movlw	high (_view_event+11)
  8148   001430  2014               	addwfc	(??_calculate_duration+1)^0,w,c
  8149   001432  6EDA               	movwf	fsr2h,c
  8150   001434  50DF               	movf	indf2,w,c
  8151   001436  6E15               	movwf	(??_calculate_duration+2)^0,c
  8152   001438  5015               	movf	(??_calculate_duration+2)^0,w,c
  8153   00143A  0D0A               	mullw	10
  8154   00143C  CFF3 F016          	movff	prodl,??_calculate_duration+3
  8155   001440  CFF4 F017          	movff	prodh,??_calculate_duration+4
  8156   001444  0E12               	movlw	18
  8157   001446  0211               	mulwf	calculate_duration@k^0,c
  8158   001448  CFF3 F018          	movff	prodl,??_calculate_duration+5
  8159   00144C  CFF4 F019          	movff	prodh,??_calculate_duration+6
  8160   001450  0212               	mulwf	(calculate_duration@k+1)^0,c
  8161   001452  50F3               	movf	prodl,w,c
  8162   001454  2619               	addwf	(??_calculate_duration+6)^0,f,c
  8163   001456  0E0C               	movlw	low (_view_event+12)
  8164   001458  2418               	addwf	(??_calculate_duration+5)^0,w,c
  8165   00145A  6ED9               	movwf	fsr2l,c
  8166   00145C  0E01               	movlw	high (_view_event+12)
  8167   00145E  2019               	addwfc	(??_calculate_duration+6)^0,w,c
  8168   001460  6EDA               	movwf	fsr2h,c
  8169   001462  50DF               	movf	indf2,w,c
  8170   001464  6E1A               	movwf	(??_calculate_duration+7)^0,c
  8171   001466  501A               	movf	(??_calculate_duration+7)^0,w,c
  8172   001468  2616               	addwf	(??_calculate_duration+3)^0,f,c
  8173   00146A  0E00               	movlw	0
  8174   00146C  2217               	addwfc	(??_calculate_duration+4)^0,f,c
  8175   00146E  0EF0               	movlw	240
  8176   001470  2416               	addwf	(??_calculate_duration+3)^0,w,c
  8177   001472  6E1B               	movwf	(??_calculate_duration+8)^0,c
  8178   001474  0EFD               	movlw	253
  8179   001476  2017               	addwfc	(??_calculate_duration+4)^0,w,c
  8180   001478  6E1C               	movwf	(??_calculate_duration+9)^0,c
  8181   00147A  C01B  F01E         	movff	??_calculate_duration+8,calculate_duration@temp_minute
  8182   00147E  C01C  F01F         	movff	??_calculate_duration+9,calculate_duration@temp_minute+1
  8183   001482  0E00               	movlw	0
  8184   001484  BE1F               	btfsc	(calculate_duration@temp_minute+1)^0,7,c
  8185   001486  0EFF               	movlw	-1
  8186   001488  6E20               	movwf	(calculate_duration@temp_minute+2)^0,c
  8187   00148A  6E21               	movwf	(calculate_duration@temp_minute+3)^0,c
  8188   00148C                     
  8189                           ;get_time.c: 167:     unsigned long int temp_sec=(10*(view_event[k][14]-48))+(view_event
      +                          [k][15]-48);
  8190   00148C  0E12               	movlw	18
  8191   00148E  0211               	mulwf	calculate_duration@k^0,c
  8192   001490  CFF3 F013          	movff	prodl,??_calculate_duration
  8193   001494  CFF4 F014          	movff	prodh,??_calculate_duration+1
  8194   001498  0212               	mulwf	(calculate_duration@k+1)^0,c
  8195   00149A  50F3               	movf	prodl,w,c
  8196   00149C  2614               	addwf	(??_calculate_duration+1)^0,f,c
  8197   00149E  0E0E               	movlw	low (_view_event+14)
  8198   0014A0  2413               	addwf	??_calculate_duration^0,w,c
  8199   0014A2  6ED9               	movwf	fsr2l,c
  8200   0014A4  0E01               	movlw	high (_view_event+14)
  8201   0014A6  2014               	addwfc	(??_calculate_duration+1)^0,w,c
  8202   0014A8  6EDA               	movwf	fsr2h,c
  8203   0014AA  50DF               	movf	indf2,w,c
  8204   0014AC  6E15               	movwf	(??_calculate_duration+2)^0,c
  8205   0014AE  5015               	movf	(??_calculate_duration+2)^0,w,c
  8206   0014B0  0D0A               	mullw	10
  8207   0014B2  CFF3 F016          	movff	prodl,??_calculate_duration+3
  8208   0014B6  CFF4 F017          	movff	prodh,??_calculate_duration+4
  8209   0014BA  0E12               	movlw	18
  8210   0014BC  0211               	mulwf	calculate_duration@k^0,c
  8211   0014BE  CFF3 F018          	movff	prodl,??_calculate_duration+5
  8212   0014C2  CFF4 F019          	movff	prodh,??_calculate_duration+6
  8213   0014C6  0212               	mulwf	(calculate_duration@k+1)^0,c
  8214   0014C8  50F3               	movf	prodl,w,c
  8215   0014CA  2619               	addwf	(??_calculate_duration+6)^0,f,c
  8216   0014CC  0E0F               	movlw	low (_view_event+15)
  8217   0014CE  2418               	addwf	(??_calculate_duration+5)^0,w,c
  8218   0014D0  6ED9               	movwf	fsr2l,c
  8219   0014D2  0E01               	movlw	high (_view_event+15)
  8220   0014D4  2019               	addwfc	(??_calculate_duration+6)^0,w,c
  8221   0014D6  6EDA               	movwf	fsr2h,c
  8222   0014D8  50DF               	movf	indf2,w,c
  8223   0014DA  6E1A               	movwf	(??_calculate_duration+7)^0,c
  8224   0014DC  501A               	movf	(??_calculate_duration+7)^0,w,c
  8225   0014DE  2616               	addwf	(??_calculate_duration+3)^0,f,c
  8226   0014E0  0E00               	movlw	0
  8227   0014E2  2217               	addwfc	(??_calculate_duration+4)^0,f,c
  8228   0014E4  0EF0               	movlw	240
  8229   0014E6  2416               	addwf	(??_calculate_duration+3)^0,w,c
  8230   0014E8  6E1B               	movwf	(??_calculate_duration+8)^0,c
  8231   0014EA  0EFD               	movlw	253
  8232   0014EC  2017               	addwfc	(??_calculate_duration+4)^0,w,c
  8233   0014EE  6E1C               	movwf	(??_calculate_duration+9)^0,c
  8234   0014F0  C01B  F022         	movff	??_calculate_duration+8,calculate_duration@temp_sec
  8235   0014F4  C01C  F023         	movff	??_calculate_duration+9,calculate_duration@temp_sec+1
  8236   0014F8  0E00               	movlw	0
  8237   0014FA  BE23               	btfsc	(calculate_duration@temp_sec+1)^0,7,c
  8238   0014FC  0EFF               	movlw	-1
  8239   0014FE  6E24               	movwf	(calculate_duration@temp_sec+2)^0,c
  8240   001500  6E25               	movwf	(calculate_duration@temp_sec+3)^0,c
  8241   001502                     
  8242                           ;get_time.c: 168:     duration_=(temp_minute*60*20000)+(temp_sec*20000);
  8243   001502  C01E  F005         	movff	calculate_duration@temp_minute,___lmul@multiplier
  8244   001506  C01F  F006         	movff	calculate_duration@temp_minute+1,___lmul@multiplier+1
  8245   00150A  C020  F007         	movff	calculate_duration@temp_minute+2,___lmul@multiplier+2
  8246   00150E  C021  F008         	movff	calculate_duration@temp_minute+3,___lmul@multiplier+3
  8247   001512  0E80               	movlw	128
  8248   001514  6E09               	movwf	___lmul@multiplicand^0,c
  8249   001516  0E4F               	movlw	79
  8250   001518  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  8251   00151A  0E12               	movlw	18
  8252   00151C  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  8253   00151E  0E00               	movlw	0
  8254   001520  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  8255   001522  EC20  F014         	call	___lmul	;wreg free
  8256   001526  C005  F013         	movff	?___lmul,??_calculate_duration
  8257   00152A  C006  F014         	movff	?___lmul+1,??_calculate_duration+1
  8258   00152E  C007  F015         	movff	?___lmul+2,??_calculate_duration+2
  8259   001532  C008  F016         	movff	?___lmul+3,??_calculate_duration+3
  8260   001536  C022  F005         	movff	calculate_duration@temp_sec,___lmul@multiplier
  8261   00153A  C023  F006         	movff	calculate_duration@temp_sec+1,___lmul@multiplier+1
  8262   00153E  C024  F007         	movff	calculate_duration@temp_sec+2,___lmul@multiplier+2
  8263   001542  C025  F008         	movff	calculate_duration@temp_sec+3,___lmul@multiplier+3
  8264   001546  0E20               	movlw	32
  8265   001548  6E09               	movwf	___lmul@multiplicand^0,c
  8266   00154A  0E4E               	movlw	78
  8267   00154C  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  8268   00154E  0E00               	movlw	0
  8269   001550  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  8270   001552  0E00               	movlw	0
  8271   001554  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  8272   001556  EC20  F014         	call	___lmul	;wreg free
  8273   00155A  5005               	movf	?___lmul^0,w,c
  8274   00155C  2413               	addwf	??_calculate_duration^0,w,c
  8275   00155E  0100               	movlb	0	; () banked
  8276   001560  6F6C               	movwf	_duration_& (0+255),b
  8277   001562  5006               	movf	(?___lmul+1)^0,w,c
  8278   001564  2014               	addwfc	(??_calculate_duration+1)^0,w,c
  8279   001566  6F6D               	movwf	(_duration_+1)& (0+255),b
  8280   001568  5007               	movf	(?___lmul+2)^0,w,c
  8281   00156A  2015               	addwfc	(??_calculate_duration+2)^0,w,c
  8282   00156C  6F6E               	movwf	(_duration_+2)& (0+255),b
  8283   00156E  5008               	movf	(?___lmul+3)^0,w,c
  8284   001570  2016               	addwfc	(??_calculate_duration+3)^0,w,c
  8285   001572  6F6F               	movwf	(_duration_+3)& (0+255),b
  8286   001574                     
  8287                           ; BSR set to: 0
  8288                           ;get_time.c: 169:     int j=0;
  8289   001574  0E00               	movlw	0
  8290   001576  6E27               	movwf	(calculate_duration@j+1)^0,c
  8291   001578  0E00               	movlw	0
  8292   00157A  6E26               	movwf	calculate_duration@j^0,c
  8293   00157C                     
  8294                           ; BSR set to: 0
  8295                           ;get_time.c: 170:     if(view_event[k][17]=='O')
  8296   00157C  0E12               	movlw	18
  8297   00157E  0211               	mulwf	calculate_duration@k^0,c
  8298   001580  CFF3 F013          	movff	prodl,??_calculate_duration
  8299   001584  CFF4 F014          	movff	prodh,??_calculate_duration+1
  8300   001588  0212               	mulwf	(calculate_duration@k+1)^0,c
  8301   00158A  50F3               	movf	prodl,w,c
  8302   00158C  2614               	addwf	(??_calculate_duration+1)^0,f,c
  8303   00158E  0E11               	movlw	low (_view_event+17)
  8304   001590  2413               	addwf	??_calculate_duration^0,w,c
  8305   001592  6ED9               	movwf	fsr2l,c
  8306   001594  0E01               	movlw	high (_view_event+17)
  8307   001596  2014               	addwfc	(??_calculate_duration+1)^0,w,c
  8308   001598  6EDA               	movwf	fsr2h,c
  8309   00159A  0E4F               	movlw	79
  8310   00159C  18DE               	xorwf	postinc2,w,c
  8311   00159E  A4D8               	btfss	status,2,c
  8312   0015A0  EFD4  F00A         	goto	u2291
  8313   0015A4  EFD6  F00A         	goto	u2290
  8314   0015A8                     u2291:
  8315   0015A8  EF24  F00B         	goto	l2983
  8316   0015AC                     u2290:
  8317   0015AC                     
  8318                           ; BSR set to: 0
  8319                           ;get_time.c: 171:     {;get_time.c: 172:         unsigned int i=k;
  8320   0015AC  C011  F02A         	movff	calculate_duration@k,calculate_duration@i
  8321   0015B0  C012  F02B         	movff	calculate_duration@k+1,calculate_duration@i+1
  8322                           
  8323                           ;get_time.c: 173:         for( i=k;i<event_count;i++)
  8324   0015B4  C011  F02A         	movff	calculate_duration@k,calculate_duration@i
  8325   0015B8  C012  F02B         	movff	calculate_duration@k+1,calculate_duration@i+1
  8326   0015BC  EF13  F00B         	goto	l2979
  8327   0015C0                     l2973:
  8328                           
  8329                           ;get_time.c: 174:         {;get_time.c: 175:             if((i+1)<event_count)
  8330   0015C0  0E01               	movlw	1
  8331   0015C2  242A               	addwf	calculate_duration@i^0,w,c
  8332   0015C4  6E13               	movwf	??_calculate_duration^0,c
  8333   0015C6  0E00               	movlw	0
  8334   0015C8  202B               	addwfc	(calculate_duration@i+1)^0,w,c
  8335   0015CA  6E14               	movwf	(??_calculate_duration+1)^0,c
  8336   0015CC  5048               	movf	_event_count^0,w,c
  8337   0015CE  5C13               	subwf	??_calculate_duration^0,w,c
  8338   0015D0  5049               	movf	(_event_count+1)^0,w,c
  8339   0015D2  5814               	subwfb	(??_calculate_duration+1)^0,w,c
  8340   0015D4  B0D8               	btfsc	status,0,c
  8341   0015D6  EFEF  F00A         	goto	u2301
  8342   0015DA  EFF1  F00A         	goto	u2300
  8343   0015DE                     u2301:
  8344   0015DE  EF11  F00B         	goto	l2977
  8345   0015E2                     u2300:
  8346   0015E2                     
  8347                           ;get_time.c: 176:             strcpy(view_event[i],view_event[i+1]);
  8348   0015E2  0E12               	movlw	18
  8349   0015E4  022A               	mulwf	calculate_duration@i^0,c
  8350   0015E6  CFF3 F013          	movff	prodl,??_calculate_duration
  8351   0015EA  CFF4 F014          	movff	prodh,??_calculate_duration+1
  8352   0015EE  022B               	mulwf	(calculate_duration@i+1)^0,c
  8353   0015F0  50F3               	movf	prodl,w,c
  8354   0015F2  2614               	addwf	(??_calculate_duration+1)^0,f,c
  8355   0015F4  0E00               	movlw	low _view_event
  8356   0015F6  2413               	addwf	??_calculate_duration^0,w,c
  8357   0015F8  6E05               	movwf	strcpy@dest^0,c
  8358   0015FA  0E01               	movlw	high _view_event
  8359   0015FC  2014               	addwfc	(??_calculate_duration+1)^0,w,c
  8360   0015FE  6E06               	movwf	(strcpy@dest+1)^0,c
  8361   001600  0E12               	movlw	18
  8362   001602  022A               	mulwf	calculate_duration@i^0,c
  8363   001604  CFF3 F015          	movff	prodl,??_calculate_duration+2
  8364   001608  CFF4 F016          	movff	prodh,??_calculate_duration+3
  8365   00160C  022B               	mulwf	(calculate_duration@i+1)^0,c
  8366   00160E  50F3               	movf	prodl,w,c
  8367   001610  2616               	addwf	(??_calculate_duration+3)^0,f,c
  8368   001612  0E12               	movlw	low (_view_event+18)
  8369   001614  2415               	addwf	(??_calculate_duration+2)^0,w,c
  8370   001616  6E07               	movwf	strcpy@src^0,c
  8371   001618  0E01               	movlw	high (_view_event+18)
  8372   00161A  2016               	addwfc	(??_calculate_duration+3)^0,w,c
  8373   00161C  6E08               	movwf	(strcpy@src+1)^0,c
  8374   00161E  EC2D  F015         	call	_strcpy	;wreg free
  8375   001622                     l2977:
  8376                           
  8377                           ;get_time.c: 177:         }
  8378   001622  4A2A               	infsnz	calculate_duration@i^0,f,c
  8379   001624  2A2B               	incf	(calculate_duration@i+1)^0,f,c
  8380   001626                     l2979:
  8381   001626  5048               	movf	_event_count^0,w,c
  8382   001628  5C2A               	subwf	calculate_duration@i^0,w,c
  8383   00162A  5049               	movf	(_event_count+1)^0,w,c
  8384   00162C  582B               	subwfb	(calculate_duration@i+1)^0,w,c
  8385   00162E  A0D8               	btfss	status,0,c
  8386   001630  EF1C  F00B         	goto	u2311
  8387   001634  EF1E  F00B         	goto	u2310
  8388   001638                     u2311:
  8389   001638  EFE0  F00A         	goto	l2973
  8390   00163C                     u2310:
  8391   00163C                     
  8392                           ;get_time.c: 178:         event_count=i-1;
  8393   00163C  0EFF               	movlw	255
  8394   00163E  242A               	addwf	calculate_duration@i^0,w,c
  8395   001640  6E48               	movwf	_event_count^0,c
  8396   001642  0EFF               	movlw	255
  8397   001644  202B               	addwfc	(calculate_duration@i+1)^0,w,c
  8398   001646  6E49               	movwf	(_event_count+1)^0,c
  8399   001648                     l2983:
  8400                           
  8401                           ;get_time.c: 180:     for(int i=15;i>=0;i--)
  8402   001648  0E00               	movlw	0
  8403   00164A  6E29               	movwf	(calculate_duration@i_470+1)^0,c
  8404   00164C  0E0F               	movlw	15
  8405   00164E  6E28               	movwf	calculate_duration@i_470^0,c
  8406   001650                     l2989:
  8407                           
  8408                           ;get_time.c: 181:     {;get_time.c: 182:         if(duration_&(1<<i))
  8409   001650  C028  F013         	movff	calculate_duration@i_470,??_calculate_duration
  8410   001654  0E01               	movlw	1
  8411   001656  6E14               	movwf	(??_calculate_duration+1)^0,c
  8412   001658  0E00               	movlw	0
  8413   00165A  6E15               	movwf	(??_calculate_duration+2)^0,c
  8414   00165C  2A13               	incf	??_calculate_duration^0,f,c
  8415   00165E  EF34  F00B         	goto	u2324
  8416   001662                     u2325:
  8417   001662  90D8               	bcf	status,0,c
  8418   001664  3614               	rlcf	(??_calculate_duration+1)^0,f,c
  8419   001666  3615               	rlcf	(??_calculate_duration+2)^0,f,c
  8420   001668                     u2324:
  8421   001668  2E13               	decfsz	??_calculate_duration^0,f,c
  8422   00166A  EF31  F00B         	goto	u2325
  8423   00166E  C014  F016         	movff	??_calculate_duration+1,??_calculate_duration+3
  8424   001672  C015  F017         	movff	??_calculate_duration+2,??_calculate_duration+4
  8425   001676  0E00               	movlw	0
  8426   001678  BE17               	btfsc	(??_calculate_duration+4)^0,7,c
  8427   00167A  0EFF               	movlw	255
  8428   00167C  6E18               	movwf	(??_calculate_duration+5)^0,c
  8429   00167E  6E19               	movwf	(??_calculate_duration+6)^0,c
  8430   001680  0100               	movlb	0	; () banked
  8431   001682  516C               	movf	_duration_& (0+255),w,b
  8432   001684  1416               	andwf	(??_calculate_duration+3)^0,w,c
  8433   001686  6E1A               	movwf	(??_calculate_duration+7)^0,c
  8434   001688  516D               	movf	(_duration_+1)& (0+255),w,b
  8435   00168A  1417               	andwf	(??_calculate_duration+4)^0,w,c
  8436   00168C  6E1B               	movwf	(??_calculate_duration+8)^0,c
  8437   00168E  516E               	movf	(_duration_+2)& (0+255),w,b
  8438   001690  1418               	andwf	(??_calculate_duration+5)^0,w,c
  8439   001692  6E1C               	movwf	(??_calculate_duration+9)^0,c
  8440   001694  516F               	movf	(_duration_+3)& (0+255),w,b
  8441   001696  1419               	andwf	(??_calculate_duration+6)^0,w,c
  8442   001698  6E1D               	movwf	(??_calculate_duration+10)^0,c
  8443   00169A  501A               	movf	(??_calculate_duration+7)^0,w,c
  8444   00169C  101B               	iorwf	(??_calculate_duration+8)^0,w,c
  8445   00169E  101C               	iorwf	(??_calculate_duration+9)^0,w,c
  8446   0016A0  101D               	iorwf	(??_calculate_duration+10)^0,w,c
  8447   0016A2  B4D8               	btfsc	status,2,c
  8448   0016A4  EF56  F00B         	goto	u2331
  8449   0016A8  EF58  F00B         	goto	u2330
  8450   0016AC                     u2331:
  8451   0016AC  EF62  F00B         	goto	l2995
  8452   0016B0                     u2330:
  8453   0016B0                     
  8454                           ; BSR set to: 0
  8455                           ;get_time.c: 183:         {;get_time.c: 184:             clcd_putch('1',(0x80 + (j)));
  8456   0016B0  5026               	movf	calculate_duration@j^0,w,c
  8457   0016B2  0F80               	addlw	128
  8458   0016B4  6E07               	movwf	clcd_putch@addr^0,c
  8459   0016B6  0E31               	movlw	49
  8460   0016B8  ECD1  F015         	call	_clcd_putch
  8461   0016BC                     l2993:
  8462                           
  8463                           ;get_time.c: 185:             j++;
  8464   0016BC  4A26               	infsnz	calculate_duration@j^0,f,c
  8465   0016BE  2A27               	incf	(calculate_duration@j+1)^0,f,c
  8466                           
  8467                           ;get_time.c: 186:         }
  8468   0016C0  EF6A  F00B         	goto	l2999
  8469   0016C4                     l2995:
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;get_time.c: 188:         {;get_time.c: 189:             clcd_putch('0',(0x80 + (j)));
  8473   0016C4  5026               	movf	calculate_duration@j^0,w,c
  8474   0016C6  0F80               	addlw	128
  8475   0016C8  6E07               	movwf	clcd_putch@addr^0,c
  8476   0016CA  0E30               	movlw	48
  8477   0016CC  ECD1  F015         	call	_clcd_putch
  8478   0016D0  EF5E  F00B         	goto	l2993
  8479   0016D4                     l2999:
  8480                           
  8481                           ;get_time.c: 192:     }
  8482   0016D4  0628               	decf	calculate_duration@i_470^0,f,c
  8483   0016D6  A0D8               	btfss	status,0,c
  8484   0016D8  0629               	decf	(calculate_duration@i_470+1)^0,f,c
  8485   0016DA  BE29               	btfsc	(calculate_duration@i_470+1)^0,7,c
  8486   0016DC  EF74  F00B         	goto	u2340
  8487   0016E0  EF72  F00B         	goto	u2341
  8488   0016E4                     u2341:
  8489   0016E4  EF28  F00B         	goto	l2989
  8490   0016E8                     u2340:
  8491   0016E8                     
  8492                           ;get_time.c: 193:     F=1;
  8493   0016E8  0E00               	movlw	0
  8494   0016EA  0100               	movlb	0	; () banked
  8495   0016EC  6F88               	movwf	(_F+1)& (0+255),b
  8496   0016EE  0E01               	movlw	1
  8497   0016F0  6F87               	movwf	_F& (0+255),b
  8498   0016F2                     
  8499                           ; BSR set to: 0
  8500   0016F2  0012               	return		;funcret
  8501   0016F4                     __end_of_calculate_duration:
  8502                           	callstack 0
  8503                           
  8504 ;; *************** function _strcpy *****************
  8505 ;; Defined at:
  8506 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  dest            2    4[COMRAM] PTR unsigned char 
  8509 ;;		 -> view_event(180), 
  8510 ;;  src             2    6[COMRAM] PTR const unsigned char 
  8511 ;;		 -> view_event(180), 
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;  d               2    8[COMRAM] PTR unsigned char 
  8514 ;;		 -> view_event(180), 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  2    4[COMRAM] PTR unsigned char 
  8517 ;; Registers used:
  8518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8524 ;;      Params:         4       0       0       0       0       0       0
  8525 ;;      Locals:         2       0       0       0       0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0
  8527 ;;      Totals:         6       0       0       0       0       0       0
  8528 ;;Total ram usage:        6 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; Hardware stack levels required when called: 1
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_calculate_duration
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text25
  8539   002A5A                     __ptext25:
  8540                           	callstack 0
  8541   002A5A                     _strcpy:
  8542                           	callstack 25
  8543   002A5A  C005  F009         	movff	strcpy@dest,strcpy@d
  8544   002A5E  C006  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8545   002A62                     l2887:
  8546   002A62  C007  FFD9         	movff	strcpy@src,fsr2l
  8547   002A66  C008  FFDA         	movff	strcpy@src+1,fsr2h
  8548   002A6A  4A07               	infsnz	strcpy@src^0,f,c
  8549   002A6C  2A08               	incf	(strcpy@src+1)^0,f,c
  8550   002A6E  C009  FFE1         	movff	strcpy@d,fsr1l
  8551   002A72  C00A  FFE2         	movff	strcpy@d+1,fsr1h
  8552   002A76  4A09               	infsnz	strcpy@d^0,f,c
  8553   002A78  2A0A               	incf	(strcpy@d+1)^0,f,c
  8554   002A7A  CFDF FFE7          	movff	indf2,indf1
  8555   002A7E  50E7               	movf	indf1,w,c
  8556   002A80  A4D8               	btfss	status,2,c
  8557   002A82  EF45  F015         	goto	u2221
  8558   002A86  EF47  F015         	goto	u2220
  8559   002A8A                     u2221:
  8560   002A8A  EF31  F015         	goto	l2887
  8561   002A8E                     u2220:
  8562   002A8E  0012               	return		;funcret
  8563   002A90                     __end_of_strcpy:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function ___lmul *****************
  8567 ;; Defined at:
  8568 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  multiplier      4    4[COMRAM] unsigned long 
  8571 ;;  multiplicand    4    8[COMRAM] unsigned long 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;  product         4   12[COMRAM] unsigned long 
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  4    4[COMRAM] unsigned long 
  8576 ;; Registers used:
  8577 ;;		wreg, status,2, status,0
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8583 ;;      Params:         8       0       0       0       0       0       0
  8584 ;;      Locals:         4       0       0       0       0       0       0
  8585 ;;      Temps:          0       0       0       0       0       0       0
  8586 ;;      Totals:        12       0       0       0       0       0       0
  8587 ;;Total ram usage:       12 bytes
  8588 ;; Hardware stack levels used: 1
  8589 ;; Hardware stack levels required when called: 1
  8590 ;; This function calls:
  8591 ;;		Nothing
  8592 ;; This function is called by:
  8593 ;;		_calculate_duration
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text26
  8598   002840                     __ptext26:
  8599                           	callstack 0
  8600   002840                     ___lmul:
  8601                           	callstack 25
  8602   002840  0E00               	movlw	0
  8603   002842  6E0D               	movwf	___lmul@product^0,c
  8604   002844  0E00               	movlw	0
  8605   002846  6E0E               	movwf	(___lmul@product+1)^0,c
  8606   002848  0E00               	movlw	0
  8607   00284A  6E0F               	movwf	(___lmul@product+2)^0,c
  8608   00284C  0E00               	movlw	0
  8609   00284E  6E10               	movwf	(___lmul@product+3)^0,c
  8610   002850                     l2891:
  8611   002850  A005               	btfss	___lmul@multiplier^0,0,c
  8612   002852  EF2D  F014         	goto	u2231
  8613   002856  EF2F  F014         	goto	u2230
  8614   00285A                     u2231:
  8615   00285A  EF37  F014         	goto	l2895
  8616   00285E                     u2230:
  8617   00285E  5009               	movf	___lmul@multiplicand^0,w,c
  8618   002860  260D               	addwf	___lmul@product^0,f,c
  8619   002862  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  8620   002864  220E               	addwfc	(___lmul@product+1)^0,f,c
  8621   002866  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  8622   002868  220F               	addwfc	(___lmul@product+2)^0,f,c
  8623   00286A  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  8624   00286C  2210               	addwfc	(___lmul@product+3)^0,f,c
  8625   00286E                     l2895:
  8626   00286E  90D8               	bcf	status,0,c
  8627   002870  3609               	rlcf	___lmul@multiplicand^0,f,c
  8628   002872  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8629   002874  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8630   002876  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8631   002878  90D8               	bcf	status,0,c
  8632   00287A  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  8633   00287C  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  8634   00287E  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  8635   002880  3205               	rrcf	___lmul@multiplier^0,f,c
  8636   002882  5005               	movf	___lmul@multiplier^0,w,c
  8637   002884  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  8638   002886  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  8639   002888  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  8640   00288A  A4D8               	btfss	status,2,c
  8641   00288C  EF4A  F014         	goto	u2241
  8642   002890  EF4C  F014         	goto	u2240
  8643   002894                     u2241:
  8644   002894  EF28  F014         	goto	l2891
  8645   002898                     u2240:
  8646   002898  C00D  F005         	movff	___lmul@product,?___lmul
  8647   00289C  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  8648   0028A0  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  8649   0028A4  C010  F008         	movff	___lmul@product+3,?___lmul+3
  8650   0028A8  0012               	return		;funcret
  8651   0028AA                     __end_of___lmul:
  8652                           	callstack 0
  8653                           
  8654 ;; *************** function _GOTO_SET_TIMEDATA *****************
  8655 ;; Defined at:
  8656 ;;		line 533 in file "main.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;		None
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;		None
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  2  445[None  ] int 
  8663 ;; Registers used:
  8664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8670 ;;      Params:         0       0       0       0       0       0       0
  8671 ;;      Locals:         0       0       0       0       0       0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0
  8673 ;;      Totals:         0       0       0       0       0       0       0
  8674 ;;Total ram usage:        0 bytes
  8675 ;; Hardware stack levels used: 1
  8676 ;; Hardware stack levels required when called: 6
  8677 ;; This function calls:
  8678 ;;		_clcd_print
  8679 ;;		_set_date
  8680 ;;		_set_time
  8681 ;; This function is called by:
  8682 ;;		_main
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text27
  8687   001EB4                     __ptext27:
  8688                           	callstack 0
  8689   001EB4                     _GOTO_SET_TIMEDATA:
  8690                           	callstack 24
  8691   001EB4                     
  8692                           ;main.c: 536:     if(f==1)
  8693   001EB4  0100               	movlb	0	; () banked
  8694   001EB6  059E               	decf	_f& (0+255),w,b
  8695   001EB8  A4D8               	btfss	status,2,c
  8696   001EBA  EF61  F00F         	goto	u3521
  8697   001EBE  EF63  F00F         	goto	u3520
  8698   001EC2                     u3521:
  8699   001EC2  EFDF  F00F         	goto	l3835
  8700   001EC6                     u3520:
  8701   001EC6                     
  8702                           ; BSR set to: 0
  8703                           ;main.c: 537:     {;main.c: 538:           if(oper1==1)
  8704   001EC6  0458               	decf	_oper1^0,w,c
  8705   001EC8  A4D8               	btfss	status,2,c
  8706   001ECA  EF69  F00F         	goto	u3531
  8707   001ECE  EF6B  F00F         	goto	u3530
  8708   001ED2                     u3531:
  8709   001ED2  EF7D  F00F         	goto	l3815
  8710   001ED6                     u3530:
  8711   001ED6                     
  8712                           ; BSR set to: 0
  8713                           ;main.c: 539:     {;main.c: 540:         clcd_print("->",(0x80 + (0)));
  8714   001ED6  0EF5               	movlw	low STR_17
  8715   001ED8  6E07               	movwf	clcd_print@data^0,c
  8716   001EDA  0E2F               	movlw	high STR_17
  8717   001EDC  6E08               	movwf	(clcd_print@data+1)^0,c
  8718   001EDE  0E80               	movlw	128
  8719   001EE0  6E09               	movwf	clcd_print@addr^0,c
  8720   001EE2  ECEA  F013         	call	_clcd_print	;wreg free
  8721                           
  8722                           ;main.c: 541:         clcd_print("  ",(0xC0 + (0)));
  8723   001EE6  0E67               	movlw	low (STR_11+14)
  8724   001EE8  6E07               	movwf	clcd_print@data^0,c
  8725   001EEA  0E2F               	movlw	high (STR_11+14)
  8726   001EEC  6E08               	movwf	(clcd_print@data+1)^0,c
  8727   001EEE  0EC0               	movlw	192
  8728   001EF0  6E09               	movwf	clcd_print@addr^0,c
  8729   001EF2  ECEA  F013         	call	_clcd_print	;wreg free
  8730                           
  8731                           ;main.c: 542:     }
  8732   001EF6  EF96  F00F         	goto	l448
  8733   001EFA                     l3815:
  8734                           
  8735                           ; BSR set to: 0
  8736   001EFA  0E02               	movlw	2
  8737   001EFC  1858               	xorwf	_oper1^0,w,c
  8738   001EFE  A4D8               	btfss	status,2,c
  8739   001F00  EF84  F00F         	goto	u3541
  8740   001F04  EF86  F00F         	goto	u3540
  8741   001F08                     u3541:
  8742   001F08  EF96  F00F         	goto	l448
  8743   001F0C                     u3540:
  8744   001F0C                     
  8745                           ; BSR set to: 0
  8746                           ;main.c: 544:     {;main.c: 545:         clcd_print("  ",(0x80 + (0)));
  8747   001F0C  0E67               	movlw	low (STR_11+14)
  8748   001F0E  6E07               	movwf	clcd_print@data^0,c
  8749   001F10  0E2F               	movlw	high (STR_11+14)
  8750   001F12  6E08               	movwf	(clcd_print@data+1)^0,c
  8751   001F14  0E80               	movlw	128
  8752   001F16  6E09               	movwf	clcd_print@addr^0,c
  8753   001F18  ECEA  F013         	call	_clcd_print	;wreg free
  8754                           
  8755                           ;main.c: 546:         clcd_print("->",(0xC0 + (0)));
  8756   001F1C  0EF5               	movlw	low STR_17
  8757   001F1E  6E07               	movwf	clcd_print@data^0,c
  8758   001F20  0E2F               	movlw	high STR_17
  8759   001F22  6E08               	movwf	(clcd_print@data+1)^0,c
  8760   001F24  0EC0               	movlw	192
  8761   001F26  6E09               	movwf	clcd_print@addr^0,c
  8762   001F28  ECEA  F013         	call	_clcd_print	;wreg free
  8763   001F2C                     l448:
  8764                           
  8765                           ;main.c: 548:      clcd_print("SET TIME      ",(0x80 + (2)));
  8766   001F2C  0E7B               	movlw	low STR_21
  8767   001F2E  6E07               	movwf	clcd_print@data^0,c
  8768   001F30  0E2F               	movlw	high STR_21
  8769   001F32  6E08               	movwf	(clcd_print@data+1)^0,c
  8770   001F34  0E82               	movlw	130
  8771   001F36  6E09               	movwf	clcd_print@addr^0,c
  8772   001F38  ECEA  F013         	call	_clcd_print	;wreg free
  8773                           
  8774                           ;main.c: 549:      clcd_print("SET DATE      ",(0xC0 + (2)));
  8775   001F3C  0E8A               	movlw	low STR_22
  8776   001F3E  6E07               	movwf	clcd_print@data^0,c
  8777   001F40  0E2F               	movlw	high STR_22
  8778   001F42  6E08               	movwf	(clcd_print@data+1)^0,c
  8779   001F44  0EC2               	movlw	194
  8780   001F46  6E09               	movwf	clcd_print@addr^0,c
  8781   001F48  ECEA  F013         	call	_clcd_print	;wreg free
  8782   001F4C                     
  8783                           ;main.c: 551:     if(key==11)
  8784   001F4C  0E0B               	movlw	11
  8785   001F4E  0100               	movlb	0	; () banked
  8786   001F50  199F               	xorwf	_key& (0+255),w,b
  8787   001F52  A4D8               	btfss	status,2,c
  8788   001F54  EFAE  F00F         	goto	u3551
  8789   001F58  EFB0  F00F         	goto	u3550
  8790   001F5C                     u3551:
  8791   001F5C  EFC3  F00F         	goto	l3827
  8792   001F60                     u3550:
  8793   001F60                     
  8794                           ; BSR set to: 0
  8795                           ;main.c: 552:     {;main.c: 553:         if(f==1)
  8796   001F60  059E               	decf	_f& (0+255),w,b
  8797   001F62  A4D8               	btfss	status,2,c
  8798   001F64  EFB6  F00F         	goto	u3561
  8799   001F68  EFB8  F00F         	goto	u3560
  8800   001F6C                     u3561:
  8801   001F6C  EFDF  F00F         	goto	l3835
  8802   001F70                     u3560:
  8803   001F70                     
  8804                           ; BSR set to: 0
  8805                           ;main.c: 554:         {;main.c: 555:         if(oper1>1)
  8806   001F70  0E01               	movlw	1
  8807   001F72  6458               	cpfsgt	_oper1^0,c
  8808   001F74  EFBE  F00F         	goto	u3571
  8809   001F78  EFC0  F00F         	goto	u3570
  8810   001F7C                     u3571:
  8811   001F7C  EFDF  F00F         	goto	l453
  8812   001F80                     u3570:
  8813   001F80                     
  8814                           ; BSR set to: 0
  8815                           ;main.c: 556:         {;main.c: 557:             oper1--;
  8816   001F80  0658               	decf	_oper1^0,f,c
  8817   001F82  EFDF  F00F         	goto	l3835
  8818   001F86                     l3827:
  8819                           
  8820                           ; BSR set to: 0
  8821   001F86  0E0C               	movlw	12
  8822   001F88  199F               	xorwf	_key& (0+255),w,b
  8823   001F8A  A4D8               	btfss	status,2,c
  8824   001F8C  EFCA  F00F         	goto	u3581
  8825   001F90  EFCC  F00F         	goto	u3580
  8826   001F94                     u3581:
  8827   001F94  EFDF  F00F         	goto	l3835
  8828   001F98                     u3580:
  8829   001F98                     
  8830                           ; BSR set to: 0
  8831                           ;main.c: 563:      {;main.c: 564:          if(f==1)
  8832   001F98  059E               	decf	_f& (0+255),w,b
  8833   001F9A  A4D8               	btfss	status,2,c
  8834   001F9C  EFD2  F00F         	goto	u3591
  8835   001FA0  EFD4  F00F         	goto	u3590
  8836   001FA4                     u3591:
  8837   001FA4  EFDF  F00F         	goto	l3835
  8838   001FA8                     u3590:
  8839   001FA8                     
  8840                           ; BSR set to: 0
  8841                           ;main.c: 565:          {;main.c: 566:          if(oper1<2)
  8842   001FA8  0E02               	movlw	2
  8843   001FAA  6058               	cpfslt	_oper1^0,c
  8844   001FAC  EFDA  F00F         	goto	u3601
  8845   001FB0  EFDC  F00F         	goto	u3600
  8846   001FB4                     u3601:
  8847   001FB4  EFDF  F00F         	goto	l3835
  8848   001FB8                     u3600:
  8849   001FB8                     
  8850                           ; BSR set to: 0
  8851                           ;main.c: 567:          {;main.c: 568:              oper1++;
  8852   001FB8  2A58               	incf	_oper1^0,f,c
  8853   001FBA  EFDF  F00F         	goto	l3835
  8854   001FBE                     l453:
  8855   001FBE                     l3835:
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;main.c: 575:     if(oper1==1)
  8859   001FBE  0458               	decf	_oper1^0,w,c
  8860   001FC0  A4D8               	btfss	status,2,c
  8861   001FC2  EFE5  F00F         	goto	u3611
  8862   001FC6  EFE7  F00F         	goto	u3610
  8863   001FCA                     u3611:
  8864   001FCA  EFF4  F00F         	goto	l3841
  8865   001FCE                     u3610:
  8866   001FCE                     
  8867                           ; BSR set to: 0
  8868                           ;main.c: 576:     {;main.c: 577:         if(f==2)
  8869   001FCE  0E02               	movlw	2
  8870   001FD0  199E               	xorwf	_f& (0+255),w,b
  8871   001FD2  A4D8               	btfss	status,2,c
  8872   001FD4  EFEE  F00F         	goto	u3621
  8873   001FD8  EFF0  F00F         	goto	u3620
  8874   001FDC                     u3621:
  8875   001FDC  EF08  F010         	goto	l462
  8876   001FE0                     u3620:
  8877   001FE0                     
  8878                           ; BSR set to: 0
  8879                           ;main.c: 578:         {;main.c: 579:             set_time();
  8880   001FE0  ECFC  F005         	call	_set_time	;wreg free
  8881   001FE4  EF08  F010         	goto	l462
  8882   001FE8                     l3841:
  8883                           
  8884                           ; BSR set to: 0
  8885   001FE8  0E02               	movlw	2
  8886   001FEA  1858               	xorwf	_oper1^0,w,c
  8887   001FEC  A4D8               	btfss	status,2,c
  8888   001FEE  EFFB  F00F         	goto	u3631
  8889   001FF2  EFFD  F00F         	goto	u3630
  8890   001FF6                     u3631:
  8891   001FF6  EF08  F010         	goto	l462
  8892   001FFA                     u3630:
  8893   001FFA                     
  8894                           ; BSR set to: 0
  8895                           ;main.c: 584:      {;main.c: 585:          if(f==2)
  8896   001FFA  0E02               	movlw	2
  8897   001FFC  199E               	xorwf	_f& (0+255),w,b
  8898   001FFE  A4D8               	btfss	status,2,c
  8899   002000  EF04  F010         	goto	u3641
  8900   002004  EF06  F010         	goto	u3640
  8901   002008                     u3641:
  8902   002008  EF08  F010         	goto	l462
  8903   00200C                     u3640:
  8904   00200C                     
  8905                           ; BSR set to: 0
  8906                           ;main.c: 586:          {;main.c: 587:              set_date();
  8907   00200C  EC06  F008         	call	_set_date	;wreg free
  8908   002010                     l462:
  8909   002010  0012               	return		;funcret
  8910   002012                     __end_of_GOTO_SET_TIMEDATA:
  8911                           	callstack 0
  8912                           
  8913 ;; *************** function _set_time *****************
  8914 ;; Defined at:
  8915 ;;		line 355 in file "main.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8929 ;;      Params:         0       0       0       0       0       0       0
  8930 ;;      Locals:         0       0       0       0       0       0       0
  8931 ;;      Temps:          2       0       0       0       0       0       0
  8932 ;;      Totals:         2       0       0       0       0       0       0
  8933 ;;Total ram usage:        2 bytes
  8934 ;; Hardware stack levels used: 1
  8935 ;; Hardware stack levels required when called: 5
  8936 ;; This function calls:
  8937 ;;		___lwdiv
  8938 ;;		___lwmod
  8939 ;;		_clcd_print
  8940 ;;		_read_EEPROM
  8941 ;;		_write_ds1307
  8942 ;; This function is called by:
  8943 ;;		_GOTO_SET_TIMEDATA
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text28
  8948   000BF8                     __ptext28:
  8949                           	callstack 0
  8950   000BF8                     _set_time:
  8951                           	callstack 24
  8952   000BF8                     
  8953                           ;main.c: 357:     event_count=read_EEPROM(0x00)+'0';
  8954   000BF8  0E00               	movlw	0
  8955   000BFA  EC8A  F015         	call	_read_EEPROM
  8956   000BFE  6E0E               	movwf	??_set_time^0,c
  8957   000C00  0E30               	movlw	48
  8958   000C02  240E               	addwf	??_set_time^0,w,c
  8959   000C04  6E48               	movwf	_event_count^0,c
  8960   000C06  6A49               	clrf	(_event_count+1)^0,c
  8961   000C08  0E00               	movlw	0
  8962   000C0A  2249               	addwfc	(_event_count+1)^0,f,c
  8963   000C0C                     
  8964                           ;main.c: 358:     if(f==2)
  8965   000C0C  0E02               	movlw	2
  8966   000C0E  0100               	movlb	0	; () banked
  8967   000C10  199E               	xorwf	_f& (0+255),w,b
  8968   000C12  A4D8               	btfss	status,2,c
  8969   000C14  EF0E  F006         	goto	u3071
  8970   000C18  EF10  F006         	goto	u3070
  8971   000C1C                     u3071:
  8972   000C1C  EF05  F008         	goto	l422
  8973   000C20                     u3070:
  8974   000C20                     
  8975                           ; BSR set to: 0
  8976                           ;main.c: 359:     {;main.c: 360:         if(once)
  8977   000C20  51EE               	movf	_once& (0+255),w,b
  8978   000C22  B4D8               	btfsc	status,2,c
  8979   000C24  EF16  F006         	goto	u3081
  8980   000C28  EF18  F006         	goto	u3080
  8981   000C2C                     u3081:
  8982   000C2C  EF54  F006         	goto	l3555
  8983   000C30                     u3080:
  8984   000C30                     
  8985                           ; BSR set to: 0
  8986                           ;main.c: 361:         {;main.c: 362:         hour=(time[0]-'0')*10+(time[1]-'0');
  8987   000C30  51CB               	movf	_time& (0+255),w,b
  8988   000C32  0D0A               	mullw	10
  8989   000C34  CFF3 F00E          	movff	prodl,??_set_time
  8990   000C38  CFF4 F00F          	movff	prodh,??_set_time+1
  8991   000C3C  51CC               	movf	(_time+1)& (0+255),w,b
  8992   000C3E  260E               	addwf	??_set_time^0,f,c
  8993   000C40  0E00               	movlw	0
  8994   000C42  220F               	addwfc	(??_set_time+1)^0,f,c
  8995   000C44  0EF0               	movlw	240
  8996   000C46  240E               	addwf	??_set_time^0,w,c
  8997   000C48  6E59               	movwf	_hour^0,c
  8998   000C4A  0EFD               	movlw	253
  8999   000C4C  200F               	addwfc	(??_set_time+1)^0,w,c
  9000   000C4E  6E5A               	movwf	(_hour+1)^0,c
  9001                           
  9002                           ;main.c: 363:         minute=(time[3]-'0')*10+(time[4]-'0');
  9003   000C50  51CE               	movf	(_time+3)& (0+255),w,b
  9004   000C52  0D0A               	mullw	10
  9005   000C54  CFF3 F00E          	movff	prodl,??_set_time
  9006   000C58  CFF4 F00F          	movff	prodh,??_set_time+1
  9007   000C5C  51CF               	movf	(_time+4)& (0+255),w,b
  9008   000C5E  260E               	addwf	??_set_time^0,f,c
  9009   000C60  0E00               	movlw	0
  9010   000C62  220F               	addwfc	(??_set_time+1)^0,f,c
  9011   000C64  0EF0               	movlw	240
  9012   000C66  240E               	addwf	??_set_time^0,w,c
  9013   000C68  6E54               	movwf	_minute^0,c
  9014   000C6A  0EFD               	movlw	253
  9015   000C6C  200F               	addwfc	(??_set_time+1)^0,w,c
  9016   000C6E  6E55               	movwf	(_minute+1)^0,c
  9017                           
  9018                           ;main.c: 364:         sec=(time[6]-'0')*10+(time[7]-'0');
  9019   000C70  51D1               	movf	(_time+6)& (0+255),w,b
  9020   000C72  0D0A               	mullw	10
  9021   000C74  CFF3 F00E          	movff	prodl,??_set_time
  9022   000C78  CFF4 F00F          	movff	prodh,??_set_time+1
  9023   000C7C  51D2               	movf	(_time+7)& (0+255),w,b
  9024   000C7E  260E               	addwf	??_set_time^0,f,c
  9025   000C80  0E00               	movlw	0
  9026   000C82  220F               	addwfc	(??_set_time+1)^0,f,c
  9027   000C84  0EF0               	movlw	240
  9028   000C86  240E               	addwf	??_set_time^0,w,c
  9029   000C88  6E52               	movwf	_sec^0,c
  9030   000C8A  0EFD               	movlw	253
  9031   000C8C  200F               	addwfc	(??_set_time+1)^0,w,c
  9032   000C8E  6E53               	movwf	(_sec+1)^0,c
  9033   000C90                     
  9034                           ; BSR set to: 0
  9035                           ;main.c: 365:         AM_PM=(time[0] & (1 << 5)) ?1:0;
  9036   000C90  BBCB               	btfsc	_time& (0+255),5,b
  9037   000C92  EF4D  F006         	goto	u3091
  9038   000C96  EF50  F006         	goto	u3090
  9039   000C9A                     u3091:
  9040   000C9A  0E01               	movlw	1
  9041   000C9C  EF51  F006         	goto	u3100
  9042   000CA0                     u3090:
  9043   000CA0  0E00               	movlw	0
  9044   000CA2                     u3100:
  9045   000CA2  6E50               	movwf	_AM_PM^0,c
  9046   000CA4  6A51               	clrf	(_AM_PM+1)^0,c
  9047   000CA6                     
  9048                           ; BSR set to: 0
  9049                           ;main.c: 367:         once=0;
  9050   000CA6  6BEE               	clrf	_once& (0+255),b
  9051   000CA8                     l3555:
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;main.c: 369:         clcd_print(" SET TIME       ",(0x80 + (0)));
  9055   000CA8  0E59               	movlw	low STR_11
  9056   000CAA  6E07               	movwf	clcd_print@data^0,c
  9057   000CAC  0E2F               	movlw	high STR_11
  9058   000CAE  6E08               	movwf	(clcd_print@data+1)^0,c
  9059   000CB0  0E80               	movlw	128
  9060   000CB2  6E09               	movwf	clcd_print@addr^0,c
  9061   000CB4  ECEA  F013         	call	_clcd_print	;wreg free
  9062   000CB8                     
  9063                           ;main.c: 370:         if(change_field==1)
  9064   000CB8  0100               	movlb	0	; () banked
  9065   000CBA  05F0               	decf	_change_field& (0+255),w,b
  9066   000CBC  A4D8               	btfss	status,2,c
  9067   000CBE  EF63  F006         	goto	u3111
  9068   000CC2  EF65  F006         	goto	u3110
  9069   000CC6                     u3111:
  9070   000CC6  EF85  F006         	goto	l3565
  9071   000CCA                     u3110:
  9072   000CCA                     
  9073                           ; BSR set to: 0
  9074                           ;main.c: 371:         {;main.c: 372:           if(key==11)
  9075   000CCA  0E0B               	movlw	11
  9076   000CCC  199F               	xorwf	_key& (0+255),w,b
  9077   000CCE  A4D8               	btfss	status,2,c
  9078   000CD0  EF6C  F006         	goto	u3121
  9079   000CD4  EF6E  F006         	goto	u3120
  9080   000CD8                     u3121:
  9081   000CD8  EFEC  F006         	goto	l3587
  9082   000CDC                     u3120:
  9083   000CDC                     
  9084                           ; BSR set to: 0
  9085                           ;main.c: 373:           {;main.c: 374:           if(hour++>=11)
  9086   000CDC  5059               	movf	_hour^0,w,c
  9087   000CDE  6E0E               	movwf	??_set_time^0,c
  9088   000CE0  505A               	movf	(_hour+1)^0,w,c
  9089   000CE2  6E0F               	movwf	(??_set_time+1)^0,c
  9090   000CE4  4A59               	infsnz	_hour^0,f,c
  9091   000CE6  2A5A               	incf	(_hour+1)^0,f,c
  9092   000CE8  500F               	movf	(??_set_time+1)^0,w,c
  9093   000CEA  E109               	bnz	u3130
  9094   000CEC  0E0B               	movlw	11
  9095   000CEE  5C0E               	subwf	??_set_time^0,w,c
  9096   000CF0  A0D8               	btfss	status,0,c
  9097   000CF2  EF7D  F006         	goto	u3131
  9098   000CF6  EF7F  F006         	goto	u3130
  9099   000CFA                     u3131:
  9100   000CFA  EFEC  F006         	goto	l3587
  9101   000CFE                     u3130:
  9102   000CFE                     
  9103                           ; BSR set to: 0
  9104                           ;main.c: 375:           {;main.c: 376:             hour=0;
  9105   000CFE  0E00               	movlw	0
  9106   000D00  6E5A               	movwf	(_hour+1)^0,c
  9107   000D02  0E00               	movlw	0
  9108   000D04  6E59               	movwf	_hour^0,c
  9109   000D06  EFEC  F006         	goto	l3587
  9110   000D0A                     l3565:
  9111                           
  9112                           ; BSR set to: 0
  9113   000D0A  0E02               	movlw	2
  9114   000D0C  19F0               	xorwf	_change_field& (0+255),w,b
  9115   000D0E  A4D8               	btfss	status,2,c
  9116   000D10  EF8C  F006         	goto	u3141
  9117   000D14  EF8E  F006         	goto	u3140
  9118   000D18                     u3141:
  9119   000D18  EFA9  F006         	goto	l3573
  9120   000D1C                     u3140:
  9121   000D1C                     
  9122                           ; BSR set to: 0
  9123                           ;main.c: 381:       {;main.c: 382:         if(key==11)
  9124   000D1C  0E0B               	movlw	11
  9125   000D1E  199F               	xorwf	_key& (0+255),w,b
  9126   000D20  A4D8               	btfss	status,2,c
  9127   000D22  EF95  F006         	goto	u3151
  9128   000D26  EF97  F006         	goto	u3150
  9129   000D2A                     u3151:
  9130   000D2A  EFEC  F006         	goto	l3587
  9131   000D2E                     u3150:
  9132   000D2E                     
  9133                           ; BSR set to: 0
  9134                           ;main.c: 383:         {;main.c: 384:         if(minute++==59)
  9135   000D2E  4A54               	infsnz	_minute^0,f,c
  9136   000D30  2A55               	incf	(_minute+1)^0,f,c
  9137   000D32  0E3C               	movlw	60
  9138   000D34  1854               	xorwf	_minute^0,w,c
  9139   000D36  1055               	iorwf	(_minute+1)^0,w,c
  9140   000D38  A4D8               	btfss	status,2,c
  9141   000D3A  EFA1  F006         	goto	u3161
  9142   000D3E  EFA3  F006         	goto	u3160
  9143   000D42                     u3161:
  9144   000D42  EFEC  F006         	goto	l3587
  9145   000D46                     u3160:
  9146   000D46                     
  9147                           ; BSR set to: 0
  9148                           ;main.c: 385:         {;main.c: 386:             minute=0;
  9149   000D46  0E00               	movlw	0
  9150   000D48  6E55               	movwf	(_minute+1)^0,c
  9151   000D4A  0E00               	movlw	0
  9152   000D4C  6E54               	movwf	_minute^0,c
  9153   000D4E  EFEC  F006         	goto	l3587
  9154   000D52                     l3573:
  9155                           
  9156                           ; BSR set to: 0
  9157   000D52  0E03               	movlw	3
  9158   000D54  19F0               	xorwf	_change_field& (0+255),w,b
  9159   000D56  A4D8               	btfss	status,2,c
  9160   000D58  EFB0  F006         	goto	u3171
  9161   000D5C  EFB2  F006         	goto	u3170
  9162   000D60                     u3171:
  9163   000D60  EFCD  F006         	goto	l3581
  9164   000D64                     u3170:
  9165   000D64                     
  9166                           ; BSR set to: 0
  9167                           ;main.c: 391:      {;main.c: 392:          if(key==11)
  9168   000D64  0E0B               	movlw	11
  9169   000D66  199F               	xorwf	_key& (0+255),w,b
  9170   000D68  A4D8               	btfss	status,2,c
  9171   000D6A  EFB9  F006         	goto	u3181
  9172   000D6E  EFBB  F006         	goto	u3180
  9173   000D72                     u3181:
  9174   000D72  EFEC  F006         	goto	l3587
  9175   000D76                     u3180:
  9176   000D76                     
  9177                           ; BSR set to: 0
  9178                           ;main.c: 393:         if(sec++==59)
  9179   000D76  4A52               	infsnz	_sec^0,f,c
  9180   000D78  2A53               	incf	(_sec+1)^0,f,c
  9181   000D7A  0E3C               	movlw	60
  9182   000D7C  1852               	xorwf	_sec^0,w,c
  9183   000D7E  1053               	iorwf	(_sec+1)^0,w,c
  9184   000D80  A4D8               	btfss	status,2,c
  9185   000D82  EFC5  F006         	goto	u3191
  9186   000D86  EFC7  F006         	goto	u3190
  9187   000D8A                     u3191:
  9188   000D8A  EFEC  F006         	goto	l3587
  9189   000D8E                     u3190:
  9190   000D8E                     
  9191                           ; BSR set to: 0
  9192                           ;main.c: 394:         {;main.c: 395:             sec=0;
  9193   000D8E  0E00               	movlw	0
  9194   000D90  6E53               	movwf	(_sec+1)^0,c
  9195   000D92  0E00               	movlw	0
  9196   000D94  6E52               	movwf	_sec^0,c
  9197   000D96  EFEC  F006         	goto	l3587
  9198   000D9A                     l3581:
  9199                           
  9200                           ; BSR set to: 0
  9201   000D9A  0E04               	movlw	4
  9202   000D9C  19F0               	xorwf	_change_field& (0+255),w,b
  9203   000D9E  A4D8               	btfss	status,2,c
  9204   000DA0  EFD4  F006         	goto	u3201
  9205   000DA4  EFD6  F006         	goto	u3200
  9206   000DA8                     u3201:
  9207   000DA8  EFEC  F006         	goto	l3587
  9208   000DAC                     u3200:
  9209   000DAC                     
  9210                           ; BSR set to: 0
  9211                           ;main.c: 399:      {;main.c: 400:          if(key==11)
  9212   000DAC  0E0B               	movlw	11
  9213   000DAE  199F               	xorwf	_key& (0+255),w,b
  9214   000DB0  A4D8               	btfss	status,2,c
  9215   000DB2  EFDD  F006         	goto	u3211
  9216   000DB6  EFDF  F006         	goto	u3210
  9217   000DBA                     u3211:
  9218   000DBA  EFEC  F006         	goto	l3587
  9219   000DBE                     u3210:
  9220   000DBE                     
  9221                           ; BSR set to: 0
  9222                           ;main.c: 401:           AM_PM=!AM_PM;
  9223   000DBE  5050               	movf	_AM_PM^0,w,c
  9224   000DC0  1051               	iorwf	(_AM_PM+1)^0,w,c
  9225   000DC2  B4D8               	btfsc	status,2,c
  9226   000DC4  EFE6  F006         	goto	u3221
  9227   000DC8  EFE9  F006         	goto	u3220
  9228   000DCC                     u3221:
  9229   000DCC  0E01               	movlw	1
  9230   000DCE  EFEA  F006         	goto	u3230
  9231   000DD2                     u3220:
  9232   000DD2  0E00               	movlw	0
  9233   000DD4                     u3230:
  9234   000DD4  6E50               	movwf	_AM_PM^0,c
  9235   000DD6  6A51               	clrf	(_AM_PM+1)^0,c
  9236   000DD8                     l3587:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;main.c: 403:     time[0]=hour/10+'0';
  9240   000DD8  C059  F005         	movff	_hour,___lwdiv@dividend
  9241   000DDC  C05A  F006         	movff	_hour+1,___lwdiv@dividend+1
  9242   000DE0  0E00               	movlw	0
  9243   000DE2  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9244   000DE4  0E0A               	movlw	10
  9245   000DE6  6E07               	movwf	___lwdiv@divisor^0,c
  9246   000DE8  EC7A  F013         	call	___lwdiv	;wreg free
  9247   000DEC  5005               	movf	?___lwdiv^0,w,c
  9248   000DEE  0F30               	addlw	48
  9249   000DF0  0100               	movlb	0	; () banked
  9250   000DF2  6FCB               	movwf	_time& (0+255),b
  9251   000DF4                     
  9252                           ; BSR set to: 0
  9253                           ;main.c: 404:     time[1]=hour%10+'0';
  9254   000DF4  C059  F005         	movff	_hour,___lwmod@dividend
  9255   000DF8  C05A  F006         	movff	_hour+1,___lwmod@dividend+1
  9256   000DFC  0E00               	movlw	0
  9257   000DFE  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9258   000E00  0E0A               	movlw	10
  9259   000E02  6E07               	movwf	___lwmod@divisor^0,c
  9260   000E04  EC55  F014         	call	___lwmod	;wreg free
  9261   000E08  5005               	movf	?___lwmod^0,w,c
  9262   000E0A  0F30               	addlw	48
  9263   000E0C  0100               	movlb	0	; () banked
  9264   000E0E  6FCC               	movwf	(_time+1)& (0+255),b
  9265   000E10                     
  9266                           ; BSR set to: 0
  9267                           ;main.c: 405:     time[3]=minute/10+'0';
  9268   000E10  C054  F005         	movff	_minute,___lwdiv@dividend
  9269   000E14  C055  F006         	movff	_minute+1,___lwdiv@dividend+1
  9270   000E18  0E00               	movlw	0
  9271   000E1A  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9272   000E1C  0E0A               	movlw	10
  9273   000E1E  6E07               	movwf	___lwdiv@divisor^0,c
  9274   000E20  EC7A  F013         	call	___lwdiv	;wreg free
  9275   000E24  5005               	movf	?___lwdiv^0,w,c
  9276   000E26  0F30               	addlw	48
  9277   000E28  0100               	movlb	0	; () banked
  9278   000E2A  6FCE               	movwf	(_time+3)& (0+255),b
  9279   000E2C                     
  9280                           ; BSR set to: 0
  9281                           ;main.c: 406:     time[4]=minute%10+'0';
  9282   000E2C  C054  F005         	movff	_minute,___lwmod@dividend
  9283   000E30  C055  F006         	movff	_minute+1,___lwmod@dividend+1
  9284   000E34  0E00               	movlw	0
  9285   000E36  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9286   000E38  0E0A               	movlw	10
  9287   000E3A  6E07               	movwf	___lwmod@divisor^0,c
  9288   000E3C  EC55  F014         	call	___lwmod	;wreg free
  9289   000E40  5005               	movf	?___lwmod^0,w,c
  9290   000E42  0F30               	addlw	48
  9291   000E44  0100               	movlb	0	; () banked
  9292   000E46  6FCF               	movwf	(_time+4)& (0+255),b
  9293   000E48                     
  9294                           ; BSR set to: 0
  9295                           ;main.c: 407:     time[6]=sec/10+'0';
  9296   000E48  C052  F005         	movff	_sec,___lwdiv@dividend
  9297   000E4C  C053  F006         	movff	_sec+1,___lwdiv@dividend+1
  9298   000E50  0E00               	movlw	0
  9299   000E52  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9300   000E54  0E0A               	movlw	10
  9301   000E56  6E07               	movwf	___lwdiv@divisor^0,c
  9302   000E58  EC7A  F013         	call	___lwdiv	;wreg free
  9303   000E5C  5005               	movf	?___lwdiv^0,w,c
  9304   000E5E  0F30               	addlw	48
  9305   000E60  0100               	movlb	0	; () banked
  9306   000E62  6FD1               	movwf	(_time+6)& (0+255),b
  9307   000E64                     
  9308                           ; BSR set to: 0
  9309                           ;main.c: 408:     time[7]=sec%10+'0';
  9310   000E64  C052  F005         	movff	_sec,___lwmod@dividend
  9311   000E68  C053  F006         	movff	_sec+1,___lwmod@dividend+1
  9312   000E6C  0E00               	movlw	0
  9313   000E6E  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9314   000E70  0E0A               	movlw	10
  9315   000E72  6E07               	movwf	___lwmod@divisor^0,c
  9316   000E74  EC55  F014         	call	___lwmod	;wreg free
  9317   000E78  5005               	movf	?___lwmod^0,w,c
  9318   000E7A  0F30               	addlw	48
  9319   000E7C  0100               	movlb	0	; () banked
  9320   000E7E  6FD2               	movwf	(_time+7)& (0+255),b
  9321                           
  9322                           ;main.c: 409:     if(key==2)
  9323   000E80  0E02               	movlw	2
  9324   000E82  199F               	xorwf	_key& (0+255),w,b
  9325   000E84  A4D8               	btfss	status,2,c
  9326   000E86  EF47  F007         	goto	u3241
  9327   000E8A  EF49  F007         	goto	u3240
  9328   000E8E                     u3241:
  9329   000E8E  EFDB  F007         	goto	l3615
  9330   000E92                     u3240:
  9331   000E92                     
  9332                           ; BSR set to: 0
  9333                           ;main.c: 410:     {;main.c: 411:         if(AM_PM)
  9334   000E92  5050               	movf	_AM_PM^0,w,c
  9335   000E94  1051               	iorwf	(_AM_PM+1)^0,w,c
  9336   000E96  B4D8               	btfsc	status,2,c
  9337   000E98  EF50  F007         	goto	u3251
  9338   000E9C  EF52  F007         	goto	u3250
  9339   000EA0                     u3251:
  9340   000EA0  EF74  F007         	goto	l3603
  9341   000EA4                     u3250:
  9342   000EA4                     
  9343                           ; BSR set to: 0
  9344                           ;main.c: 412:         {;main.c: 413:         write_ds1307(0x02,((0x00<<5)|((0x01)<<6)|(h
      +                          our/10)<<4)|(hour%10));
  9345   000EA4  C059  F005         	movff	_hour,___lwmod@dividend
  9346   000EA8  C05A  F006         	movff	_hour+1,___lwmod@dividend+1
  9347   000EAC  0E00               	movlw	0
  9348   000EAE  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9349   000EB0  0E0A               	movlw	10
  9350   000EB2  6E07               	movwf	___lwmod@divisor^0,c
  9351   000EB4  EC55  F014         	call	___lwmod	;wreg free
  9352   000EB8  C005  F00E         	movff	?___lwmod,??_set_time
  9353   000EBC  C006  F00F         	movff	?___lwmod+1,??_set_time+1
  9354   000EC0  C059  F005         	movff	_hour,___lwdiv@dividend
  9355   000EC4  C05A  F006         	movff	_hour+1,___lwdiv@dividend+1
  9356   000EC8  0E00               	movlw	0
  9357   000ECA  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9358   000ECC  0E0A               	movlw	10
  9359   000ECE  6E07               	movwf	___lwdiv@divisor^0,c
  9360   000ED0  EC7A  F013         	call	___lwdiv	;wreg free
  9361   000ED4  3805               	swapf	?___lwdiv^0,w,c
  9362   000ED6  0BF0               	andlw	240
  9363   000ED8  100E               	iorwf	??_set_time^0,w,c
  9364   000EDA  0940               	iorlw	64
  9365   000EDC  6E0C               	movwf	write_ds1307@data^0,c
  9366   000EDE  0E02               	movlw	2
  9367   000EE0  ECC2  F015         	call	_write_ds1307
  9368                           
  9369                           ;main.c: 414:         }
  9370   000EE4  EF94  F007         	goto	l419
  9371   000EE8                     l3603:
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;main.c: 416:         {;main.c: 417:            write_ds1307(0x02,((0x01<<5)|((0x01)<<6)
      +                          |(hour/10)<<4)|(hour%10));
  9375   000EE8  C059  F005         	movff	_hour,___lwmod@dividend
  9376   000EEC  C05A  F006         	movff	_hour+1,___lwmod@dividend+1
  9377   000EF0  0E00               	movlw	0
  9378   000EF2  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9379   000EF4  0E0A               	movlw	10
  9380   000EF6  6E07               	movwf	___lwmod@divisor^0,c
  9381   000EF8  EC55  F014         	call	___lwmod	;wreg free
  9382   000EFC  C005  F00E         	movff	?___lwmod,??_set_time
  9383   000F00  C006  F00F         	movff	?___lwmod+1,??_set_time+1
  9384   000F04  C059  F005         	movff	_hour,___lwdiv@dividend
  9385   000F08  C05A  F006         	movff	_hour+1,___lwdiv@dividend+1
  9386   000F0C  0E00               	movlw	0
  9387   000F0E  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9388   000F10  0E0A               	movlw	10
  9389   000F12  6E07               	movwf	___lwdiv@divisor^0,c
  9390   000F14  EC7A  F013         	call	___lwdiv	;wreg free
  9391   000F18  3805               	swapf	?___lwdiv^0,w,c
  9392   000F1A  0BF0               	andlw	240
  9393   000F1C  100E               	iorwf	??_set_time^0,w,c
  9394   000F1E  0960               	iorlw	96
  9395   000F20  6E0C               	movwf	write_ds1307@data^0,c
  9396   000F22  0E02               	movlw	2
  9397   000F24  ECC2  F015         	call	_write_ds1307
  9398   000F28                     l419:
  9399                           
  9400                           ;main.c: 419:         write_ds1307(0x01,((minute/10)<<4)|(minute%10));
  9401   000F28  C054  F005         	movff	_minute,___lwmod@dividend
  9402   000F2C  C055  F006         	movff	_minute+1,___lwmod@dividend+1
  9403   000F30  0E00               	movlw	0
  9404   000F32  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9405   000F34  0E0A               	movlw	10
  9406   000F36  6E07               	movwf	___lwmod@divisor^0,c
  9407   000F38  EC55  F014         	call	___lwmod	;wreg free
  9408   000F3C  C005  F00E         	movff	?___lwmod,??_set_time
  9409   000F40  C006  F00F         	movff	?___lwmod+1,??_set_time+1
  9410   000F44  C054  F005         	movff	_minute,___lwdiv@dividend
  9411   000F48  C055  F006         	movff	_minute+1,___lwdiv@dividend+1
  9412   000F4C  0E00               	movlw	0
  9413   000F4E  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9414   000F50  0E0A               	movlw	10
  9415   000F52  6E07               	movwf	___lwdiv@divisor^0,c
  9416   000F54  EC7A  F013         	call	___lwdiv	;wreg free
  9417   000F58  3805               	swapf	?___lwdiv^0,w,c
  9418   000F5A  0BF0               	andlw	240
  9419   000F5C  100E               	iorwf	??_set_time^0,w,c
  9420   000F5E  6E0C               	movwf	write_ds1307@data^0,c
  9421   000F60  0E01               	movlw	1
  9422   000F62  ECC2  F015         	call	_write_ds1307
  9423                           
  9424                           ;main.c: 420:         write_ds1307(0x00,((sec/10)<<4)|(sec%10));
  9425   000F66  C052  F005         	movff	_sec,___lwmod@dividend
  9426   000F6A  C053  F006         	movff	_sec+1,___lwmod@dividend+1
  9427   000F6E  0E00               	movlw	0
  9428   000F70  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9429   000F72  0E0A               	movlw	10
  9430   000F74  6E07               	movwf	___lwmod@divisor^0,c
  9431   000F76  EC55  F014         	call	___lwmod	;wreg free
  9432   000F7A  C005  F00E         	movff	?___lwmod,??_set_time
  9433   000F7E  C006  F00F         	movff	?___lwmod+1,??_set_time+1
  9434   000F82  C052  F005         	movff	_sec,___lwdiv@dividend
  9435   000F86  C053  F006         	movff	_sec+1,___lwdiv@dividend+1
  9436   000F8A  0E00               	movlw	0
  9437   000F8C  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9438   000F8E  0E0A               	movlw	10
  9439   000F90  6E07               	movwf	___lwdiv@divisor^0,c
  9440   000F92  EC7A  F013         	call	___lwdiv	;wreg free
  9441   000F96  3805               	swapf	?___lwdiv^0,w,c
  9442   000F98  0BF0               	andlw	240
  9443   000F9A  100E               	iorwf	??_set_time^0,w,c
  9444   000F9C  6E0C               	movwf	write_ds1307@data^0,c
  9445   000F9E  0E00               	movlw	0
  9446   000FA0  ECC2  F015         	call	_write_ds1307
  9447   000FA4                     
  9448                           ;main.c: 424:          f=0;
  9449   000FA4  0100               	movlb	0	; () banked
  9450   000FA6  6B9E               	clrf	_f& (0+255),b
  9451   000FA8                     
  9452                           ; BSR set to: 0
  9453                           ;main.c: 425:         flag=0;
  9454   000FA8  6BA0               	clrf	_flag& (0+255),b
  9455   000FAA                     
  9456                           ; BSR set to: 0
  9457                           ;main.c: 426:         stop=0;
  9458   000FAA  0E00               	movlw	0
  9459   000FAC  6F84               	movwf	(_stop+1)& (0+255),b
  9460   000FAE  0E00               	movlw	0
  9461   000FB0  6F83               	movwf	_stop& (0+255),b
  9462   000FB2                     
  9463                           ; BSR set to: 0
  9464                           ;main.c: 427:         GIE=1;
  9465   000FB2  8EF2               	bsf	4082,7,c	;volatile
  9466   000FB4                     
  9467                           ; BSR set to: 0
  9468                           ;main.c: 428:         PEIE=1;
  9469   000FB4  8CF2               	bsf	4082,6,c	;volatile
  9470   000FB6                     l3615:
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;main.c: 431:     clcd_print(time,(0xC0 + (0)));
  9474   000FB6  0ECB               	movlw	low _time
  9475   000FB8  6E07               	movwf	clcd_print@data^0,c
  9476   000FBA  6A08               	clrf	(clcd_print@data+1)^0,c
  9477   000FBC  0EC0               	movlw	192
  9478   000FBE  6E09               	movwf	clcd_print@addr^0,c
  9479   000FC0  ECEA  F013         	call	_clcd_print	;wreg free
  9480   000FC4                     
  9481                           ;main.c: 432:     clcd_print("      ",(0xC0 + (8)));
  9482   000FC4  0E63               	movlw	low (STR_11+10)
  9483   000FC6  6E07               	movwf	clcd_print@data^0,c
  9484   000FC8  0E2F               	movlw	high (STR_11+10)
  9485   000FCA  6E08               	movwf	(clcd_print@data+1)^0,c
  9486   000FCC  0EC8               	movlw	200
  9487   000FCE  6E09               	movwf	clcd_print@addr^0,c
  9488   000FD0  ECEA  F013         	call	_clcd_print	;wreg free
  9489   000FD4                     
  9490                           ;main.c: 433:     if(AM_PM)
  9491   000FD4  5050               	movf	_AM_PM^0,w,c
  9492   000FD6  1051               	iorwf	(_AM_PM+1)^0,w,c
  9493   000FD8  B4D8               	btfsc	status,2,c
  9494   000FDA  EFF1  F007         	goto	u3261
  9495   000FDE  EFF3  F007         	goto	u3260
  9496   000FE2                     u3261:
  9497   000FE2  EFFD  F007         	goto	l3623
  9498   000FE6                     u3260:
  9499   000FE6                     
  9500                           ;main.c: 434:     {;main.c: 435:        clcd_print("AM",(0xC0 + (14)));
  9501   000FE6  0EF8               	movlw	low STR_4
  9502   000FE8  6E07               	movwf	clcd_print@data^0,c
  9503   000FEA  0E2F               	movlw	high STR_4
  9504   000FEC  6E08               	movwf	(clcd_print@data+1)^0,c
  9505   000FEE  0ECE               	movlw	206
  9506   000FF0  6E09               	movwf	clcd_print@addr^0,c
  9507   000FF2  ECEA  F013         	call	_clcd_print	;wreg free
  9508                           
  9509                           ;main.c: 436:     }
  9510   000FF6  EF05  F008         	goto	l422
  9511   000FFA                     l3623:
  9512                           
  9513                           ;main.c: 438:     {;main.c: 439:         clcd_print("PM",(0xC0 + (14)));
  9514   000FFA  0EFB               	movlw	low STR_3
  9515   000FFC  6E07               	movwf	clcd_print@data^0,c
  9516   000FFE  0E2F               	movlw	high STR_3
  9517   001000  6E08               	movwf	(clcd_print@data+1)^0,c
  9518   001002  0ECE               	movlw	206
  9519   001004  6E09               	movwf	clcd_print@addr^0,c
  9520   001006  ECEA  F013         	call	_clcd_print	;wreg free
  9521   00100A                     l422:
  9522   00100A  0012               	return		;funcret
  9523   00100C                     __end_of_set_time:
  9524                           	callstack 0
  9525                           
  9526 ;; *************** function _set_date *****************
  9527 ;; Defined at:
  9528 ;;		line 444 in file "main.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;		None
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9542 ;;      Params:         0       0       0       0       0       0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0
  9544 ;;      Temps:          2       0       0       0       0       0       0
  9545 ;;      Totals:         2       0       0       0       0       0       0
  9546 ;;Total ram usage:        2 bytes
  9547 ;; Hardware stack levels used: 1
  9548 ;; Hardware stack levels required when called: 4
  9549 ;; This function calls:
  9550 ;;		___lwdiv
  9551 ;;		___lwmod
  9552 ;;		_clcd_print
  9553 ;;		_write_ds1307
  9554 ;; This function is called by:
  9555 ;;		_GOTO_SET_TIMEDATA
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text29
  9560   00100C                     __ptext29:
  9561                           	callstack 0
  9562   00100C                     _set_date:
  9563                           	callstack 25
  9564   00100C                     
  9565                           ;main.c: 446:     if(f==2)
  9566   00100C  0E02               	movlw	2
  9567   00100E  0100               	movlb	0	; () banked
  9568   001010  199E               	xorwf	_f& (0+255),w,b
  9569   001012  A4D8               	btfss	status,2,c
  9570   001014  EF0E  F008         	goto	u3271
  9571   001018  EF10  F008         	goto	u3270
  9572   00101C                     u3271:
  9573   00101C  EF05  F00A         	goto	l443
  9574   001020                     u3270:
  9575   001020                     
  9576                           ; BSR set to: 0
  9577                           ;main.c: 447:     {;main.c: 448:         if(once)
  9578   001020  51EE               	movf	_once& (0+255),w,b
  9579   001022  B4D8               	btfsc	status,2,c
  9580   001024  EF16  F008         	goto	u3281
  9581   001028  EF18  F008         	goto	u3280
  9582   00102C                     u3281:
  9583   00102C  EF59  F008         	goto	l3633
  9584   001030                     u3280:
  9585   001030                     
  9586                           ; BSR set to: 0
  9587                           ;main.c: 449:         {;main.c: 450:             year=(date[8]-'0')*10+(date[9]-'0');
  9588   001030  51B9               	movf	(_date+8)& (0+255),w,b
  9589   001032  0D0A               	mullw	10
  9590   001034  CFF3 F00E          	movff	prodl,??_set_date
  9591   001038  CFF4 F00F          	movff	prodh,??_set_date+1
  9592   00103C  51BA               	movf	(_date+9)& (0+255),w,b
  9593   00103E  260E               	addwf	??_set_date^0,f,c
  9594   001040  0E00               	movlw	0
  9595   001042  220F               	addwfc	(??_set_date+1)^0,f,c
  9596   001044  0EF0               	movlw	240
  9597   001046  240E               	addwf	??_set_date^0,w,c
  9598   001048  6E4E               	movwf	_year^0,c
  9599   00104A  0EFD               	movlw	253
  9600   00104C  200F               	addwfc	(??_set_date+1)^0,w,c
  9601   00104E  6E4F               	movwf	(_year+1)^0,c
  9602                           
  9603                           ;main.c: 451:             month=(date[3]-'0')*10+(date[4]-'0');
  9604   001050  51B4               	movf	(_date+3)& (0+255),w,b
  9605   001052  0D0A               	mullw	10
  9606   001054  CFF3 F00E          	movff	prodl,??_set_date
  9607   001058  CFF4 F00F          	movff	prodh,??_set_date+1
  9608   00105C  51B5               	movf	(_date+4)& (0+255),w,b
  9609   00105E  260E               	addwf	??_set_date^0,f,c
  9610   001060  0E00               	movlw	0
  9611   001062  220F               	addwfc	(??_set_date+1)^0,f,c
  9612   001064  0EF0               	movlw	240
  9613   001066  240E               	addwf	??_set_date^0,w,c
  9614   001068  6E4C               	movwf	_month^0,c
  9615   00106A  0EFD               	movlw	253
  9616   00106C  200F               	addwfc	(??_set_date+1)^0,w,c
  9617   00106E  6E4D               	movwf	(_month+1)^0,c
  9618                           
  9619                           ;main.c: 452:             DATE=(date[0]-'0')*10+(date[1]-'0');
  9620   001070  51B1               	movf	_date& (0+255),w,b
  9621   001072  0D0A               	mullw	10
  9622   001074  CFF3 F00E          	movff	prodl,??_set_date
  9623   001078  CFF4 F00F          	movff	prodh,??_set_date+1
  9624   00107C  51B2               	movf	(_date+1)& (0+255),w,b
  9625   00107E  260E               	addwf	??_set_date^0,f,c
  9626   001080  0E00               	movlw	0
  9627   001082  220F               	addwfc	(??_set_date+1)^0,f,c
  9628   001084  0EF0               	movlw	240
  9629   001086  240E               	addwf	??_set_date^0,w,c
  9630   001088  6F91               	movwf	_DATE& (0+255),b
  9631   00108A  0EFD               	movlw	253
  9632   00108C  200F               	addwfc	(??_set_date+1)^0,w,c
  9633   00108E  6F92               	movwf	(_DATE+1)& (0+255),b
  9634                           
  9635                           ;main.c: 453:             day=(date[10]-'0')*10+(date[11]-'0');
  9636   001090  51BB               	movf	(_date+10)& (0+255),w,b
  9637   001092  0D0A               	mullw	10
  9638   001094  CFF3 F00E          	movff	prodl,??_set_date
  9639   001098  CFF4 F00F          	movff	prodh,??_set_date+1
  9640   00109C  51BC               	movf	(_date+11)& (0+255),w,b
  9641   00109E  260E               	addwf	??_set_date^0,f,c
  9642   0010A0  0E00               	movlw	0
  9643   0010A2  220F               	addwfc	(??_set_date+1)^0,f,c
  9644   0010A4  0EF0               	movlw	240
  9645   0010A6  240E               	addwf	??_set_date^0,w,c
  9646   0010A8  6E4A               	movwf	_day^0,c
  9647   0010AA  0EFD               	movlw	253
  9648   0010AC  200F               	addwfc	(??_set_date+1)^0,w,c
  9649   0010AE  6E4B               	movwf	(_day+1)^0,c
  9650   0010B0                     
  9651                           ; BSR set to: 0
  9652                           ;main.c: 454:             once=0;
  9653   0010B0  6BEE               	clrf	_once& (0+255),b
  9654   0010B2                     l3633:
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;main.c: 456:          clcd_print(" SET DATE       ",(0x80 + (0)));
  9658   0010B2  0E6A               	movlw	low STR_15
  9659   0010B4  6E07               	movwf	clcd_print@data^0,c
  9660   0010B6  0E2F               	movlw	high STR_15
  9661   0010B8  6E08               	movwf	(clcd_print@data+1)^0,c
  9662   0010BA  0E80               	movlw	128
  9663   0010BC  6E09               	movwf	clcd_print@addr^0,c
  9664   0010BE  ECEA  F013         	call	_clcd_print	;wreg free
  9665   0010C2                     
  9666                           ;main.c: 457:          if(change_field==1)
  9667   0010C2  0100               	movlb	0	; () banked
  9668   0010C4  05F0               	decf	_change_field& (0+255),w,b
  9669   0010C6  A4D8               	btfss	status,2,c
  9670   0010C8  EF68  F008         	goto	u3291
  9671   0010CC  EF6A  F008         	goto	u3290
  9672   0010D0                     u3291:
  9673   0010D0  EF85  F008         	goto	l3643
  9674   0010D4                     u3290:
  9675   0010D4                     
  9676                           ; BSR set to: 0
  9677                           ;main.c: 458:          {;main.c: 459:              if(key==11)
  9678   0010D4  0E0B               	movlw	11
  9679   0010D6  199F               	xorwf	_key& (0+255),w,b
  9680   0010D8  A4D8               	btfss	status,2,c
  9681   0010DA  EF71  F008         	goto	u3301
  9682   0010DE  EF73  F008         	goto	u3300
  9683   0010E2                     u3301:
  9684   0010E2  EFEF  F008         	goto	l3667
  9685   0010E6                     u3300:
  9686   0010E6                     
  9687                           ; BSR set to: 0
  9688                           ;main.c: 460:              {;main.c: 461:                  if(year++==99)
  9689   0010E6  4A4E               	infsnz	_year^0,f,c
  9690   0010E8  2A4F               	incf	(_year+1)^0,f,c
  9691   0010EA  0E64               	movlw	100
  9692   0010EC  184E               	xorwf	_year^0,w,c
  9693   0010EE  104F               	iorwf	(_year+1)^0,w,c
  9694   0010F0  A4D8               	btfss	status,2,c
  9695   0010F2  EF7D  F008         	goto	u3311
  9696   0010F6  EF7F  F008         	goto	u3310
  9697   0010FA                     u3311:
  9698   0010FA  EFEF  F008         	goto	l3667
  9699   0010FE                     u3310:
  9700   0010FE                     
  9701                           ; BSR set to: 0
  9702                           ;main.c: 462:                  {;main.c: 463:                      year=0;
  9703   0010FE  0E00               	movlw	0
  9704   001100  6E4F               	movwf	(_year+1)^0,c
  9705   001102  0E00               	movlw	0
  9706   001104  6E4E               	movwf	_year^0,c
  9707   001106  EFEF  F008         	goto	l3667
  9708   00110A                     l3643:
  9709                           
  9710                           ; BSR set to: 0
  9711   00110A  0E02               	movlw	2
  9712   00110C  19F0               	xorwf	_change_field& (0+255),w,b
  9713   00110E  A4D8               	btfss	status,2,c
  9714   001110  EF8C  F008         	goto	u3321
  9715   001114  EF8E  F008         	goto	u3320
  9716   001118                     u3321:
  9717   001118  EFA9  F008         	goto	l3651
  9718   00111C                     u3320:
  9719   00111C                     
  9720                           ; BSR set to: 0
  9721                           ;main.c: 468:          {;main.c: 469:              if(key==11)
  9722   00111C  0E0B               	movlw	11
  9723   00111E  199F               	xorwf	_key& (0+255),w,b
  9724   001120  A4D8               	btfss	status,2,c
  9725   001122  EF95  F008         	goto	u3331
  9726   001126  EF97  F008         	goto	u3330
  9727   00112A                     u3331:
  9728   00112A  EFEF  F008         	goto	l3667
  9729   00112E                     u3330:
  9730   00112E                     
  9731                           ; BSR set to: 0
  9732                           ;main.c: 470:              {;main.c: 471:                  if(month++==11)
  9733   00112E  4A4C               	infsnz	_month^0,f,c
  9734   001130  2A4D               	incf	(_month+1)^0,f,c
  9735   001132  0E0C               	movlw	12
  9736   001134  184C               	xorwf	_month^0,w,c
  9737   001136  104D               	iorwf	(_month+1)^0,w,c
  9738   001138  A4D8               	btfss	status,2,c
  9739   00113A  EFA1  F008         	goto	u3341
  9740   00113E  EFA3  F008         	goto	u3340
  9741   001142                     u3341:
  9742   001142  EFEF  F008         	goto	l3667
  9743   001146                     u3340:
  9744   001146                     
  9745                           ; BSR set to: 0
  9746                           ;main.c: 472:                  {;main.c: 473:                      month=0;
  9747   001146  0E00               	movlw	0
  9748   001148  6E4D               	movwf	(_month+1)^0,c
  9749   00114A  0E00               	movlw	0
  9750   00114C  6E4C               	movwf	_month^0,c
  9751   00114E  EFEF  F008         	goto	l3667
  9752   001152                     l3651:
  9753                           
  9754                           ; BSR set to: 0
  9755   001152  0E03               	movlw	3
  9756   001154  19F0               	xorwf	_change_field& (0+255),w,b
  9757   001156  A4D8               	btfss	status,2,c
  9758   001158  EFB0  F008         	goto	u3351
  9759   00115C  EFB2  F008         	goto	u3350
  9760   001160                     u3351:
  9761   001160  EFCD  F008         	goto	l3659
  9762   001164                     u3350:
  9763   001164                     
  9764                           ; BSR set to: 0
  9765                           ;main.c: 478:          {;main.c: 479:              if(key==11)
  9766   001164  0E0B               	movlw	11
  9767   001166  199F               	xorwf	_key& (0+255),w,b
  9768   001168  A4D8               	btfss	status,2,c
  9769   00116A  EFB9  F008         	goto	u3361
  9770   00116E  EFBB  F008         	goto	u3360
  9771   001172                     u3361:
  9772   001172  EFEF  F008         	goto	l3667
  9773   001176                     u3360:
  9774   001176                     
  9775                           ; BSR set to: 0
  9776                           ;main.c: 480:              {;main.c: 481:                  if(DATE++==30)
  9777   001176  4B91               	infsnz	_DATE& (0+255),f,b
  9778   001178  2B92               	incf	(_DATE+1)& (0+255),f,b
  9779   00117A  0E1F               	movlw	31
  9780   00117C  1991               	xorwf	_DATE& (0+255),w,b
  9781   00117E  1192               	iorwf	(_DATE+1)& (0+255),w,b
  9782   001180  A4D8               	btfss	status,2,c
  9783   001182  EFC5  F008         	goto	u3371
  9784   001186  EFC7  F008         	goto	u3370
  9785   00118A                     u3371:
  9786   00118A  EFEF  F008         	goto	l3667
  9787   00118E                     u3370:
  9788   00118E                     
  9789                           ; BSR set to: 0
  9790                           ;main.c: 482:                  {;main.c: 483:                      DATE=0;
  9791   00118E  0E00               	movlw	0
  9792   001190  6F92               	movwf	(_DATE+1)& (0+255),b
  9793   001192  0E00               	movlw	0
  9794   001194  6F91               	movwf	_DATE& (0+255),b
  9795   001196  EFEF  F008         	goto	l3667
  9796   00119A                     l3659:
  9797                           
  9798                           ; BSR set to: 0
  9799   00119A  0E04               	movlw	4
  9800   00119C  19F0               	xorwf	_change_field& (0+255),w,b
  9801   00119E  A4D8               	btfss	status,2,c
  9802   0011A0  EFD4  F008         	goto	u3381
  9803   0011A4  EFD6  F008         	goto	u3380
  9804   0011A8                     u3381:
  9805   0011A8  EFEF  F008         	goto	l3667
  9806   0011AC                     u3380:
  9807   0011AC                     
  9808                           ; BSR set to: 0
  9809                           ;main.c: 488:          {;main.c: 489:              if(key==11)
  9810   0011AC  0E0B               	movlw	11
  9811   0011AE  199F               	xorwf	_key& (0+255),w,b
  9812   0011B0  A4D8               	btfss	status,2,c
  9813   0011B2  EFDD  F008         	goto	u3391
  9814   0011B6  EFDF  F008         	goto	u3390
  9815   0011BA                     u3391:
  9816   0011BA  EFEF  F008         	goto	l3667
  9817   0011BE                     u3390:
  9818   0011BE                     
  9819                           ; BSR set to: 0
  9820                           ;main.c: 490:              {;main.c: 491:                  if(day++==7)
  9821   0011BE  4A4A               	infsnz	_day^0,f,c
  9822   0011C0  2A4B               	incf	(_day+1)^0,f,c
  9823   0011C2  0E08               	movlw	8
  9824   0011C4  184A               	xorwf	_day^0,w,c
  9825   0011C6  104B               	iorwf	(_day+1)^0,w,c
  9826   0011C8  A4D8               	btfss	status,2,c
  9827   0011CA  EFE9  F008         	goto	u3401
  9828   0011CE  EFEB  F008         	goto	u3400
  9829   0011D2                     u3401:
  9830   0011D2  EFEF  F008         	goto	l3667
  9831   0011D6                     u3400:
  9832   0011D6                     
  9833                           ; BSR set to: 0
  9834                           ;main.c: 492:                  {;main.c: 493:                      day=0;
  9835   0011D6  0E00               	movlw	0
  9836   0011D8  6E4B               	movwf	(_day+1)^0,c
  9837   0011DA  0E00               	movlw	0
  9838   0011DC  6E4A               	movwf	_day^0,c
  9839   0011DE                     l3667:
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;main.c: 498:       date[0] = '0' + DATE/10;
  9843   0011DE  C091  F005         	movff	_DATE,___lwdiv@dividend
  9844   0011E2  C092  F006         	movff	_DATE+1,___lwdiv@dividend+1
  9845   0011E6  0E00               	movlw	0
  9846   0011E8  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9847   0011EA  0E0A               	movlw	10
  9848   0011EC  6E07               	movwf	___lwdiv@divisor^0,c
  9849   0011EE  EC7A  F013         	call	___lwdiv	;wreg free
  9850   0011F2  5005               	movf	?___lwdiv^0,w,c
  9851   0011F4  0F30               	addlw	48
  9852   0011F6  0100               	movlb	0	; () banked
  9853   0011F8  6FB1               	movwf	_date& (0+255),b
  9854   0011FA                     
  9855                           ; BSR set to: 0
  9856                           ;main.c: 499:    date[1] = '0' + DATE%10;
  9857   0011FA  C091  F005         	movff	_DATE,___lwmod@dividend
  9858   0011FE  C092  F006         	movff	_DATE+1,___lwmod@dividend+1
  9859   001202  0E00               	movlw	0
  9860   001204  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9861   001206  0E0A               	movlw	10
  9862   001208  6E07               	movwf	___lwmod@divisor^0,c
  9863   00120A  EC55  F014         	call	___lwmod	;wreg free
  9864   00120E  5005               	movf	?___lwmod^0,w,c
  9865   001210  0F30               	addlw	48
  9866   001212  0100               	movlb	0	; () banked
  9867   001214  6FB2               	movwf	(_date+1)& (0+255),b
  9868                           
  9869                           ;main.c: 500:    date[2] = '-';
  9870   001216  0E2D               	movlw	45
  9871   001218  6FB3               	movwf	(_date+2)& (0+255),b
  9872   00121A                     
  9873                           ; BSR set to: 0
  9874                           ;main.c: 501:    date[3] = '0' + month/10;
  9875   00121A  C04C  F005         	movff	_month,___lwdiv@dividend
  9876   00121E  C04D  F006         	movff	_month+1,___lwdiv@dividend+1
  9877   001222  0E00               	movlw	0
  9878   001224  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9879   001226  0E0A               	movlw	10
  9880   001228  6E07               	movwf	___lwdiv@divisor^0,c
  9881   00122A  EC7A  F013         	call	___lwdiv	;wreg free
  9882   00122E  5005               	movf	?___lwdiv^0,w,c
  9883   001230  0F30               	addlw	48
  9884   001232  0100               	movlb	0	; () banked
  9885   001234  6FB4               	movwf	(_date+3)& (0+255),b
  9886   001236                     
  9887                           ; BSR set to: 0
  9888                           ;main.c: 502:    date[4] = '0' + month%10;
  9889   001236  C04C  F005         	movff	_month,___lwmod@dividend
  9890   00123A  C04D  F006         	movff	_month+1,___lwmod@dividend+1
  9891   00123E  0E00               	movlw	0
  9892   001240  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9893   001242  0E0A               	movlw	10
  9894   001244  6E07               	movwf	___lwmod@divisor^0,c
  9895   001246  EC55  F014         	call	___lwmod	;wreg free
  9896   00124A  5005               	movf	?___lwmod^0,w,c
  9897   00124C  0F30               	addlw	48
  9898   00124E  0100               	movlb	0	; () banked
  9899   001250  6FB5               	movwf	(_date+4)& (0+255),b
  9900                           
  9901                           ;main.c: 503:    date[5] = '-';
  9902   001252  0E2D               	movlw	45
  9903   001254  6FB6               	movwf	(_date+5)& (0+255),b
  9904                           
  9905                           ;main.c: 504:       date[6] = '2';
  9906   001256  0E32               	movlw	50
  9907   001258  6FB7               	movwf	(_date+6)& (0+255),b
  9908                           
  9909                           ;main.c: 505:    date[7] = '0';
  9910   00125A  0E30               	movlw	48
  9911   00125C  6FB8               	movwf	(_date+7)& (0+255),b
  9912   00125E                     
  9913                           ; BSR set to: 0
  9914                           ;main.c: 506:    date[8] = '0' + year/10;
  9915   00125E  C04E  F005         	movff	_year,___lwdiv@dividend
  9916   001262  C04F  F006         	movff	_year+1,___lwdiv@dividend+1
  9917   001266  0E00               	movlw	0
  9918   001268  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9919   00126A  0E0A               	movlw	10
  9920   00126C  6E07               	movwf	___lwdiv@divisor^0,c
  9921   00126E  EC7A  F013         	call	___lwdiv	;wreg free
  9922   001272  5005               	movf	?___lwdiv^0,w,c
  9923   001274  0F30               	addlw	48
  9924   001276  0100               	movlb	0	; () banked
  9925   001278  6FB9               	movwf	(_date+8)& (0+255),b
  9926   00127A                     
  9927                           ; BSR set to: 0
  9928                           ;main.c: 507:    date[9] = '0' + year%10;
  9929   00127A  C04E  F005         	movff	_year,___lwmod@dividend
  9930   00127E  C04F  F006         	movff	_year+1,___lwmod@dividend+1
  9931   001282  0E00               	movlw	0
  9932   001284  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9933   001286  0E0A               	movlw	10
  9934   001288  6E07               	movwf	___lwmod@divisor^0,c
  9935   00128A  EC55  F014         	call	___lwmod	;wreg free
  9936   00128E  5005               	movf	?___lwmod^0,w,c
  9937   001290  0F30               	addlw	48
  9938   001292  0100               	movlb	0	; () banked
  9939   001294  6FBA               	movwf	(_date+9)& (0+255),b
  9940   001296                     
  9941                           ; BSR set to: 0
  9942                           ;main.c: 508:       date[10]='0'+ day/10;
  9943   001296  C04A  F005         	movff	_day,___lwdiv@dividend
  9944   00129A  C04B  F006         	movff	_day+1,___lwdiv@dividend+1
  9945   00129E  0E00               	movlw	0
  9946   0012A0  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9947   0012A2  0E0A               	movlw	10
  9948   0012A4  6E07               	movwf	___lwdiv@divisor^0,c
  9949   0012A6  EC7A  F013         	call	___lwdiv	;wreg free
  9950   0012AA  5005               	movf	?___lwdiv^0,w,c
  9951   0012AC  0F30               	addlw	48
  9952   0012AE  0100               	movlb	0	; () banked
  9953   0012B0  6FBB               	movwf	(_date+10)& (0+255),b
  9954   0012B2                     
  9955                           ; BSR set to: 0
  9956                           ;main.c: 509:       date[11]='0'+ day%10;
  9957   0012B2  C04A  F005         	movff	_day,___lwmod@dividend
  9958   0012B6  C04B  F006         	movff	_day+1,___lwmod@dividend+1
  9959   0012BA  0E00               	movlw	0
  9960   0012BC  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9961   0012BE  0E0A               	movlw	10
  9962   0012C0  6E07               	movwf	___lwmod@divisor^0,c
  9963   0012C2  EC55  F014         	call	___lwmod	;wreg free
  9964   0012C6  5005               	movf	?___lwmod^0,w,c
  9965   0012C8  0F30               	addlw	48
  9966   0012CA  0100               	movlb	0	; () banked
  9967   0012CC  6FBC               	movwf	(_date+11)& (0+255),b
  9968   0012CE                     
  9969                           ; BSR set to: 0
  9970                           ;main.c: 510:       date[12]='\0';
  9971   0012CE  6BBD               	clrf	(_date+12)& (0+255),b
  9972   0012D0                     
  9973                           ; BSR set to: 0
  9974                           ;main.c: 511:       if(key==2)
  9975   0012D0  0E02               	movlw	2
  9976   0012D2  199F               	xorwf	_key& (0+255),w,b
  9977   0012D4  A4D8               	btfss	status,2,c
  9978   0012D6  EF6F  F009         	goto	u3411
  9979   0012DA  EF71  F009         	goto	u3410
  9980   0012DE                     u3411:
  9981   0012DE  EFF6  F009         	goto	l3699
  9982   0012E2                     u3410:
  9983   0012E2                     
  9984                           ; BSR set to: 0
  9985                           ;main.c: 512:       {;main.c: 513:            write_ds1307(0x06,((year/10)<<4)|(year%10)
      +                          );
  9986   0012E2  C04E  F005         	movff	_year,___lwmod@dividend
  9987   0012E6  C04F  F006         	movff	_year+1,___lwmod@dividend+1
  9988   0012EA  0E00               	movlw	0
  9989   0012EC  6E08               	movwf	(___lwmod@divisor+1)^0,c
  9990   0012EE  0E0A               	movlw	10
  9991   0012F0  6E07               	movwf	___lwmod@divisor^0,c
  9992   0012F2  EC55  F014         	call	___lwmod	;wreg free
  9993   0012F6  C005  F00E         	movff	?___lwmod,??_set_date
  9994   0012FA  C006  F00F         	movff	?___lwmod+1,??_set_date+1
  9995   0012FE  C04E  F005         	movff	_year,___lwdiv@dividend
  9996   001302  C04F  F006         	movff	_year+1,___lwdiv@dividend+1
  9997   001306  0E00               	movlw	0
  9998   001308  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  9999   00130A  0E0A               	movlw	10
 10000   00130C  6E07               	movwf	___lwdiv@divisor^0,c
 10001   00130E  EC7A  F013         	call	___lwdiv	;wreg free
 10002   001312  3805               	swapf	?___lwdiv^0,w,c
 10003   001314  0BF0               	andlw	240
 10004   001316  100E               	iorwf	??_set_date^0,w,c
 10005   001318  6E0C               	movwf	write_ds1307@data^0,c
 10006   00131A  0E06               	movlw	6
 10007   00131C  ECC2  F015         	call	_write_ds1307
 10008                           
 10009                           ;main.c: 514:            write_ds1307(0x05,((month/10)<<4)|(month%10));
 10010   001320  C04C  F005         	movff	_month,___lwmod@dividend
 10011   001324  C04D  F006         	movff	_month+1,___lwmod@dividend+1
 10012   001328  0E00               	movlw	0
 10013   00132A  6E08               	movwf	(___lwmod@divisor+1)^0,c
 10014   00132C  0E0A               	movlw	10
 10015   00132E  6E07               	movwf	___lwmod@divisor^0,c
 10016   001330  EC55  F014         	call	___lwmod	;wreg free
 10017   001334  C005  F00E         	movff	?___lwmod,??_set_date
 10018   001338  C006  F00F         	movff	?___lwmod+1,??_set_date+1
 10019   00133C  C04C  F005         	movff	_month,___lwdiv@dividend
 10020   001340  C04D  F006         	movff	_month+1,___lwdiv@dividend+1
 10021   001344  0E00               	movlw	0
 10022   001346  6E08               	movwf	(___lwdiv@divisor+1)^0,c
 10023   001348  0E0A               	movlw	10
 10024   00134A  6E07               	movwf	___lwdiv@divisor^0,c
 10025   00134C  EC7A  F013         	call	___lwdiv	;wreg free
 10026   001350  3805               	swapf	?___lwdiv^0,w,c
 10027   001352  0BF0               	andlw	240
 10028   001354  100E               	iorwf	??_set_date^0,w,c
 10029   001356  6E0C               	movwf	write_ds1307@data^0,c
 10030   001358  0E05               	movlw	5
 10031   00135A  ECC2  F015         	call	_write_ds1307
 10032                           
 10033                           ;main.c: 515:            write_ds1307(0x04,((DATE/10)<<4)|(DATE%10));
 10034   00135E  C091  F005         	movff	_DATE,___lwmod@dividend
 10035   001362  C092  F006         	movff	_DATE+1,___lwmod@dividend+1
 10036   001366  0E00               	movlw	0
 10037   001368  6E08               	movwf	(___lwmod@divisor+1)^0,c
 10038   00136A  0E0A               	movlw	10
 10039   00136C  6E07               	movwf	___lwmod@divisor^0,c
 10040   00136E  EC55  F014         	call	___lwmod	;wreg free
 10041   001372  C005  F00E         	movff	?___lwmod,??_set_date
 10042   001376  C006  F00F         	movff	?___lwmod+1,??_set_date+1
 10043   00137A  C091  F005         	movff	_DATE,___lwdiv@dividend
 10044   00137E  C092  F006         	movff	_DATE+1,___lwdiv@dividend+1
 10045   001382  0E00               	movlw	0
 10046   001384  6E08               	movwf	(___lwdiv@divisor+1)^0,c
 10047   001386  0E0A               	movlw	10
 10048   001388  6E07               	movwf	___lwdiv@divisor^0,c
 10049   00138A  EC7A  F013         	call	___lwdiv	;wreg free
 10050   00138E  3805               	swapf	?___lwdiv^0,w,c
 10051   001390  0BF0               	andlw	240
 10052   001392  100E               	iorwf	??_set_date^0,w,c
 10053   001394  6E0C               	movwf	write_ds1307@data^0,c
 10054   001396  0E04               	movlw	4
 10055   001398  ECC2  F015         	call	_write_ds1307
 10056                           
 10057                           ;main.c: 516:            write_ds1307(0x03,((day/10)<<4)|(day%10));
 10058   00139C  C04A  F005         	movff	_day,___lwmod@dividend
 10059   0013A0  C04B  F006         	movff	_day+1,___lwmod@dividend+1
 10060   0013A4  0E00               	movlw	0
 10061   0013A6  6E08               	movwf	(___lwmod@divisor+1)^0,c
 10062   0013A8  0E0A               	movlw	10
 10063   0013AA  6E07               	movwf	___lwmod@divisor^0,c
 10064   0013AC  EC55  F014         	call	___lwmod	;wreg free
 10065   0013B0  C005  F00E         	movff	?___lwmod,??_set_date
 10066   0013B4  C006  F00F         	movff	?___lwmod+1,??_set_date+1
 10067   0013B8  C04A  F005         	movff	_day,___lwdiv@dividend
 10068   0013BC  C04B  F006         	movff	_day+1,___lwdiv@dividend+1
 10069   0013C0  0E00               	movlw	0
 10070   0013C2  6E08               	movwf	(___lwdiv@divisor+1)^0,c
 10071   0013C4  0E0A               	movlw	10
 10072   0013C6  6E07               	movwf	___lwdiv@divisor^0,c
 10073   0013C8  EC7A  F013         	call	___lwdiv	;wreg free
 10074   0013CC  3805               	swapf	?___lwdiv^0,w,c
 10075   0013CE  0BF0               	andlw	240
 10076   0013D0  100E               	iorwf	??_set_date^0,w,c
 10077   0013D2  6E0C               	movwf	write_ds1307@data^0,c
 10078   0013D4  0E03               	movlw	3
 10079   0013D6  ECC2  F015         	call	_write_ds1307
 10080   0013DA                     
 10081                           ;main.c: 517:            f=0;
 10082   0013DA  0100               	movlb	0	; () banked
 10083   0013DC  6B9E               	clrf	_f& (0+255),b
 10084   0013DE                     
 10085                           ; BSR set to: 0
 10086                           ;main.c: 518:            flag=0;
 10087   0013DE  6BA0               	clrf	_flag& (0+255),b
 10088   0013E0                     
 10089                           ; BSR set to: 0
 10090                           ;main.c: 519:            stop=0;
 10091   0013E0  0E00               	movlw	0
 10092   0013E2  6F84               	movwf	(_stop+1)& (0+255),b
 10093   0013E4  0E00               	movlw	0
 10094   0013E6  6F83               	movwf	_stop& (0+255),b
 10095   0013E8                     
 10096                           ; BSR set to: 0
 10097                           ;main.c: 520:            GIE=1;
 10098   0013E8  8EF2               	bsf	4082,7,c	;volatile
 10099   0013EA                     
 10100                           ; BSR set to: 0
 10101                           ;main.c: 521:            PEIE=1;
 10102   0013EA  8CF2               	bsf	4082,6,c	;volatile
 10103   0013EC                     l3699:
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;main.c: 523:      clcd_print(date,(0xC0 + (0)));
 10107   0013EC  0EB1               	movlw	low _date
 10108   0013EE  6E07               	movwf	clcd_print@data^0,c
 10109   0013F0  6A08               	clrf	(clcd_print@data+1)^0,c
 10110   0013F2  0EC0               	movlw	192
 10111   0013F4  6E09               	movwf	clcd_print@addr^0,c
 10112   0013F6  ECEA  F013         	call	_clcd_print	;wreg free
 10113   0013FA                     
 10114                           ;main.c: 524:      clcd_print("    ",(0xC0 + (12)));
 10115   0013FA  0E65               	movlw	low (STR_11+12)
 10116   0013FC  6E07               	movwf	clcd_print@data^0,c
 10117   0013FE  0E2F               	movlw	high (STR_11+12)
 10118   001400  6E08               	movwf	(clcd_print@data+1)^0,c
 10119   001402  0ECC               	movlw	204
 10120   001404  6E09               	movwf	clcd_print@addr^0,c
 10121   001406  ECEA  F013         	call	_clcd_print	;wreg free
 10122   00140A                     l443:
 10123   00140A  0012               	return		;funcret
 10124   00140C                     __end_of_set_date:
 10125                           	callstack 0
 10126                           
 10127 ;; *************** function _write_ds1307 *****************
 10128 ;; Defined at:
 10129 ;;		line 46 in file "ds1307.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;  address         1    wreg     unsigned char 
 10132 ;;  data            1   11[COMRAM] unsigned char 
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;  address         1   12[COMRAM] unsigned char 
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1    wreg      void 
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, cstack
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10144 ;;      Params:         1       0       0       0       0       0       0
 10145 ;;      Locals:         1       0       0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0
 10147 ;;      Totals:         2       0       0       0       0       0       0
 10148 ;;Total ram usage:        2 bytes
 10149 ;; Hardware stack levels used: 1
 10150 ;; Hardware stack levels required when called: 3
 10151 ;; This function calls:
 10152 ;;		_i2c_start
 10153 ;;		_i2c_stop
 10154 ;;		_i2c_write
 10155 ;; This function is called by:
 10156 ;;		_init_ds1307
 10157 ;;		_set_time
 10158 ;;		_set_date
 10159 ;; This function uses a non-reentrant model
 10160 ;;
 10161                           
 10162                           	psect	text30
 10163   002B84                     __ptext30:
 10164                           	callstack 0
 10165   002B84                     _write_ds1307:
 10166                           	callstack 25
 10167                           
 10168                           ;incstack = 0
 10169                           ;write_ds1307@address stored from wreg
 10170   002B84  6E0D               	movwf	write_ds1307@address^0,c
 10171   002B86                     
 10172                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
 10173   002B86  EC1B  F016         	call	_i2c_start	;wreg free
 10174   002B8A                     
 10175                           ;ds1307.c: 49:  i2c_write(0xD0);
 10176   002B8A  0ED0               	movlw	208
 10177   002B8C  EC05  F016         	call	_i2c_write
 10178   002B90                     
 10179                           ;ds1307.c: 50:  i2c_write(address);
 10180   002B90  500D               	movf	write_ds1307@address^0,w,c
 10181   002B92  EC05  F016         	call	_i2c_write
 10182   002B96                     
 10183                           ;ds1307.c: 51:  i2c_write(data);
 10184   002B96  500C               	movf	write_ds1307@data^0,w,c
 10185   002B98  EC05  F016         	call	_i2c_write
 10186   002B9C                     
 10187                           ;ds1307.c: 52:  i2c_stop();
 10188   002B9C  EC17  F016         	call	_i2c_stop	;wreg free
 10189   002BA0  0012               	return		;funcret
 10190   002BA2                     __end_of_write_ds1307:
 10191                           	callstack 0
 10192                           
 10193 ;; *************** function _GOTO_SET_EVENT *****************
 10194 ;; Defined at:
 10195 ;;		line 594 in file "main.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;		None
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;		None
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  1    wreg      void 
 10202 ;; Registers used:
 10203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10209 ;;      Params:         0       0       0       0       0       0       0
 10210 ;;      Locals:         0       0       0       0       0       0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0
 10212 ;;      Totals:         0       0       0       0       0       0       0
 10213 ;;Total ram usage:        0 bytes
 10214 ;; Hardware stack levels used: 1
 10215 ;; Hardware stack levels required when called: 7
 10216 ;; This function calls:
 10217 ;;		_clcd_print
 10218 ;;		_clcd_write
 10219 ;;		_set_EVENT
 10220 ;;		_view_ALARM
 10221 ;; This function is called by:
 10222 ;;		_main
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           	psect	text31
 10227   001D4E                     __ptext31:
 10228                           	callstack 0
 10229   001D4E                     _GOTO_SET_EVENT:
 10230                           	callstack 23
 10231   001D4E                     
 10232                           ;main.c: 597:     if(f==1)
 10233   001D4E  0100               	movlb	0	; () banked
 10234   001D50  059E               	decf	_f& (0+255),w,b
 10235   001D52  A4D8               	btfss	status,2,c
 10236   001D54  EFAE  F00E         	goto	u3651
 10237   001D58  EFB0  F00E         	goto	u3650
 10238   001D5C                     u3651:
 10239   001D5C  EF31  F00F         	goto	l3879
 10240   001D60                     u3650:
 10241   001D60                     
 10242                           ; BSR set to: 0
 10243                           ;main.c: 598:     {;main.c: 599:         clcd_write(0x01, 0);
 10244   001D60  0E00               	movlw	0
 10245   001D62  6E05               	movwf	clcd_write@control_bit^0,c
 10246   001D64  0E01               	movlw	1
 10247   001D66  EC10  F015         	call	_clcd_write
 10248   001D6A                     
 10249                           ;main.c: 600:      clcd_print("VIEW EVENT    ",(0x80 + (2)));
 10250   001D6A  0EA8               	movlw	low STR_23
 10251   001D6C  6E07               	movwf	clcd_print@data^0,c
 10252   001D6E  0E2F               	movlw	high STR_23
 10253   001D70  6E08               	movwf	(clcd_print@data+1)^0,c
 10254   001D72  0E82               	movlw	130
 10255   001D74  6E09               	movwf	clcd_print@addr^0,c
 10256   001D76  ECEA  F013         	call	_clcd_print	;wreg free
 10257   001D7A                     
 10258                           ;main.c: 601:      clcd_print("SET EVENT     ",(0xC0 + (2)));
 10259   001D7A  0E99               	movlw	low STR_24
 10260   001D7C  6E07               	movwf	clcd_print@data^0,c
 10261   001D7E  0E2F               	movlw	high STR_24
 10262   001D80  6E08               	movwf	(clcd_print@data+1)^0,c
 10263   001D82  0EC2               	movlw	194
 10264   001D84  6E09               	movwf	clcd_print@addr^0,c
 10265   001D86  ECEA  F013         	call	_clcd_print	;wreg free
 10266   001D8A                     
 10267                           ;main.c: 603:     if(oper1==1)
 10268   001D8A  0458               	decf	_oper1^0,w,c
 10269   001D8C  A4D8               	btfss	status,2,c
 10270   001D8E  EFCB  F00E         	goto	u3661
 10271   001D92  EFCD  F00E         	goto	u3660
 10272   001D96                     u3661:
 10273   001D96  EFDF  F00E         	goto	l3859
 10274   001D9A                     u3660:
 10275   001D9A                     
 10276                           ;main.c: 604:     {;main.c: 605:         clcd_print("->",(0x80 + (0)));
 10277   001D9A  0EF5               	movlw	low STR_17
 10278   001D9C  6E07               	movwf	clcd_print@data^0,c
 10279   001D9E  0E2F               	movlw	high STR_17
 10280   001DA0  6E08               	movwf	(clcd_print@data+1)^0,c
 10281   001DA2  0E80               	movlw	128
 10282   001DA4  6E09               	movwf	clcd_print@addr^0,c
 10283   001DA6  ECEA  F013         	call	_clcd_print	;wreg free
 10284                           
 10285                           ;main.c: 606:         clcd_print("  ",(0xC0 + (0)));
 10286   001DAA  0E67               	movlw	low (STR_11+14)
 10287   001DAC  6E07               	movwf	clcd_print@data^0,c
 10288   001DAE  0E2F               	movlw	high (STR_11+14)
 10289   001DB0  6E08               	movwf	(clcd_print@data+1)^0,c
 10290   001DB2  0EC0               	movlw	192
 10291   001DB4  6E09               	movwf	clcd_print@addr^0,c
 10292   001DB6  ECEA  F013         	call	_clcd_print	;wreg free
 10293                           
 10294                           ;main.c: 607:     }
 10295   001DBA  EFF8  F00E         	goto	l3863
 10296   001DBE                     l3859:
 10297   001DBE  0E02               	movlw	2
 10298   001DC0  1858               	xorwf	_oper1^0,w,c
 10299   001DC2  A4D8               	btfss	status,2,c
 10300   001DC4  EFE6  F00E         	goto	u3671
 10301   001DC8  EFE8  F00E         	goto	u3670
 10302   001DCC                     u3671:
 10303   001DCC  EFF8  F00E         	goto	l3863
 10304   001DD0                     u3670:
 10305   001DD0                     
 10306                           ;main.c: 609:     {;main.c: 610:         clcd_print("->",(0xC0 + (0)));
 10307   001DD0  0EF5               	movlw	low STR_17
 10308   001DD2  6E07               	movwf	clcd_print@data^0,c
 10309   001DD4  0E2F               	movlw	high STR_17
 10310   001DD6  6E08               	movwf	(clcd_print@data+1)^0,c
 10311   001DD8  0EC0               	movlw	192
 10312   001DDA  6E09               	movwf	clcd_print@addr^0,c
 10313   001DDC  ECEA  F013         	call	_clcd_print	;wreg free
 10314                           
 10315                           ;main.c: 611:         clcd_print("  ",(0x80 + (0)));
 10316   001DE0  0E67               	movlw	low (STR_11+14)
 10317   001DE2  6E07               	movwf	clcd_print@data^0,c
 10318   001DE4  0E2F               	movlw	high (STR_11+14)
 10319   001DE6  6E08               	movwf	(clcd_print@data+1)^0,c
 10320   001DE8  0E80               	movlw	128
 10321   001DEA  6E09               	movwf	clcd_print@addr^0,c
 10322   001DEC  ECEA  F013         	call	_clcd_print	;wreg free
 10323   001DF0                     l3863:
 10324                           
 10325                           ;main.c: 613:     if(key==11)
 10326   001DF0  0E0B               	movlw	11
 10327   001DF2  0100               	movlb	0	; () banked
 10328   001DF4  199F               	xorwf	_key& (0+255),w,b
 10329   001DF6  A4D8               	btfss	status,2,c
 10330   001DF8  EF00  F00F         	goto	u3681
 10331   001DFC  EF02  F00F         	goto	u3680
 10332   001E00                     u3681:
 10333   001E00  EF15  F00F         	goto	l3871
 10334   001E04                     u3680:
 10335   001E04                     
 10336                           ; BSR set to: 0
 10337                           ;main.c: 614:     {;main.c: 615:         if(f==1)
 10338   001E04  059E               	decf	_f& (0+255),w,b
 10339   001E06  A4D8               	btfss	status,2,c
 10340   001E08  EF08  F00F         	goto	u3691
 10341   001E0C  EF0A  F00F         	goto	u3690
 10342   001E10                     u3691:
 10343   001E10  EF31  F00F         	goto	l3879
 10344   001E14                     u3690:
 10345   001E14                     
 10346                           ; BSR set to: 0
 10347                           ;main.c: 616:         {;main.c: 617:         if(oper1>1)
 10348   001E14  0E01               	movlw	1
 10349   001E16  6458               	cpfsgt	_oper1^0,c
 10350   001E18  EF10  F00F         	goto	u3701
 10351   001E1C  EF12  F00F         	goto	u3700
 10352   001E20                     u3701:
 10353   001E20  EF31  F00F         	goto	l472
 10354   001E24                     u3700:
 10355   001E24                     
 10356                           ; BSR set to: 0
 10357                           ;main.c: 618:         {;main.c: 619:             oper1--;
 10358   001E24  0658               	decf	_oper1^0,f,c
 10359   001E26  EF31  F00F         	goto	l3879
 10360   001E2A                     l3871:
 10361                           
 10362                           ; BSR set to: 0
 10363   001E2A  0E0C               	movlw	12
 10364   001E2C  199F               	xorwf	_key& (0+255),w,b
 10365   001E2E  A4D8               	btfss	status,2,c
 10366   001E30  EF1C  F00F         	goto	u3711
 10367   001E34  EF1E  F00F         	goto	u3710
 10368   001E38                     u3711:
 10369   001E38  EF31  F00F         	goto	l3879
 10370   001E3C                     u3710:
 10371   001E3C                     
 10372                           ; BSR set to: 0
 10373                           ;main.c: 625:      {;main.c: 626:          if(f==1)
 10374   001E3C  059E               	decf	_f& (0+255),w,b
 10375   001E3E  A4D8               	btfss	status,2,c
 10376   001E40  EF24  F00F         	goto	u3721
 10377   001E44  EF26  F00F         	goto	u3720
 10378   001E48                     u3721:
 10379   001E48  EF31  F00F         	goto	l3879
 10380   001E4C                     u3720:
 10381   001E4C                     
 10382                           ; BSR set to: 0
 10383                           ;main.c: 627:          {;main.c: 628:          if(oper1<2)
 10384   001E4C  0E02               	movlw	2
 10385   001E4E  6058               	cpfslt	_oper1^0,c
 10386   001E50  EF2C  F00F         	goto	u3731
 10387   001E54  EF2E  F00F         	goto	u3730
 10388   001E58                     u3731:
 10389   001E58  EF31  F00F         	goto	l3879
 10390   001E5C                     u3730:
 10391   001E5C                     
 10392                           ; BSR set to: 0
 10393                           ;main.c: 629:          {;main.c: 630:              oper1++;
 10394   001E5C  2A58               	incf	_oper1^0,f,c
 10395   001E5E  EF31  F00F         	goto	l3879
 10396   001E62                     l472:
 10397   001E62                     l3879:
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;main.c: 637:     if(oper1==1)
 10401   001E62  0458               	decf	_oper1^0,w,c
 10402   001E64  A4D8               	btfss	status,2,c
 10403   001E66  EF37  F00F         	goto	u3741
 10404   001E6A  EF39  F00F         	goto	u3740
 10405   001E6E                     u3741:
 10406   001E6E  EF44  F00F         	goto	l3885
 10407   001E72                     u3740:
 10408   001E72                     
 10409                           ; BSR set to: 0
 10410                           ;main.c: 638:     {;main.c: 639:         if(f==2)
 10411   001E72  0E02               	movlw	2
 10412   001E74  199E               	xorwf	_f& (0+255),w,b
 10413   001E76  A4D8               	btfss	status,2,c
 10414   001E78  EF40  F00F         	goto	u3751
 10415   001E7C  EF42  F00F         	goto	u3750
 10416   001E80                     u3751:
 10417   001E80  EF44  F00F         	goto	l3885
 10418   001E84                     u3750:
 10419   001E84                     
 10420                           ; BSR set to: 0
 10421                           ;main.c: 640:         {;main.c: 641:              view_ALARM();
 10422   001E84  EC52  F00C         	call	_view_ALARM	;wreg free
 10423   001E88                     l3885:
 10424                           
 10425                           ;main.c: 645:      if(oper1==2)
 10426   001E88  0E02               	movlw	2
 10427   001E8A  1858               	xorwf	_oper1^0,w,c
 10428   001E8C  A4D8               	btfss	status,2,c
 10429   001E8E  EF4B  F00F         	goto	u3761
 10430   001E92  EF4D  F00F         	goto	u3760
 10431   001E96                     u3761:
 10432   001E96  EF59  F00F         	goto	l480
 10433   001E9A                     u3760:
 10434   001E9A                     
 10435                           ;main.c: 646:      {;main.c: 647:          if(f==2)
 10436   001E9A  0E02               	movlw	2
 10437   001E9C  0100               	movlb	0	; () banked
 10438   001E9E  199E               	xorwf	_f& (0+255),w,b
 10439   001EA0  A4D8               	btfss	status,2,c
 10440   001EA2  EF55  F00F         	goto	u3771
 10441   001EA6  EF57  F00F         	goto	u3770
 10442   001EAA                     u3771:
 10443   001EAA  EF59  F00F         	goto	l480
 10444   001EAE                     u3770:
 10445   001EAE                     
 10446                           ; BSR set to: 0
 10447                           ;main.c: 648:          {;main.c: 649:              set_EVENT();
 10448   001EAE  EC94  F003         	call	_set_EVENT	;wreg free
 10449   001EB2                     l480:
 10450   001EB2  0012               	return		;funcret
 10451   001EB4                     __end_of_GOTO_SET_EVENT:
 10452                           	callstack 0
 10453                           
 10454 ;; *************** function _view_ALARM *****************
 10455 ;; Defined at:
 10456 ;;		line 152 in file "main.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;		None
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;  k               2   15[COMRAM] int 
 10461 ;;  line_variabl    2   13[COMRAM] int 
 10462 ;; Return value:  Size  Location     Type
 10463 ;;                  1    wreg      void 
 10464 ;; Registers used:
 10465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10466 ;; Tracked objects:
 10467 ;;		On entry : 0/0
 10468 ;;		On exit  : 0/0
 10469 ;;		Unchanged: 0/0
 10470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10471 ;;      Params:         0       0       0       0       0       0       0
 10472 ;;      Locals:         4       0       0       0       0       0       0
 10473 ;;      Temps:          4       0       0       0       0       0       0
 10474 ;;      Totals:         8       0       0       0       0       0       0
 10475 ;;Total ram usage:        8 bytes
 10476 ;; Hardware stack levels used: 1
 10477 ;; Hardware stack levels required when called: 3
 10478 ;; This function calls:
 10479 ;;		_clcd_print
 10480 ;;		_clcd_putch
 10481 ;; This function is called by:
 10482 ;;		_GOTO_SET_EVENT
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text32
 10487   0018A4                     __ptext32:
 10488                           	callstack 0
 10489   0018A4                     _view_ALARM:
 10490                           	callstack 26
 10491   0018A4                     
 10492                           ;main.c: 155:     if(f==2)
 10493   0018A4  0E02               	movlw	2
 10494   0018A6  0100               	movlb	0	; () banked
 10495   0018A8  199E               	xorwf	_f& (0+255),w,b
 10496   0018AA  A4D8               	btfss	status,2,c
 10497   0018AC  EF5A  F00C         	goto	u2671
 10498   0018B0  EF5C  F00C         	goto	u2670
 10499   0018B4                     u2671:
 10500   0018B4  EF27  F00D         	goto	l358
 10501   0018B8                     u2670:
 10502   0018B8                     
 10503                           ; BSR set to: 0
 10504                           ;main.c: 156:     {;main.c: 157:         if(key==11)
 10505   0018B8  0E0B               	movlw	11
 10506   0018BA  199F               	xorwf	_key& (0+255),w,b
 10507   0018BC  A4D8               	btfss	status,2,c
 10508   0018BE  EF63  F00C         	goto	u2681
 10509   0018C2  EF65  F00C         	goto	u2680
 10510   0018C6                     u2681:
 10511   0018C6  EF70  F00C         	goto	l3345
 10512   0018CA                     u2680:
 10513   0018CA                     
 10514                           ; BSR set to: 0
 10515                           ;main.c: 158:         {;main.c: 159:             if(count>0)
 10516   0018CA  5056               	movf	_count^0,w,c
 10517   0018CC  B4D8               	btfsc	status,2,c
 10518   0018CE  EF6B  F00C         	goto	u2691
 10519   0018D2  EF6D  F00C         	goto	u2690
 10520   0018D6                     u2691:
 10521   0018D6  EF8E  F00C         	goto	l3351
 10522   0018DA                     u2690:
 10523   0018DA                     
 10524                           ; BSR set to: 0
 10525                           ;main.c: 160:             {;main.c: 161:                 count--;
 10526   0018DA  0656               	decf	_count^0,f,c
 10527   0018DC  EF8E  F00C         	goto	l3351
 10528   0018E0                     l3345:
 10529                           
 10530                           ; BSR set to: 0
 10531   0018E0  0E0C               	movlw	12
 10532   0018E2  199F               	xorwf	_key& (0+255),w,b
 10533   0018E4  A4D8               	btfss	status,2,c
 10534   0018E6  EF77  F00C         	goto	u2701
 10535   0018EA  EF79  F00C         	goto	u2700
 10536   0018EE                     u2701:
 10537   0018EE  EF8E  F00C         	goto	l3351
 10538   0018F2                     u2700:
 10539   0018F2                     
 10540                           ; BSR set to: 0
 10541                           ;main.c: 165:         {;main.c: 166:             if(count<event_count-1)
 10542   0018F2  0EFF               	movlw	255
 10543   0018F4  2448               	addwf	_event_count^0,w,c
 10544   0018F6  6E0A               	movwf	??_view_ALARM^0,c
 10545   0018F8  0EFF               	movlw	255
 10546   0018FA  2049               	addwfc	(_event_count+1)^0,w,c
 10547   0018FC  6E0B               	movwf	(??_view_ALARM+1)^0,c
 10548   0018FE  5056               	movf	_count^0,w,c
 10549   001900  6E0C               	movwf	(??_view_ALARM+2)^0,c
 10550   001902  6A0D               	clrf	(??_view_ALARM+3)^0,c
 10551   001904  500A               	movf	??_view_ALARM^0,w,c
 10552   001906  5C0C               	subwf	(??_view_ALARM+2)^0,w,c
 10553   001908  500B               	movf	(??_view_ALARM+1)^0,w,c
 10554   00190A  580D               	subwfb	(??_view_ALARM+3)^0,w,c
 10555   00190C  B0D8               	btfsc	status,0,c
 10556   00190E  EF8B  F00C         	goto	u2711
 10557   001912  EF8D  F00C         	goto	u2710
 10558   001916                     u2711:
 10559   001916  EF8E  F00C         	goto	l3351
 10560   00191A                     u2710:
 10561   00191A                     
 10562                           ; BSR set to: 0
 10563                           ;main.c: 167:             {;main.c: 168:                 count++;
 10564   00191A  2A56               	incf	_count^0,f,c
 10565   00191C                     l3351:
 10566                           
 10567                           ; BSR set to: 0
 10568                           ;main.c: 171:         clcd_putch('#',(0x80 + (0)));
 10569   00191C  0E80               	movlw	128
 10570   00191E  6E07               	movwf	clcd_putch@addr^0,c
 10571   001920  0E23               	movlw	35
 10572   001922  ECD1  F015         	call	_clcd_putch
 10573   001926                     
 10574                           ;main.c: 172:         clcd_print(" T- ",(0x80 + (1)));
 10575   001926  0EE7               	movlw	low STR_5
 10576   001928  6E07               	movwf	clcd_print@data^0,c
 10577   00192A  0E2F               	movlw	high STR_5
 10578   00192C  6E08               	movwf	(clcd_print@data+1)^0,c
 10579   00192E  0E81               	movlw	129
 10580   001930  6E09               	movwf	clcd_print@addr^0,c
 10581   001932  ECEA  F013         	call	_clcd_print	;wreg free
 10582   001936                     
 10583                           ;main.c: 173:         int line_variable=5;
 10584   001936  0E00               	movlw	0
 10585   001938  6E0F               	movwf	(view_ALARM@line_variable+1)^0,c
 10586   00193A  0E05               	movlw	5
 10587   00193C  6E0E               	movwf	view_ALARM@line_variable^0,c
 10588   00193E                     
 10589                           ;main.c: 175:         for(k=0;k<8;k++)
 10590   00193E  0E00               	movlw	0
 10591   001940  6E11               	movwf	(view_ALARM@k+1)^0,c
 10592   001942  0E00               	movlw	0
 10593   001944  6E10               	movwf	view_ALARM@k^0,c
 10594   001946                     l3365:
 10595                           
 10596                           ;main.c: 176:         {;main.c: 177:            clcd_putch(view_event[count][k],(0x80 + 
      +                          (line_variable)));
 10597   001946  500E               	movf	view_ALARM@line_variable^0,w,c
 10598   001948  0F80               	addlw	128
 10599   00194A  6E07               	movwf	clcd_putch@addr^0,c
 10600   00194C  5056               	movf	_count^0,w,c
 10601   00194E  0D12               	mullw	18
 10602   001950  0E00               	movlw	low _view_event
 10603   001952  24F3               	addwf	243,w,c
 10604   001954  6E0A               	movwf	??_view_ALARM^0,c
 10605   001956  0E01               	movlw	high _view_event
 10606   001958  20F4               	addwfc	prodh,w,c
 10607   00195A  6E0B               	movwf	(??_view_ALARM+1)^0,c
 10608   00195C  5010               	movf	view_ALARM@k^0,w,c
 10609   00195E  240A               	addwf	??_view_ALARM^0,w,c
 10610   001960  6ED9               	movwf	fsr2l,c
 10611   001962  5011               	movf	(view_ALARM@k+1)^0,w,c
 10612   001964  200B               	addwfc	(??_view_ALARM+1)^0,w,c
 10613   001966  6EDA               	movwf	fsr2h,c
 10614   001968  50DF               	movf	indf2,w,c
 10615   00196A  ECD1  F015         	call	_clcd_putch
 10616   00196E                     
 10617                           ;main.c: 178:             line_variable++;
 10618   00196E  4A0E               	infsnz	view_ALARM@line_variable^0,f,c
 10619   001970  2A0F               	incf	(view_ALARM@line_variable+1)^0,f,c
 10620   001972                     
 10621                           ;main.c: 179:         }
 10622   001972  4A10               	infsnz	view_ALARM@k^0,f,c
 10623   001974  2A11               	incf	(view_ALARM@k+1)^0,f,c
 10624   001976  BE11               	btfsc	(view_ALARM@k+1)^0,7,c
 10625   001978  EFC7  F00C         	goto	u2721
 10626   00197C  5011               	movf	(view_ALARM@k+1)^0,w,c
 10627   00197E  E109               	bnz	u2720
 10628   001980  0E08               	movlw	8
 10629   001982  5C10               	subwf	view_ALARM@k^0,w,c
 10630   001984  A0D8               	btfss	status,0,c
 10631   001986  EFC7  F00C         	goto	u2721
 10632   00198A  EFC9  F00C         	goto	u2720
 10633   00198E                     u2721:
 10634   00198E  EFA3  F00C         	goto	l3365
 10635   001992                     u2720:
 10636   001992                     
 10637                           ;main.c: 180:        clcd_print("  *",(0x80 + (line_variable)));
 10638   001992  0EF1               	movlw	low STR_6
 10639   001994  6E07               	movwf	clcd_print@data^0,c
 10640   001996  0E2F               	movlw	high STR_6
 10641   001998  6E08               	movwf	(clcd_print@data+1)^0,c
 10642   00199A  500E               	movf	view_ALARM@line_variable^0,w,c
 10643   00199C  0F80               	addlw	128
 10644   00199E  6E09               	movwf	clcd_print@addr^0,c
 10645   0019A0  ECEA  F013         	call	_clcd_print	;wreg free
 10646   0019A4                     
 10647                           ;main.c: 181:         line_variable=0;
 10648   0019A4  0E00               	movlw	0
 10649   0019A6  6E0F               	movwf	(view_ALARM@line_variable+1)^0,c
 10650   0019A8  0E00               	movlw	0
 10651   0019AA  6E0E               	movwf	view_ALARM@line_variable^0,c
 10652   0019AC                     
 10653                           ;main.c: 182:        clcd_putch(count+'0',(0xC0 + (line_variable++)));
 10654   0019AC  0EC0               	movlw	192
 10655   0019AE  6E07               	movwf	clcd_putch@addr^0,c
 10656   0019B0  5056               	movf	_count^0,w,c
 10657   0019B2  0F30               	addlw	48
 10658   0019B4  ECD1  F015         	call	_clcd_putch
 10659   0019B8  4A0E               	infsnz	view_ALARM@line_variable^0,f,c
 10660   0019BA  2A0F               	incf	(view_ALARM@line_variable+1)^0,f,c
 10661   0019BC                     
 10662                           ;main.c: 183:         clcd_print(" D- ",(0xC0 + (line_variable)));
 10663   0019BC  0EE2               	movlw	low STR_7
 10664   0019BE  6E07               	movwf	clcd_print@data^0,c
 10665   0019C0  0E2F               	movlw	high STR_7
 10666   0019C2  6E08               	movwf	(clcd_print@data+1)^0,c
 10667   0019C4  500E               	movf	view_ALARM@line_variable^0,w,c
 10668   0019C6  0FC0               	addlw	192
 10669   0019C8  6E09               	movwf	clcd_print@addr^0,c
 10670   0019CA  ECEA  F013         	call	_clcd_print	;wreg free
 10671   0019CE                     
 10672                           ;main.c: 184:         line_variable=5;
 10673   0019CE  0E00               	movlw	0
 10674   0019D0  6E0F               	movwf	(view_ALARM@line_variable+1)^0,c
 10675   0019D2  0E05               	movlw	5
 10676   0019D4  6E0E               	movwf	view_ALARM@line_variable^0,c
 10677   0019D6                     l3385:
 10678                           
 10679                           ;main.c: 185:         for( ;k<18;k++)
 10680   0019D6  BE11               	btfsc	(view_ALARM@k+1)^0,7,c
 10681   0019D8  EFF7  F00C         	goto	u2731
 10682   0019DC  5011               	movf	(view_ALARM@k+1)^0,w,c
 10683   0019DE  E109               	bnz	u2730
 10684   0019E0  0E12               	movlw	18
 10685   0019E2  5C10               	subwf	view_ALARM@k^0,w,c
 10686   0019E4  A0D8               	btfss	status,0,c
 10687   0019E6  EFF7  F00C         	goto	u2731
 10688   0019EA  EFF9  F00C         	goto	u2730
 10689   0019EE                     u2731:
 10690   0019EE  EFFB  F00C         	goto	l3389
 10691   0019F2                     u2730:
 10692   0019F2  EF15  F00D         	goto	l3397
 10693   0019F6                     l3389:
 10694                           
 10695                           ;main.c: 186:         {;main.c: 187:            clcd_putch(view_event[count][k],(0xC0 + 
      +                          (line_variable)));
 10696   0019F6  500E               	movf	view_ALARM@line_variable^0,w,c
 10697   0019F8  0FC0               	addlw	192
 10698   0019FA  6E07               	movwf	clcd_putch@addr^0,c
 10699   0019FC  5056               	movf	_count^0,w,c
 10700   0019FE  0D12               	mullw	18
 10701   001A00  0E00               	movlw	low _view_event
 10702   001A02  24F3               	addwf	243,w,c
 10703   001A04  6E0A               	movwf	??_view_ALARM^0,c
 10704   001A06  0E01               	movlw	high _view_event
 10705   001A08  20F4               	addwfc	prodh,w,c
 10706   001A0A  6E0B               	movwf	(??_view_ALARM+1)^0,c
 10707   001A0C  5010               	movf	view_ALARM@k^0,w,c
 10708   001A0E  240A               	addwf	??_view_ALARM^0,w,c
 10709   001A10  6ED9               	movwf	fsr2l,c
 10710   001A12  5011               	movf	(view_ALARM@k+1)^0,w,c
 10711   001A14  200B               	addwfc	(??_view_ALARM+1)^0,w,c
 10712   001A16  6EDA               	movwf	fsr2h,c
 10713   001A18  50DF               	movf	indf2,w,c
 10714   001A1A  ECD1  F015         	call	_clcd_putch
 10715   001A1E                     
 10716                           ;main.c: 188:             line_variable++;
 10717   001A1E  4A0E               	infsnz	view_ALARM@line_variable^0,f,c
 10718   001A20  2A0F               	incf	(view_ALARM@line_variable+1)^0,f,c
 10719   001A22                     
 10720                           ;main.c: 189:         }
 10721   001A22  4A10               	infsnz	view_ALARM@k^0,f,c
 10722   001A24  2A11               	incf	(view_ALARM@k+1)^0,f,c
 10723   001A26  EFEB  F00C         	goto	l3385
 10724   001A2A                     l3397:
 10725                           
 10726                           ;main.c: 190:         if(key==2)
 10727   001A2A  0E02               	movlw	2
 10728   001A2C  0100               	movlb	0	; () banked
 10729   001A2E  199F               	xorwf	_key& (0+255),w,b
 10730   001A30  A4D8               	btfss	status,2,c
 10731   001A32  EF1D  F00D         	goto	u2741
 10732   001A36  EF1F  F00D         	goto	u2740
 10733   001A3A                     u2741:
 10734   001A3A  EF27  F00D         	goto	l358
 10735   001A3E                     u2740:
 10736   001A3E                     
 10737                           ; BSR set to: 0
 10738                           ;main.c: 191:         {;main.c: 192:         f=0;
 10739   001A3E  6B9E               	clrf	_f& (0+255),b
 10740                           
 10741                           ;main.c: 193:         flag=0;
 10742   001A40  6BA0               	clrf	_flag& (0+255),b
 10743   001A42                     
 10744                           ; BSR set to: 0
 10745                           ;main.c: 194:         stop=0;
 10746   001A42  0E00               	movlw	0
 10747   001A44  6F84               	movwf	(_stop+1)& (0+255),b
 10748   001A46  0E00               	movlw	0
 10749   001A48  6F83               	movwf	_stop& (0+255),b
 10750   001A4A                     
 10751                           ; BSR set to: 0
 10752                           ;main.c: 195:         GIE=1;
 10753   001A4A  8EF2               	bsf	4082,7,c	;volatile
 10754   001A4C                     
 10755                           ; BSR set to: 0
 10756                           ;main.c: 196:         PEIE=1;
 10757   001A4C  8CF2               	bsf	4082,6,c	;volatile
 10758   001A4E                     l358:
 10759                           
 10760                           ; BSR set to: 0
 10761   001A4E  0012               	return		;funcret
 10762   001A50                     __end_of_view_ALARM:
 10763                           	callstack 0
 10764                           
 10765 ;; *************** function _set_EVENT *****************
 10766 ;; Defined at:
 10767 ;;		line 204 in file "main.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;		None
 10770 ;; Auto vars:     Size  Location     Type
 10771 ;;		None
 10772 ;; Return value:  Size  Location     Type
 10773 ;;                  1    wreg      void 
 10774 ;; Registers used:
 10775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10776 ;; Tracked objects:
 10777 ;;		On entry : 0/0
 10778 ;;		On exit  : 0/0
 10779 ;;		Unchanged: 0/0
 10780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10781 ;;      Params:         0       0       0       0       0       0       0
 10782 ;;      Locals:         0       0       0       0       0       0       0
 10783 ;;      Temps:          2       0       0       0       0       0       0
 10784 ;;      Totals:         2       0       0       0       0       0       0
 10785 ;;Total ram usage:        2 bytes
 10786 ;; Hardware stack levels used: 1
 10787 ;; Hardware stack levels required when called: 6
 10788 ;; This function calls:
 10789 ;;		___lwdiv
 10790 ;;		___lwmod
 10791 ;;		_clcd_print
 10792 ;;		_clcd_putch
 10793 ;;		_write
 10794 ;; This function is called by:
 10795 ;;		_GOTO_SET_EVENT
 10796 ;; This function uses a non-reentrant model
 10797 ;;
 10798                           
 10799                           	psect	text33
 10800   000728                     __ptext33:
 10801                           	callstack 0
 10802   000728                     _set_EVENT:
 10803                           	callstack 23
 10804   000728                     
 10805                           ;main.c: 206:     if(f==2)
 10806   000728  0E02               	movlw	2
 10807   00072A  0100               	movlb	0	; () banked
 10808   00072C  199E               	xorwf	_f& (0+255),w,b
 10809   00072E  A4D8               	btfss	status,2,c
 10810   000730  EF9C  F003         	goto	u2751
 10811   000734  EF9E  F003         	goto	u2750
 10812   000738                     u2751:
 10813   000738  EFFB  F005         	goto	l398
 10814   00073C                     u2750:
 10815   00073C                     
 10816                           ; BSR set to: 0
 10817                           ;main.c: 207:     {;main.c: 208:         if(once)
 10818   00073C  51EE               	movf	_once& (0+255),w,b
 10819   00073E  B4D8               	btfsc	status,2,c
 10820   000740  EFA4  F003         	goto	u2761
 10821   000744  EFA6  F003         	goto	u2760
 10822   000748                     u2761:
 10823   000748  EFE2  F003         	goto	l3417
 10824   00074C                     u2760:
 10825   00074C                     
 10826                           ; BSR set to: 0
 10827                           ;main.c: 209:         {;main.c: 210:         hour=(time[0]-'0')*10+(time[1]-'0');
 10828   00074C  51CB               	movf	_time& (0+255),w,b
 10829   00074E  0D0A               	mullw	10
 10830   000750  CFF3 F018          	movff	prodl,??_set_EVENT
 10831   000754  CFF4 F019          	movff	prodh,??_set_EVENT+1
 10832   000758  51CC               	movf	(_time+1)& (0+255),w,b
 10833   00075A  2618               	addwf	??_set_EVENT^0,f,c
 10834   00075C  0E00               	movlw	0
 10835   00075E  2219               	addwfc	(??_set_EVENT+1)^0,f,c
 10836   000760  0EF0               	movlw	240
 10837   000762  2418               	addwf	??_set_EVENT^0,w,c
 10838   000764  6E59               	movwf	_hour^0,c
 10839   000766  0EFD               	movlw	253
 10840   000768  2019               	addwfc	(??_set_EVENT+1)^0,w,c
 10841   00076A  6E5A               	movwf	(_hour+1)^0,c
 10842                           
 10843                           ;main.c: 211:         minute=(time[3]-'0')*10+(time[4]-'0');
 10844   00076C  51CE               	movf	(_time+3)& (0+255),w,b
 10845   00076E  0D0A               	mullw	10
 10846   000770  CFF3 F018          	movff	prodl,??_set_EVENT
 10847   000774  CFF4 F019          	movff	prodh,??_set_EVENT+1
 10848   000778  51CF               	movf	(_time+4)& (0+255),w,b
 10849   00077A  2618               	addwf	??_set_EVENT^0,f,c
 10850   00077C  0E00               	movlw	0
 10851   00077E  2219               	addwfc	(??_set_EVENT+1)^0,f,c
 10852   000780  0EF0               	movlw	240
 10853   000782  2418               	addwf	??_set_EVENT^0,w,c
 10854   000784  6E54               	movwf	_minute^0,c
 10855   000786  0EFD               	movlw	253
 10856   000788  2019               	addwfc	(??_set_EVENT+1)^0,w,c
 10857   00078A  6E55               	movwf	(_minute+1)^0,c
 10858                           
 10859                           ;main.c: 212:         sec=(time[6]-'0')*10+(time[7]-'0');
 10860   00078C  51D1               	movf	(_time+6)& (0+255),w,b
 10861   00078E  0D0A               	mullw	10
 10862   000790  CFF3 F018          	movff	prodl,??_set_EVENT
 10863   000794  CFF4 F019          	movff	prodh,??_set_EVENT+1
 10864   000798  51D2               	movf	(_time+7)& (0+255),w,b
 10865   00079A  2618               	addwf	??_set_EVENT^0,f,c
 10866   00079C  0E00               	movlw	0
 10867   00079E  2219               	addwfc	(??_set_EVENT+1)^0,f,c
 10868   0007A0  0EF0               	movlw	240
 10869   0007A2  2418               	addwf	??_set_EVENT^0,w,c
 10870   0007A4  6E52               	movwf	_sec^0,c
 10871   0007A6  0EFD               	movlw	253
 10872   0007A8  2019               	addwfc	(??_set_EVENT+1)^0,w,c
 10873   0007AA  6E53               	movwf	(_sec+1)^0,c
 10874   0007AC                     
 10875                           ; BSR set to: 0
 10876                           ;main.c: 213:         AM_PM=(time[0] & (1 << 5)) ? 1 : 0;
 10877   0007AC  BBCB               	btfsc	_time& (0+255),5,b
 10878   0007AE  EFDB  F003         	goto	u2771
 10879   0007B2  EFDE  F003         	goto	u2770
 10880   0007B6                     u2771:
 10881   0007B6  0E01               	movlw	1
 10882   0007B8  EFDF  F003         	goto	u2780
 10883   0007BC                     u2770:
 10884   0007BC  0E00               	movlw	0
 10885   0007BE                     u2780:
 10886   0007BE  6E50               	movwf	_AM_PM^0,c
 10887   0007C0  6A51               	clrf	(_AM_PM+1)^0,c
 10888   0007C2                     
 10889                           ; BSR set to: 0
 10890                           ;main.c: 214:         once=0;
 10891   0007C2  6BEE               	clrf	_once& (0+255),b
 10892   0007C4                     l3417:
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;main.c: 218:         if(event_field==1)
 10896   0007C4  05EF               	decf	_event_field& (0+255),w,b
 10897   0007C6  A4D8               	btfss	status,2,c
 10898   0007C8  EFE8  F003         	goto	u2791
 10899   0007CC  EFEA  F003         	goto	u2790
 10900   0007D0                     u2791:
 10901   0007D0  EF0A  F004         	goto	l3425
 10902   0007D4                     u2790:
 10903   0007D4                     
 10904                           ; BSR set to: 0
 10905                           ;main.c: 219:         {;main.c: 221:           if(key==11)
 10906   0007D4  0E0B               	movlw	11
 10907   0007D6  199F               	xorwf	_key& (0+255),w,b
 10908   0007D8  A4D8               	btfss	status,2,c
 10909   0007DA  EFF1  F003         	goto	u2801
 10910   0007DE  EFF3  F003         	goto	u2800
 10911   0007E2                     u2801:
 10912   0007E2  EFDD  F004         	goto	l3471
 10913   0007E6                     u2800:
 10914   0007E6                     
 10915                           ; BSR set to: 0
 10916                           ;main.c: 222:           {;main.c: 223:           if(hour++>=11)
 10917   0007E6  5059               	movf	_hour^0,w,c
 10918   0007E8  6E18               	movwf	??_set_EVENT^0,c
 10919   0007EA  505A               	movf	(_hour+1)^0,w,c
 10920   0007EC  6E19               	movwf	(??_set_EVENT+1)^0,c
 10921   0007EE  4A59               	infsnz	_hour^0,f,c
 10922   0007F0  2A5A               	incf	(_hour+1)^0,f,c
 10923   0007F2  5019               	movf	(??_set_EVENT+1)^0,w,c
 10924   0007F4  E109               	bnz	u2810
 10925   0007F6  0E0B               	movlw	11
 10926   0007F8  5C18               	subwf	??_set_EVENT^0,w,c
 10927   0007FA  A0D8               	btfss	status,0,c
 10928   0007FC  EF02  F004         	goto	u2811
 10929   000800  EF04  F004         	goto	u2810
 10930   000804                     u2811:
 10931   000804  EFDD  F004         	goto	l3471
 10932   000808                     u2810:
 10933   000808                     
 10934                           ; BSR set to: 0
 10935                           ;main.c: 224:           {;main.c: 225:             hour=1;
 10936   000808  0E00               	movlw	0
 10937   00080A  6E5A               	movwf	(_hour+1)^0,c
 10938   00080C  0E01               	movlw	1
 10939   00080E  6E59               	movwf	_hour^0,c
 10940   000810  EFDD  F004         	goto	l3471
 10941   000814                     l3425:
 10942                           
 10943                           ; BSR set to: 0
 10944   000814  0E02               	movlw	2
 10945   000816  19EF               	xorwf	_event_field& (0+255),w,b
 10946   000818  A4D8               	btfss	status,2,c
 10947   00081A  EF11  F004         	goto	u2821
 10948   00081E  EF13  F004         	goto	u2820
 10949   000822                     u2821:
 10950   000822  EF2E  F004         	goto	l3433
 10951   000826                     u2820:
 10952   000826                     
 10953                           ; BSR set to: 0
 10954                           ;main.c: 230:       {;main.c: 232:         if(key==11)
 10955   000826  0E0B               	movlw	11
 10956   000828  199F               	xorwf	_key& (0+255),w,b
 10957   00082A  A4D8               	btfss	status,2,c
 10958   00082C  EF1A  F004         	goto	u2831
 10959   000830  EF1C  F004         	goto	u2830
 10960   000834                     u2831:
 10961   000834  EFDD  F004         	goto	l3471
 10962   000838                     u2830:
 10963   000838                     
 10964                           ; BSR set to: 0
 10965                           ;main.c: 233:         {;main.c: 234:         if(minute++==59)
 10966   000838  4A54               	infsnz	_minute^0,f,c
 10967   00083A  2A55               	incf	(_minute+1)^0,f,c
 10968   00083C  0E3C               	movlw	60
 10969   00083E  1854               	xorwf	_minute^0,w,c
 10970   000840  1055               	iorwf	(_minute+1)^0,w,c
 10971   000842  A4D8               	btfss	status,2,c
 10972   000844  EF26  F004         	goto	u2841
 10973   000848  EF28  F004         	goto	u2840
 10974   00084C                     u2841:
 10975   00084C  EFDD  F004         	goto	l3471
 10976   000850                     u2840:
 10977   000850                     
 10978                           ; BSR set to: 0
 10979                           ;main.c: 235:         {;main.c: 236:             minute=0;
 10980   000850  0E00               	movlw	0
 10981   000852  6E55               	movwf	(_minute+1)^0,c
 10982   000854  0E00               	movlw	0
 10983   000856  6E54               	movwf	_minute^0,c
 10984   000858  EFDD  F004         	goto	l3471
 10985   00085C                     l3433:
 10986                           
 10987                           ; BSR set to: 0
 10988   00085C  0E03               	movlw	3
 10989   00085E  19F0               	xorwf	_change_field& (0+255),w,b
 10990   000860  A4D8               	btfss	status,2,c
 10991   000862  EF35  F004         	goto	u2851
 10992   000866  EF37  F004         	goto	u2850
 10993   00086A                     u2851:
 10994   00086A  EF4F  F004         	goto	l3439
 10995   00086E                     u2850:
 10996   00086E                     
 10997                           ; BSR set to: 0
 10998                           ;main.c: 243:      {;main.c: 245:          if(key==11)
 10999   00086E  0E0B               	movlw	11
 11000   000870  199F               	xorwf	_key& (0+255),w,b
 11001   000872  A4D8               	btfss	status,2,c
 11002   000874  EF3E  F004         	goto	u2861
 11003   000878  EF40  F004         	goto	u2860
 11004   00087C                     u2861:
 11005   00087C  EFDD  F004         	goto	l3471
 11006   000880                     u2860:
 11007   000880                     
 11008                           ; BSR set to: 0
 11009                           ;main.c: 246:           AM_PM=!AM_PM;
 11010   000880  5050               	movf	_AM_PM^0,w,c
 11011   000882  1051               	iorwf	(_AM_PM+1)^0,w,c
 11012   000884  B4D8               	btfsc	status,2,c
 11013   000886  EF47  F004         	goto	u2871
 11014   00088A  EF4A  F004         	goto	u2870
 11015   00088E                     u2871:
 11016   00088E  0E01               	movlw	1
 11017   000890  EF4B  F004         	goto	u2880
 11018   000894                     u2870:
 11019   000894  0E00               	movlw	0
 11020   000896                     u2880:
 11021   000896  6E50               	movwf	_AM_PM^0,c
 11022   000898  6A51               	clrf	(_AM_PM+1)^0,c
 11023   00089A  EFDD  F004         	goto	l3471
 11024   00089E                     l3439:
 11025                           
 11026                           ; BSR set to: 0
 11027   00089E  0E04               	movlw	4
 11028   0008A0  19EF               	xorwf	_event_field& (0+255),w,b
 11029   0008A2  A4D8               	btfss	status,2,c
 11030   0008A4  EF56  F004         	goto	u2891
 11031   0008A8  EF58  F004         	goto	u2890
 11032   0008AC                     u2891:
 11033   0008AC  EF73  F004         	goto	l3447
 11034   0008B0                     u2890:
 11035   0008B0                     
 11036                           ; BSR set to: 0
 11037                           ;main.c: 249:      {;main.c: 250:          if(key==11)
 11038   0008B0  0E0B               	movlw	11
 11039   0008B2  199F               	xorwf	_key& (0+255),w,b
 11040   0008B4  A4D8               	btfss	status,2,c
 11041   0008B6  EF5F  F004         	goto	u2901
 11042   0008BA  EF61  F004         	goto	u2900
 11043   0008BE                     u2901:
 11044   0008BE  EFDD  F004         	goto	l3471
 11045   0008C2                     u2900:
 11046   0008C2                     
 11047                           ; BSR set to: 0
 11048                           ;main.c: 251:          {;main.c: 252:              if(dur_hour++==12)
 11049   0008C2  4B97               	infsnz	_dur_hour& (0+255),f,b
 11050   0008C4  2B98               	incf	(_dur_hour+1)& (0+255),f,b
 11051   0008C6  0E0D               	movlw	13
 11052   0008C8  1997               	xorwf	_dur_hour& (0+255),w,b
 11053   0008CA  1198               	iorwf	(_dur_hour+1)& (0+255),w,b
 11054   0008CC  A4D8               	btfss	status,2,c
 11055   0008CE  EF6B  F004         	goto	u2911
 11056   0008D2  EF6D  F004         	goto	u2910
 11057   0008D6                     u2911:
 11058   0008D6  EFDD  F004         	goto	l3471
 11059   0008DA                     u2910:
 11060   0008DA                     
 11061                           ; BSR set to: 0
 11062                           ;main.c: 253:              {;main.c: 254:                  dur_hour=1;
 11063   0008DA  0E00               	movlw	0
 11064   0008DC  6F98               	movwf	(_dur_hour+1)& (0+255),b
 11065   0008DE  0E01               	movlw	1
 11066   0008E0  6F97               	movwf	_dur_hour& (0+255),b
 11067   0008E2  EFDD  F004         	goto	l3471
 11068   0008E6                     l3447:
 11069                           
 11070                           ; BSR set to: 0
 11071   0008E6  0E05               	movlw	5
 11072   0008E8  19EF               	xorwf	_event_field& (0+255),w,b
 11073   0008EA  A4D8               	btfss	status,2,c
 11074   0008EC  EF7A  F004         	goto	u2921
 11075   0008F0  EF7C  F004         	goto	u2920
 11076   0008F4                     u2921:
 11077   0008F4  EF97  F004         	goto	l3455
 11078   0008F8                     u2920:
 11079   0008F8                     
 11080                           ; BSR set to: 0
 11081                           ;main.c: 259:      {;main.c: 261:          if(key==11)
 11082   0008F8  0E0B               	movlw	11
 11083   0008FA  199F               	xorwf	_key& (0+255),w,b
 11084   0008FC  A4D8               	btfss	status,2,c
 11085   0008FE  EF83  F004         	goto	u2931
 11086   000902  EF85  F004         	goto	u2930
 11087   000906                     u2931:
 11088   000906  EFDD  F004         	goto	l3471
 11089   00090A                     u2930:
 11090   00090A                     
 11091                           ; BSR set to: 0
 11092                           ;main.c: 262:          {;main.c: 263:              if(dur_minute++==30)
 11093   00090A  4BEA               	infsnz	_dur_minute& (0+255),f,b
 11094   00090C  2BEB               	incf	(_dur_minute+1)& (0+255),f,b
 11095   00090E  0E1F               	movlw	31
 11096   000910  19EA               	xorwf	_dur_minute& (0+255),w,b
 11097   000912  11EB               	iorwf	(_dur_minute+1)& (0+255),w,b
 11098   000914  A4D8               	btfss	status,2,c
 11099   000916  EF8F  F004         	goto	u2941
 11100   00091A  EF91  F004         	goto	u2940
 11101   00091E                     u2941:
 11102   00091E  EFDD  F004         	goto	l3471
 11103   000922                     u2940:
 11104   000922                     
 11105                           ; BSR set to: 0
 11106                           ;main.c: 264:              {;main.c: 265:                  dur_minute=1;
 11107   000922  0E00               	movlw	0
 11108   000924  6FEB               	movwf	(_dur_minute+1)& (0+255),b
 11109   000926  0E01               	movlw	1
 11110   000928  6FEA               	movwf	_dur_minute& (0+255),b
 11111   00092A  EFDD  F004         	goto	l3471
 11112   00092E                     l3455:
 11113                           
 11114                           ; BSR set to: 0
 11115   00092E  0E06               	movlw	6
 11116   000930  19EF               	xorwf	_event_field& (0+255),w,b
 11117   000932  A4D8               	btfss	status,2,c
 11118   000934  EF9E  F004         	goto	u2951
 11119   000938  EFA0  F004         	goto	u2950
 11120   00093C                     u2951:
 11121   00093C  EFBB  F004         	goto	l3463
 11122   000940                     u2950:
 11123   000940                     
 11124                           ; BSR set to: 0
 11125                           ;main.c: 269:      {;main.c: 271:          if(key==11)
 11126   000940  0E0B               	movlw	11
 11127   000942  199F               	xorwf	_key& (0+255),w,b
 11128   000944  A4D8               	btfss	status,2,c
 11129   000946  EFA7  F004         	goto	u2961
 11130   00094A  EFA9  F004         	goto	u2960
 11131   00094E                     u2961:
 11132   00094E  EFDD  F004         	goto	l3471
 11133   000952                     u2960:
 11134   000952                     
 11135                           ; BSR set to: 0
 11136                           ;main.c: 272:          {;main.c: 273:              if(dur_sec++==59)
 11137   000952  4B95               	infsnz	_dur_sec& (0+255),f,b
 11138   000954  2B96               	incf	(_dur_sec+1)& (0+255),f,b
 11139   000956  0E3C               	movlw	60
 11140   000958  1995               	xorwf	_dur_sec& (0+255),w,b
 11141   00095A  1196               	iorwf	(_dur_sec+1)& (0+255),w,b
 11142   00095C  A4D8               	btfss	status,2,c
 11143   00095E  EFB3  F004         	goto	u2971
 11144   000962  EFB5  F004         	goto	u2970
 11145   000966                     u2971:
 11146   000966  EFDD  F004         	goto	l3471
 11147   00096A                     u2970:
 11148   00096A                     
 11149                           ; BSR set to: 0
 11150                           ;main.c: 274:              {;main.c: 275:                  dur_sec=0;
 11151   00096A  0E00               	movlw	0
 11152   00096C  6F96               	movwf	(_dur_sec+1)& (0+255),b
 11153   00096E  0E00               	movlw	0
 11154   000970  6F95               	movwf	_dur_sec& (0+255),b
 11155   000972  EFDD  F004         	goto	l3471
 11156   000976                     l3463:
 11157                           
 11158                           ; BSR set to: 0
 11159   000976  0E07               	movlw	7
 11160   000978  19EF               	xorwf	_event_field& (0+255),w,b
 11161   00097A  A4D8               	btfss	status,2,c
 11162   00097C  EFC2  F004         	goto	u2981
 11163   000980  EFC4  F004         	goto	u2980
 11164   000984                     u2981:
 11165   000984  EFDD  F004         	goto	l3471
 11166   000988                     u2980:
 11167   000988                     
 11168                           ; BSR set to: 0
 11169                           ;main.c: 280:      {;main.c: 281:          if(key==11)
 11170   000988  0E0B               	movlw	11
 11171   00098A  199F               	xorwf	_key& (0+255),w,b
 11172   00098C  A4D8               	btfss	status,2,c
 11173   00098E  EFCB  F004         	goto	u2991
 11174   000992  EFCD  F004         	goto	u2990
 11175   000996                     u2991:
 11176   000996  EFDD  F004         	goto	l3471
 11177   00099A                     u2990:
 11178   00099A                     
 11179                           ; BSR set to: 0
 11180                           ;main.c: 282:          {;main.c: 283:              if(w++==2)
 11181   00099A  4B93               	infsnz	_w& (0+255),f,b
 11182   00099C  2B94               	incf	(_w+1)& (0+255),f,b
 11183   00099E  0E03               	movlw	3
 11184   0009A0  1993               	xorwf	_w& (0+255),w,b
 11185   0009A2  1194               	iorwf	(_w+1)& (0+255),w,b
 11186   0009A4  A4D8               	btfss	status,2,c
 11187   0009A6  EFD7  F004         	goto	u3001
 11188   0009AA  EFD9  F004         	goto	u3000
 11189   0009AE                     u3001:
 11190   0009AE  EFDD  F004         	goto	l3471
 11191   0009B2                     u3000:
 11192   0009B2                     
 11193                           ; BSR set to: 0
 11194                           ;main.c: 284:              {;main.c: 285:                  w=0;
 11195   0009B2  0E00               	movlw	0
 11196   0009B4  6F94               	movwf	(_w+1)& (0+255),b
 11197   0009B6  0E00               	movlw	0
 11198   0009B8  6F93               	movwf	_w& (0+255),b
 11199   0009BA                     l3471:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;main.c: 289:         if(w==0)
 11203   0009BA  5193               	movf	_w& (0+255),w,b
 11204   0009BC  1194               	iorwf	(_w+1)& (0+255),w,b
 11205   0009BE  A4D8               	btfss	status,2,c
 11206   0009C0  EFE4  F004         	goto	u3011
 11207   0009C4  EFE6  F004         	goto	u3010
 11208   0009C8                     u3011:
 11209   0009C8  EFEA  F004         	goto	l3475
 11210   0009CC                     u3010:
 11211   0009CC                     
 11212                           ; BSR set to: 0
 11213                           ;main.c: 290:         {;main.c: 291:             duration[9]='W';
 11214   0009CC  0E57               	movlw	87
 11215   0009CE  6FAA               	movwf	(_duration+9)& (0+255),b
 11216                           
 11217                           ;main.c: 292:         }else if(w==1)
 11218   0009D0  EF03  F005         	goto	l3483
 11219   0009D4                     l3475:
 11220                           
 11221                           ; BSR set to: 0
 11222   0009D4  0593               	decf	_w& (0+255),w,b
 11223   0009D6  1194               	iorwf	(_w+1)& (0+255),w,b
 11224   0009D8  A4D8               	btfss	status,2,c
 11225   0009DA  EFF1  F004         	goto	u3021
 11226   0009DE  EFF3  F004         	goto	u3020
 11227   0009E2                     u3021:
 11228   0009E2  EFF7  F004         	goto	l3479
 11229   0009E6                     u3020:
 11230   0009E6                     
 11231                           ; BSR set to: 0
 11232                           ;main.c: 293:         {;main.c: 294:             duration[9]='D';
 11233   0009E6  0E44               	movlw	68
 11234   0009E8  6FAA               	movwf	(_duration+9)& (0+255),b
 11235                           
 11236                           ;main.c: 296:         }else if(w==2)
 11237   0009EA  EF03  F005         	goto	l3483
 11238   0009EE                     l3479:
 11239                           
 11240                           ; BSR set to: 0
 11241   0009EE  0E02               	movlw	2
 11242   0009F0  1993               	xorwf	_w& (0+255),w,b
 11243   0009F2  1194               	iorwf	(_w+1)& (0+255),w,b
 11244   0009F4  A4D8               	btfss	status,2,c
 11245   0009F6  EFFF  F004         	goto	u3031
 11246   0009FA  EF01  F005         	goto	u3030
 11247   0009FE                     u3031:
 11248   0009FE  EF03  F005         	goto	l3483
 11249   000A02                     u3030:
 11250   000A02                     
 11251                           ; BSR set to: 0
 11252                           ;main.c: 297:         {;main.c: 298:             duration[9]='O';
 11253   000A02  0E4F               	movlw	79
 11254   000A04  6FAA               	movwf	(_duration+9)& (0+255),b
 11255   000A06                     l3483:
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;main.c: 302:     STORE_TIME[0]=hour/10+'0';
 11259   000A06  C059  F005         	movff	_hour,___lwdiv@dividend
 11260   000A0A  C05A  F006         	movff	_hour+1,___lwdiv@dividend+1
 11261   000A0E  0E00               	movlw	0
 11262   000A10  6E08               	movwf	(___lwdiv@divisor+1)^0,c
 11263   000A12  0E0A               	movlw	10
 11264   000A14  6E07               	movwf	___lwdiv@divisor^0,c
 11265   000A16  EC7A  F013         	call	___lwdiv	;wreg free
 11266   000A1A  5005               	movf	?___lwdiv^0,w,c
 11267   000A1C  0F30               	addlw	48
 11268   000A1E  0100               	movlb	0	; () banked
 11269   000A20  6FC1               	movwf	_STORE_TIME& (0+255),b
 11270   000A22                     
 11271                           ; BSR set to: 0
 11272                           ;main.c: 303:     STORE_TIME[1]=hour%10+'0';
 11273   000A22  C059  F005         	movff	_hour,___lwmod@dividend
 11274   000A26  C05A  F006         	movff	_hour+1,___lwmod@dividend+1
 11275   000A2A  0E00               	movlw	0
 11276   000A2C  6E08               	movwf	(___lwmod@divisor+1)^0,c
 11277   000A2E  0E0A               	movlw	10
 11278   000A30  6E07               	movwf	___lwmod@divisor^0,c
 11279   000A32  EC55  F014         	call	___lwmod	;wreg free
 11280   000A36  5005               	movf	?___lwmod^0,w,c
 11281   000A38  0F30               	addlw	48
 11282   000A3A  0100               	movlb	0	; () banked
 11283   000A3C  6FC2               	movwf	(_STORE_TIME+1)& (0+255),b
 11284                           
 11285                           ;main.c: 304:     STORE_TIME[2]=':';
 11286   000A3E  0E3A               	movlw	58
 11287   000A40  6FC3               	movwf	(_STORE_TIME+2)& (0+255),b
 11288   000A42                     
 11289                           ; BSR set to: 0
 11290                           ;main.c: 305:     STORE_TIME[3]=minute/10+'0';
 11291   000A42  C054  F005         	movff	_minute,___lwdiv@dividend
 11292   000A46  C055  F006         	movff	_minute+1,___lwdiv@dividend+1
 11293   000A4A  0E00               	movlw	0
 11294   000A4C  6E08               	movwf	(___lwdiv@divisor+1)^0,c
 11295   000A4E  0E0A               	movlw	10
 11296   000A50  6E07               	movwf	___lwdiv@divisor^0,c
 11297   000A52  EC7A  F013         	call	___lwdiv	;wreg free
 11298   000A56  5005               	movf	?___lwdiv^0,w,c
 11299   000A58  0F30               	addlw	48
 11300   000A5A  0100               	movlb	0	; () banked
 11301   000A5C  6FC4               	movwf	(_STORE_TIME+3)& (0+255),b
 11302   000A5E                     
 11303                           ; BSR set to: 0
 11304                           ;main.c: 306:     STORE_TIME[4]=minute%10+'0';
 11305   000A5E  C054  F005         	movff	_minute,___lwmod@dividend
 11306   000A62  C055  F006         	movff	_minute+1,___lwmod@dividend+1
 11307   000A66  0E00               	movlw	0
 11308   000A68  6E08               	movwf	(___lwmod@divisor+1)^0,c
 11309   000A6A  0E0A               	movlw	10
 11310   000A6C  6E07               	movwf	___lwmod@divisor^0,c
 11311   000A6E  EC55  F014         	call	___lwmod	;wreg free
 11312   000A72  5005               	movf	?___lwmod^0,w,c
 11313   000A74  0F30               	addlw	48
 11314   000A76  0100               	movlb	0	; () banked
 11315   000A78  6FC5               	movwf	(_STORE_TIME+4)& (0+255),b
 11316                           
 11317                           ;main.c: 307:     STORE_TIME[5]=' ';
 11318   000A7A  0E20               	movlw	32
 11319   000A7C  6FC6               	movwf	(_STORE_TIME+5)& (0+255),b
 11320   000A7E                     
 11321                           ; BSR set to: 0
 11322                           ;main.c: 308:     if(AM_PM)
 11323   000A7E  5050               	movf	_AM_PM^0,w,c
 11324   000A80  1051               	iorwf	(_AM_PM+1)^0,w,c
 11325   000A82  B4D8               	btfsc	status,2,c
 11326   000A84  EF46  F005         	goto	u3041
 11327   000A88  EF48  F005         	goto	u3040
 11328   000A8C                     u3041:
 11329   000A8C  EF4E  F005         	goto	l3495
 11330   000A90                     u3040:
 11331   000A90                     
 11332                           ; BSR set to: 0
 11333                           ;main.c: 309:     {;main.c: 310:         STORE_TIME[6]='A';
 11334   000A90  0E41               	movlw	65
 11335   000A92  6FC7               	movwf	(_STORE_TIME+6)& (0+255),b
 11336                           
 11337                           ;main.c: 311:         STORE_TIME[7]='M';
 11338   000A94  0E4D               	movlw	77
 11339   000A96  6FC8               	movwf	(_STORE_TIME+7)& (0+255),b
 11340                           
 11341                           ;main.c: 312:     }
 11342   000A98  EF52  F005         	goto	l3497
 11343   000A9C                     l3495:
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;main.c: 314:     {;main.c: 315:         STORE_TIME[6]='P';
 11347   000A9C  0E50               	movlw	80
 11348   000A9E  6FC7               	movwf	(_STORE_TIME+6)& (0+255),b
 11349                           
 11350                           ;main.c: 316:         STORE_TIME[7]='M';
 11351   000AA0  0E4D               	movlw	77
 11352   000AA2  6FC8               	movwf	(_STORE_TIME+7)& (0+255),b
 11353   000AA4                     l3497:
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;main.c: 318:     STORE_TIME[8]='\0';
 11357   000AA4  6BC9               	clrf	(_STORE_TIME+8)& (0+255),b
 11358   000AA6                     
 11359                           ; BSR set to: 0
 11360                           ;main.c: 319:      duration[0]=dur_hour/10+'0';
 11361   000AA6  C097  F005         	movff	_dur_hour,___lwdiv@dividend
 11362   000AAA  C098  F006         	movff	_dur_hour+1,___lwdiv@dividend+1
 11363   000AAE  0E00               	movlw	0
 11364   000AB0  6E08               	movwf	(___lwdiv@divisor+1)^0,c
 11365   000AB2  0E0A               	movlw	10
 11366   000AB4  6E07               	movwf	___lwdiv@divisor^0,c
 11367   000AB6  EC7A  F013         	call	___lwdiv	;wreg free
 11368   000ABA  5005               	movf	?___lwdiv^0,w,c
 11369   000ABC  0F30               	addlw	48
 11370   000ABE  0100               	movlb	0	; () banked
 11371   000AC0  6FA1               	movwf	_duration& (0+255),b
 11372   000AC2                     
 11373                           ; BSR set to: 0
 11374                           ;main.c: 320:      duration[1]=dur_hour%10+'0';
 11375   000AC2  C097  F005         	movff	_dur_hour,___lwmod@dividend
 11376   000AC6  C098  F006         	movff	_dur_hour+1,___lwmod@dividend+1
 11377   000ACA  0E00               	movlw	0
 11378   000ACC  6E08               	movwf	(___lwmod@divisor+1)^0,c
 11379   000ACE  0E0A               	movlw	10
 11380   000AD0  6E07               	movwf	___lwmod@divisor^0,c
 11381   000AD2  EC55  F014         	call	___lwmod	;wreg free
 11382   000AD6  5005               	movf	?___lwmod^0,w,c
 11383   000AD8  0F30               	addlw	48
 11384   000ADA  0100               	movlb	0	; () banked
 11385   000ADC  6FA2               	movwf	(_duration+1)& (0+255),b
 11386                           
 11387                           ;main.c: 321:      duration[2]=':';
 11388   000ADE  0E3A               	movlw	58
 11389   000AE0  6FA3               	movwf	(_duration+2)& (0+255),b
 11390   000AE2                     
 11391                           ; BSR set to: 0
 11392                           ;main.c: 322:      duration[3]=dur_minute/10+'0';
 11393   000AE2  C0EA  F005         	movff	_dur_minute,___lwdiv@dividend
 11394   000AE6  C0EB  F006         	movff	_dur_minute+1,___lwdiv@dividend+1
 11395   000AEA  0E00               	movlw	0
 11396   000AEC  6E08               	movwf	(___lwdiv@divisor+1)^0,c
 11397   000AEE  0E0A               	movlw	10
 11398   000AF0  6E07               	movwf	___lwdiv@divisor^0,c
 11399   000AF2  EC7A  F013         	call	___lwdiv	;wreg free
 11400   000AF6  5005               	movf	?___lwdiv^0,w,c
 11401   000AF8  0F30               	addlw	48
 11402   000AFA  0100               	movlb	0	; () banked
 11403   000AFC  6FA4               	movwf	(_duration+3)& (0+255),b
 11404   000AFE                     
 11405                           ; BSR set to: 0
 11406                           ;main.c: 323:      duration[4]=dur_minute%10+'0';
 11407   000AFE  C0EA  F005         	movff	_dur_minute,___lwmod@dividend
 11408   000B02  C0EB  F006         	movff	_dur_minute+1,___lwmod@dividend+1
 11409   000B06  0E00               	movlw	0
 11410   000B08  6E08               	movwf	(___lwmod@divisor+1)^0,c
 11411   000B0A  0E0A               	movlw	10
 11412   000B0C  6E07               	movwf	___lwmod@divisor^0,c
 11413   000B0E  EC55  F014         	call	___lwmod	;wreg free
 11414   000B12  5005               	movf	?___lwmod^0,w,c
 11415   000B14  0F30               	addlw	48
 11416   000B16  0100               	movlb	0	; () banked
 11417   000B18  6FA5               	movwf	(_duration+4)& (0+255),b
 11418                           
 11419                           ;main.c: 324:      duration[5]=':';
 11420   000B1A  0E3A               	movlw	58
 11421   000B1C  6FA6               	movwf	(_duration+5)& (0+255),b
 11422   000B1E                     
 11423                           ; BSR set to: 0
 11424                           ;main.c: 325:      duration[6]=dur_sec/10+'0';
 11425   000B1E  C095  F005         	movff	_dur_sec,___lwdiv@dividend
 11426   000B22  C096  F006         	movff	_dur_sec+1,___lwdiv@dividend+1
 11427   000B26  0E00               	movlw	0
 11428   000B28  6E08               	movwf	(___lwdiv@divisor+1)^0,c
 11429   000B2A  0E0A               	movlw	10
 11430   000B2C  6E07               	movwf	___lwdiv@divisor^0,c
 11431   000B2E  EC7A  F013         	call	___lwdiv	;wreg free
 11432   000B32  5005               	movf	?___lwdiv^0,w,c
 11433   000B34  0F30               	addlw	48
 11434   000B36  0100               	movlb	0	; () banked
 11435   000B38  6FA7               	movwf	(_duration+6)& (0+255),b
 11436   000B3A                     
 11437                           ; BSR set to: 0
 11438                           ;main.c: 326:      duration[7]=dur_sec%10+'0';
 11439   000B3A  C095  F005         	movff	_dur_sec,___lwmod@dividend
 11440   000B3E  C096  F006         	movff	_dur_sec+1,___lwmod@dividend+1
 11441   000B42  0E00               	movlw	0
 11442   000B44  6E08               	movwf	(___lwmod@divisor+1)^0,c
 11443   000B46  0E0A               	movlw	10
 11444   000B48  6E07               	movwf	___lwmod@divisor^0,c
 11445   000B4A  EC55  F014         	call	___lwmod	;wreg free
 11446   000B4E  5005               	movf	?___lwmod^0,w,c
 11447   000B50  0F30               	addlw	48
 11448   000B52  0100               	movlb	0	; () banked
 11449   000B54  6FA8               	movwf	(_duration+7)& (0+255),b
 11450                           
 11451                           ;main.c: 327:      duration[8]=' ';
 11452   000B56  0E20               	movlw	32
 11453   000B58  6FA9               	movwf	(_duration+8)& (0+255),b
 11454   000B5A                     
 11455                           ; BSR set to: 0
 11456                           ;main.c: 328:      duration[10]='\0';
 11457   000B5A  6BAB               	clrf	(_duration+10)& (0+255),b
 11458   000B5C                     
 11459                           ; BSR set to: 0
 11460                           ;main.c: 329:     if(key==2)
 11461   000B5C  0E02               	movlw	2
 11462   000B5E  199F               	xorwf	_key& (0+255),w,b
 11463   000B60  A4D8               	btfss	status,2,c
 11464   000B62  EFB5  F005         	goto	u3051
 11465   000B66  EFB7  F005         	goto	u3050
 11466   000B6A                     u3051:
 11467   000B6A  EFD0  F005         	goto	l3531
 11468   000B6E                     u3050:
 11469   000B6E                     
 11470                           ; BSR set to: 0
 11471                           ;main.c: 330:     {;main.c: 331:         if(event_count==10)
 11472   000B6E  0E0A               	movlw	10
 11473   000B70  1848               	xorwf	_event_count^0,w,c
 11474   000B72  1049               	iorwf	(_event_count+1)^0,w,c
 11475   000B74  A4D8               	btfss	status,2,c
 11476   000B76  EFBF  F005         	goto	u3061
 11477   000B7A  EFC1  F005         	goto	u3060
 11478   000B7E                     u3061:
 11479   000B7E  EFC5  F005         	goto	l3519
 11480   000B82                     u3060:
 11481   000B82                     
 11482                           ; BSR set to: 0
 11483                           ;main.c: 332:         {;main.c: 333:             event_count=0;
 11484   000B82  0E00               	movlw	0
 11485   000B84  6E49               	movwf	(_event_count+1)^0,c
 11486   000B86  0E00               	movlw	0
 11487   000B88  6E48               	movwf	_event_count^0,c
 11488   000B8A                     l3519:
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;main.c: 335:         write();
 11492   000B8A  ECF0  F00D         	call	_write	;wreg free
 11493   000B8E                     
 11494                           ;main.c: 339:         f=0;
 11495   000B8E  0100               	movlb	0	; () banked
 11496   000B90  6B9E               	clrf	_f& (0+255),b
 11497   000B92                     
 11498                           ; BSR set to: 0
 11499                           ;main.c: 340:         flag=0;
 11500   000B92  6BA0               	clrf	_flag& (0+255),b
 11501   000B94                     
 11502                           ; BSR set to: 0
 11503                           ;main.c: 341:         stop=0;
 11504   000B94  0E00               	movlw	0
 11505   000B96  6F84               	movwf	(_stop+1)& (0+255),b
 11506   000B98  0E00               	movlw	0
 11507   000B9A  6F83               	movwf	_stop& (0+255),b
 11508   000B9C                     
 11509                           ; BSR set to: 0
 11510                           ;main.c: 342:         GIE=1;
 11511   000B9C  8EF2               	bsf	4082,7,c	;volatile
 11512   000B9E                     
 11513                           ; BSR set to: 0
 11514                           ;main.c: 343:         PEIE=1;
 11515   000B9E  8CF2               	bsf	4082,6,c	;volatile
 11516   000BA0                     l3531:
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;main.c: 345:    clcd_print("TIME",(0x80 + (0)));
 11520   000BA0  0EEC               	movlw	low STR_8
 11521   000BA2  6E07               	movwf	clcd_print@data^0,c
 11522   000BA4  0E2F               	movlw	high STR_8
 11523   000BA6  6E08               	movwf	(clcd_print@data+1)^0,c
 11524   000BA8  0E80               	movlw	128
 11525   000BAA  6E09               	movwf	clcd_print@addr^0,c
 11526   000BAC  ECEA  F013         	call	_clcd_print	;wreg free
 11527   000BB0                     
 11528                           ;main.c: 346:    clcd_print(STORE_TIME,(0x80 + (4)));
 11529   000BB0  0EC1               	movlw	low _STORE_TIME
 11530   000BB2  6E07               	movwf	clcd_print@data^0,c
 11531   000BB4  6A08               	clrf	(clcd_print@data+1)^0,c
 11532   000BB6  0E84               	movlw	132
 11533   000BB8  6E09               	movwf	clcd_print@addr^0,c
 11534   000BBA  ECEA  F013         	call	_clcd_print	;wreg free
 11535   000BBE                     
 11536                           ;main.c: 347:    clcd_print("   ",(0x80 + (12)));
 11537   000BBE  0E66               	movlw	low (STR_11+13)
 11538   000BC0  6E07               	movwf	clcd_print@data^0,c
 11539   000BC2  0E2F               	movlw	high (STR_11+13)
 11540   000BC4  6E08               	movwf	(clcd_print@data+1)^0,c
 11541   000BC6  0E8C               	movlw	140
 11542   000BC8  6E09               	movwf	clcd_print@addr^0,c
 11543   000BCA  ECEA  F013         	call	_clcd_print	;wreg free
 11544   000BCE                     
 11545                           ;main.c: 348:     clcd_putch('*',(0x80 + (15)));
 11546   000BCE  0E8F               	movlw	143
 11547   000BD0  6E07               	movwf	clcd_putch@addr^0,c
 11548   000BD2  0E2A               	movlw	42
 11549   000BD4  ECD1  F015         	call	_clcd_putch
 11550   000BD8                     
 11551                           ;main.c: 349:    clcd_print("DUR - ",(0xC0 + (0)));
 11552   000BD8  0ED5               	movlw	low STR_10
 11553   000BDA  6E07               	movwf	clcd_print@data^0,c
 11554   000BDC  0E2F               	movlw	high STR_10
 11555   000BDE  6E08               	movwf	(clcd_print@data+1)^0,c
 11556   000BE0  0EC0               	movlw	192
 11557   000BE2  6E09               	movwf	clcd_print@addr^0,c
 11558   000BE4  ECEA  F013         	call	_clcd_print	;wreg free
 11559   000BE8                     
 11560                           ;main.c: 350:    clcd_print(duration,(0xC0 + (6)));
 11561   000BE8  0EA1               	movlw	low _duration
 11562   000BEA  6E07               	movwf	clcd_print@data^0,c
 11563   000BEC  6A08               	clrf	(clcd_print@data+1)^0,c
 11564   000BEE  0EC6               	movlw	198
 11565   000BF0  6E09               	movwf	clcd_print@addr^0,c
 11566   000BF2  ECEA  F013         	call	_clcd_print	;wreg free
 11567   000BF6                     l398:
 11568   000BF6  0012               	return		;funcret
 11569   000BF8                     __end_of_set_EVENT:
 11570                           	callstack 0
 11571                           
 11572 ;; *************** function _write *****************
 11573 ;; Defined at:
 11574 ;;		line 91 in file "main.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;		None
 11577 ;; Auto vars:     Size  Location     Type
 11578 ;;  j               2   21[COMRAM] int 
 11579 ;;  i               2   19[COMRAM] int 
 11580 ;;  i               2   17[COMRAM] int 
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1    wreg      void 
 11583 ;; Registers used:
 11584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11590 ;;      Params:         0       0       0       0       0       0       0
 11591 ;;      Locals:         6       0       0       0       0       0       0
 11592 ;;      Temps:          4       0       0       0       0       0       0
 11593 ;;      Totals:        10       0       0       0       0       0       0
 11594 ;;Total ram usage:       10 bytes
 11595 ;; Hardware stack levels used: 1
 11596 ;; Hardware stack levels required when called: 5
 11597 ;; This function calls:
 11598 ;;		___lwmod
 11599 ;;		_read_EEPROM
 11600 ;;		_write_EEPROM
 11601 ;; This function is called by:
 11602 ;;		_set_EVENT
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text34
 11607   001BE0                     __ptext34:
 11608                           	callstack 0
 11609   001BE0                     _write:
 11610                           	callstack 23
 11611   001BE0                     
 11612                           ;main.c: 93:     if (event_count < 10)
 11613   001BE0  5049               	movf	(_event_count+1)^0,w,c
 11614   001BE2  E107               	bnz	u2411
 11615   001BE4  0E0A               	movlw	10
 11616   001BE6  5C48               	subwf	_event_count^0,w,c
 11617   001BE8  B0D8               	btfsc	status,0,c
 11618   001BEA  EFF9  F00D         	goto	u2411
 11619   001BEE  EFFB  F00D         	goto	u2410
 11620   001BF2                     u2411:
 11621   001BF2  EFA6  F00E         	goto	l335
 11622   001BF6                     u2410:
 11623   001BF6                     
 11624                           ;main.c: 94:     {;main.c: 96:         for (int i = 0; i < 8; i++)
 11625   001BF6  0E00               	movlw	0
 11626   001BF8  6E13               	movwf	(write@i+1)^0,c
 11627   001BFA  0E00               	movlw	0
 11628   001BFC  6E12               	movwf	write@i^0,c
 11629   001BFE                     l3047:
 11630                           
 11631                           ;main.c: 97:         {;main.c: 98:             write_EEPROM(INC++, STORE_TIME[i]);
 11632   001BFE  5012               	movf	write@i^0,w,c
 11633   001C00  0FC1               	addlw	low _STORE_TIME
 11634   001C02  6ED9               	movwf	fsr2l,c
 11635   001C04  6ADA               	clrf	fsr2h,c
 11636   001C06  50DF               	movf	indf2,w,c
 11637   001C08  6E0A               	movwf	write_EEPROM@data^0,c
 11638   001C0A  0100               	movlb	0	; () banked
 11639   001C0C  51ED               	movf	_INC& (0+255),w,b
 11640   001C0E  ECF0  F014         	call	_write_EEPROM
 11641   001C12  0100               	movlb	0	; () banked
 11642   001C14  2BED               	incf	_INC& (0+255),f,b
 11643   001C16                     
 11644                           ; BSR set to: 0
 11645                           ;main.c: 99:         }
 11646   001C16  4A12               	infsnz	write@i^0,f,c
 11647   001C18  2A13               	incf	(write@i+1)^0,f,c
 11648   001C1A                     
 11649                           ; BSR set to: 0
 11650   001C1A  BE13               	btfsc	(write@i+1)^0,7,c
 11651   001C1C  EF19  F00E         	goto	u2421
 11652   001C20  5013               	movf	(write@i+1)^0,w,c
 11653   001C22  E109               	bnz	u2420
 11654   001C24  0E08               	movlw	8
 11655   001C26  5C12               	subwf	write@i^0,w,c
 11656   001C28  A0D8               	btfss	status,0,c
 11657   001C2A  EF19  F00E         	goto	u2421
 11658   001C2E  EF1B  F00E         	goto	u2420
 11659   001C32                     u2421:
 11660   001C32  EFFF  F00D         	goto	l3047
 11661   001C36                     u2420:
 11662   001C36                     
 11663                           ; BSR set to: 0
 11664                           ;main.c: 100:         for (int i = 0; i < 10; i++)
 11665   001C36  0E00               	movlw	0
 11666   001C38  6E15               	movwf	(write@i_307+1)^0,c
 11667   001C3A  0E00               	movlw	0
 11668   001C3C  6E14               	movwf	write@i_307^0,c
 11669   001C3E                     l3061:
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;main.c: 101:         {;main.c: 102:             write_EEPROM(INC++, duration[i]);
 11673   001C3E  5014               	movf	write@i_307^0,w,c
 11674   001C40  0FA1               	addlw	low _duration
 11675   001C42  6ED9               	movwf	fsr2l,c
 11676   001C44  6ADA               	clrf	fsr2h,c
 11677   001C46  50DF               	movf	indf2,w,c
 11678   001C48  6E0A               	movwf	write_EEPROM@data^0,c
 11679   001C4A  51ED               	movf	_INC& (0+255),w,b
 11680   001C4C  ECF0  F014         	call	_write_EEPROM
 11681   001C50  0100               	movlb	0	; () banked
 11682   001C52  2BED               	incf	_INC& (0+255),f,b
 11683   001C54                     
 11684                           ; BSR set to: 0
 11685                           ;main.c: 103:         }
 11686   001C54  4A14               	infsnz	write@i_307^0,f,c
 11687   001C56  2A15               	incf	(write@i_307+1)^0,f,c
 11688   001C58                     
 11689                           ; BSR set to: 0
 11690   001C58  BE15               	btfsc	(write@i_307+1)^0,7,c
 11691   001C5A  EF38  F00E         	goto	u2431
 11692   001C5E  5015               	movf	(write@i_307+1)^0,w,c
 11693   001C60  E109               	bnz	u2430
 11694   001C62  0E0A               	movlw	10
 11695   001C64  5C14               	subwf	write@i_307^0,w,c
 11696   001C66  A0D8               	btfss	status,0,c
 11697   001C68  EF38  F00E         	goto	u2431
 11698   001C6C  EF3A  F00E         	goto	u2430
 11699   001C70                     u2431:
 11700   001C70  EF1F  F00E         	goto	l3061
 11701   001C74                     u2430:
 11702   001C74                     
 11703                           ; BSR set to: 0
 11704                           ;main.c: 104:         event_count++;
 11705   001C74  4A48               	infsnz	_event_count^0,f,c
 11706   001C76  2A49               	incf	(_event_count+1)^0,f,c
 11707   001C78                     
 11708                           ; BSR set to: 0
 11709                           ;main.c: 105:         write_EEPROM(0x00, event_count+48);
 11710   001C78  5048               	movf	_event_count^0,w,c
 11711   001C7A  0F30               	addlw	48
 11712   001C7C  6E0A               	movwf	write_EEPROM@data^0,c
 11713   001C7E  0E00               	movlw	0
 11714   001C80  ECF0  F014         	call	_write_EEPROM
 11715   001C84                     
 11716                           ;main.c: 106:         for (int j = 0; j < 18; j++)
 11717   001C84  0E00               	movlw	0
 11718   001C86  6E17               	movwf	(write@j+1)^0,c
 11719   001C88  0E00               	movlw	0
 11720   001C8A  6E16               	movwf	write@j^0,c
 11721   001C8C                     l3079:
 11722                           
 11723                           ;main.c: 107:         {;main.c: 108:             view_event[event_count][j] = read_EEPRO
      +                          M(bytes);
 11724   001C8C  0E12               	movlw	18
 11725   001C8E  0248               	mulwf	_event_count^0,c
 11726   001C90  CFF3 F00E          	movff	prodl,??_write
 11727   001C94  CFF4 F00F          	movff	prodh,??_write+1
 11728   001C98  0249               	mulwf	(_event_count+1)^0,c
 11729   001C9A  50F3               	movf	prodl,w,c
 11730   001C9C  260F               	addwf	(??_write+1)^0,f,c
 11731   001C9E  0E00               	movlw	low _view_event
 11732   001CA0  240E               	addwf	??_write^0,w,c
 11733   001CA2  6E10               	movwf	(??_write+2)^0,c
 11734   001CA4  0E01               	movlw	high _view_event
 11735   001CA6  200F               	addwfc	(??_write+1)^0,w,c
 11736   001CA8  6E11               	movwf	(??_write+3)^0,c
 11737   001CAA  5016               	movf	write@j^0,w,c
 11738   001CAC  2410               	addwf	(??_write+2)^0,w,c
 11739   001CAE  6ED9               	movwf	fsr2l,c
 11740   001CB0  5017               	movf	(write@j+1)^0,w,c
 11741   001CB2  2011               	addwfc	(??_write+3)^0,w,c
 11742   001CB4  6EDA               	movwf	fsr2h,c
 11743   001CB6  0100               	movlb	0	; () banked
 11744   001CB8  51EC               	movf	_bytes& (0+255),w,b
 11745   001CBA  EC8A  F015         	call	_read_EEPROM
 11746   001CBE  6EDF               	movwf	indf2,c
 11747                           
 11748                           ;main.c: 109:             write_EEPROM(bytes, view_event[event_count][j]);
 11749   001CC0  0E12               	movlw	18
 11750   001CC2  0248               	mulwf	_event_count^0,c
 11751   001CC4  CFF3 F00E          	movff	prodl,??_write
 11752   001CC8  CFF4 F00F          	movff	prodh,??_write+1
 11753   001CCC  0249               	mulwf	(_event_count+1)^0,c
 11754   001CCE  50F3               	movf	prodl,w,c
 11755   001CD0  260F               	addwf	(??_write+1)^0,f,c
 11756   001CD2  0E00               	movlw	low _view_event
 11757   001CD4  240E               	addwf	??_write^0,w,c
 11758   001CD6  6E10               	movwf	(??_write+2)^0,c
 11759   001CD8  0E01               	movlw	high _view_event
 11760   001CDA  200F               	addwfc	(??_write+1)^0,w,c
 11761   001CDC  6E11               	movwf	(??_write+3)^0,c
 11762   001CDE  5016               	movf	write@j^0,w,c
 11763   001CE0  2410               	addwf	(??_write+2)^0,w,c
 11764   001CE2  6ED9               	movwf	fsr2l,c
 11765   001CE4  5017               	movf	(write@j+1)^0,w,c
 11766   001CE6  2011               	addwfc	(??_write+3)^0,w,c
 11767   001CE8  6EDA               	movwf	fsr2h,c
 11768   001CEA  50DF               	movf	indf2,w,c
 11769   001CEC  6E0A               	movwf	write_EEPROM@data^0,c
 11770   001CEE  0100               	movlb	0	; () banked
 11771   001CF0  51EC               	movf	_bytes& (0+255),w,b
 11772   001CF2  ECF0  F014         	call	_write_EEPROM
 11773   001CF6                     
 11774                           ;main.c: 110:             bytes++;
 11775   001CF6  0100               	movlb	0	; () banked
 11776   001CF8  2BEC               	incf	_bytes& (0+255),f,b
 11777   001CFA                     
 11778                           ; BSR set to: 0
 11779                           ;main.c: 111:         }
 11780   001CFA  4A16               	infsnz	write@j^0,f,c
 11781   001CFC  2A17               	incf	(write@j+1)^0,f,c
 11782   001CFE                     
 11783                           ; BSR set to: 0
 11784   001CFE  BE17               	btfsc	(write@j+1)^0,7,c
 11785   001D00  EF8B  F00E         	goto	u2441
 11786   001D04  5017               	movf	(write@j+1)^0,w,c
 11787   001D06  E109               	bnz	u2440
 11788   001D08  0E12               	movlw	18
 11789   001D0A  5C16               	subwf	write@j^0,w,c
 11790   001D0C  A0D8               	btfss	status,0,c
 11791   001D0E  EF8B  F00E         	goto	u2441
 11792   001D12  EF8D  F00E         	goto	u2440
 11793   001D16                     u2441:
 11794   001D16  EF46  F00E         	goto	l3079
 11795   001D1A                     u2440:
 11796   001D1A                     
 11797                           ; BSR set to: 0
 11798                           ;main.c: 112:          if(duration[9]=='W')
 11799   001D1A  0E57               	movlw	87
 11800   001D1C  19AA               	xorwf	(_duration+9)& (0+255),w,b
 11801   001D1E  A4D8               	btfss	status,2,c
 11802   001D20  EF94  F00E         	goto	u2451
 11803   001D24  EF96  F00E         	goto	u2450
 11804   001D28                     u2451:
 11805   001D28  EFA6  F00E         	goto	l335
 11806   001D2C                     u2450:
 11807   001D2C                     
 11808                           ; BSR set to: 0
 11809                           ;main.c: 113:         {;main.c: 114:             write_EEPROM(0x0A,(day%10)+'0');
 11810   001D2C  C04A  F005         	movff	_day,___lwmod@dividend
 11811   001D30  C04B  F006         	movff	_day+1,___lwmod@dividend+1
 11812   001D34  0E00               	movlw	0
 11813   001D36  6E08               	movwf	(___lwmod@divisor+1)^0,c
 11814   001D38  0E0A               	movlw	10
 11815   001D3A  6E07               	movwf	___lwmod@divisor^0,c
 11816   001D3C  EC55  F014         	call	___lwmod	;wreg free
 11817   001D40  5005               	movf	?___lwmod^0,w,c
 11818   001D42  0F30               	addlw	48
 11819   001D44  6E0A               	movwf	write_EEPROM@data^0,c
 11820   001D46  0E0A               	movlw	10
 11821   001D48  ECF0  F014         	call	_write_EEPROM
 11822   001D4C                     l335:
 11823   001D4C  0012               	return		;funcret
 11824   001D4E                     __end_of_write:
 11825                           	callstack 0
 11826                           
 11827 ;; *************** function _write_EEPROM *****************
 11828 ;; Defined at:
 11829 ;;		line 3 in file "external_eeprom_1.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;  address1        1    wreg     unsigned char 
 11832 ;;  data            1    9[COMRAM] unsigned char 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  address1        1   12[COMRAM] unsigned char 
 11835 ;;  i               2   10[COMRAM] int 
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg, status,2, status,0, cstack
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11845 ;;      Params:         1       0       0       0       0       0       0
 11846 ;;      Locals:         3       0       0       0       0       0       0
 11847 ;;      Temps:          0       0       0       0       0       0       0
 11848 ;;      Totals:         4       0       0       0       0       0       0
 11849 ;;Total ram usage:        4 bytes
 11850 ;; Hardware stack levels used: 1
 11851 ;; Hardware stack levels required when called: 3
 11852 ;; This function calls:
 11853 ;;		_i2c_start
 11854 ;;		_i2c_stop
 11855 ;;		_i2c_write
 11856 ;; This function is called by:
 11857 ;;		_write
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           	psect	text35
 11862   0029E0                     __ptext35:
 11863                           	callstack 0
 11864   0029E0                     _write_EEPROM:
 11865                           	callstack 24
 11866                           
 11867                           ;incstack = 0
 11868                           ;write_EEPROM@address1 stored from wreg
 11869   0029E0  6E0D               	movwf	write_EEPROM@address1^0,c
 11870   0029E2                     
 11871                           ;external_eeprom_1.c: 3: void write_EEPROM(unsigned char address1, unsigned char data);e
      +                          xternal_eeprom_1.c: 4: {;external_eeprom_1.c: 5:  i2c_start();
 11872   0029E2  EC1B  F016         	call	_i2c_start	;wreg free
 11873   0029E6                     
 11874                           ;external_eeprom_1.c: 6:  i2c_write(0xA0);
 11875   0029E6  0EA0               	movlw	160
 11876   0029E8  EC05  F016         	call	_i2c_write
 11877   0029EC                     
 11878                           ;external_eeprom_1.c: 7:  i2c_write(address1);
 11879   0029EC  500D               	movf	write_EEPROM@address1^0,w,c
 11880   0029EE  EC05  F016         	call	_i2c_write
 11881   0029F2                     
 11882                           ;external_eeprom_1.c: 8:  i2c_write(data);
 11883   0029F2  500A               	movf	write_EEPROM@data^0,w,c
 11884   0029F4  EC05  F016         	call	_i2c_write
 11885   0029F8                     
 11886                           ;external_eeprom_1.c: 9:  i2c_stop();
 11887   0029F8  EC17  F016         	call	_i2c_stop	;wreg free
 11888   0029FC                     
 11889                           ;external_eeprom_1.c: 10:     for(int i=3000;i--;);
 11890   0029FC  0E0B               	movlw	11
 11891   0029FE  6E0C               	movwf	(write_EEPROM@i+1)^0,c
 11892   002A00  0EB8               	movlw	184
 11893   002A02  6E0B               	movwf	write_EEPROM@i^0,c
 11894   002A04                     l2911:
 11895   002A04  060B               	decf	write_EEPROM@i^0,f,c
 11896   002A06  A0D8               	btfss	status,0,c
 11897   002A08  060C               	decf	(write_EEPROM@i+1)^0,f,c
 11898   002A0A  280B               	incf	write_EEPROM@i^0,w,c
 11899   002A0C  E106               	bnz	u2251
 11900   002A0E  280C               	incf	(write_EEPROM@i+1)^0,w,c
 11901   002A10  A4D8               	btfss	status,2,c
 11902   002A12  EF0D  F015         	goto	u2251
 11903   002A16  EF0F  F015         	goto	u2250
 11904   002A1A                     u2251:
 11905   002A1A  EF02  F015         	goto	l2911
 11906   002A1E                     u2250:
 11907   002A1E  0012               	return		;funcret
 11908   002A20                     __end_of_write_EEPROM:
 11909                           	callstack 0
 11910                           
 11911 ;; *************** function _read_EEPROM *****************
 11912 ;; Defined at:
 11913 ;;		line 13 in file "external_eeprom_1.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;  address1        1    wreg     unsigned char 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  address1        1    5[COMRAM] unsigned char 
 11918 ;;  data            1    6[COMRAM] unsigned char 
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  1    wreg      unsigned char 
 11921 ;; Registers used:
 11922 ;;		wreg, status,2, cstack
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11928 ;;      Params:         0       0       0       0       0       0       0
 11929 ;;      Locals:         2       0       0       0       0       0       0
 11930 ;;      Temps:          0       0       0       0       0       0       0
 11931 ;;      Totals:         2       0       0       0       0       0       0
 11932 ;;Total ram usage:        2 bytes
 11933 ;; Hardware stack levels used: 1
 11934 ;; Hardware stack levels required when called: 4
 11935 ;; This function calls:
 11936 ;;		_i2c_read
 11937 ;;		_i2c_rep_start
 11938 ;;		_i2c_start
 11939 ;;		_i2c_stop
 11940 ;;		_i2c_write
 11941 ;; This function is called by:
 11942 ;;		_write
 11943 ;;		_set_time
 11944 ;;		_main
 11945 ;;		_check_weekly_event
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949                           	psect	text36
 11950   002B14                     __ptext36:
 11951                           	callstack 0
 11952   002B14                     _read_EEPROM:
 11953                           	callstack 26
 11954                           
 11955                           ;incstack = 0
 11956                           ;read_EEPROM@address1 stored from wreg
 11957   002B14  6E06               	movwf	read_EEPROM@address1^0,c
 11958   002B16                     
 11959                           ;external_eeprom_1.c: 13: unsigned char read_EEPROM(unsigned char address1);external_eep
      +                          rom_1.c: 14: {;external_eeprom_1.c: 15:  unsigned char data;;external_eeprom_1.c: 17:  i
      +                          2c_start();
 11960   002B16  EC1B  F016         	call	_i2c_start	;wreg free
 11961   002B1A                     
 11962                           ;external_eeprom_1.c: 18:  i2c_write(0xA0);
 11963   002B1A  0EA0               	movlw	160
 11964   002B1C  EC05  F016         	call	_i2c_write
 11965   002B20                     
 11966                           ;external_eeprom_1.c: 19:  i2c_write(address1);
 11967   002B20  5006               	movf	read_EEPROM@address1^0,w,c
 11968   002B22  EC05  F016         	call	_i2c_write
 11969   002B26                     
 11970                           ;external_eeprom_1.c: 20:  i2c_rep_start();
 11971   002B26  EC1F  F016         	call	_i2c_rep_start	;wreg free
 11972   002B2A                     
 11973                           ;external_eeprom_1.c: 21:  i2c_write(0xA1);
 11974   002B2A  0EA1               	movlw	161
 11975   002B2C  EC05  F016         	call	_i2c_write
 11976                           
 11977                           ;external_eeprom_1.c: 22:  data = i2c_read();
 11978   002B30  EC0B  F016         	call	_i2c_read	;wreg free
 11979   002B34  6E07               	movwf	read_EEPROM@data^0,c
 11980   002B36                     
 11981                           ;external_eeprom_1.c: 23:  i2c_stop();
 11982   002B36  EC17  F016         	call	_i2c_stop	;wreg free
 11983                           
 11984                           ;external_eeprom_1.c: 25:  return data;
 11985   002B3A  5007               	movf	read_EEPROM@data^0,w,c
 11986   002B3C  0012               	return		;funcret
 11987   002B3E                     __end_of_read_EEPROM:
 11988                           	callstack 0
 11989                           
 11990 ;; *************** function _i2c_write *****************
 11991 ;; Defined at:
 11992 ;;		line 55 in file "i2c_1.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  data            1    wreg     unsigned char 
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;  data            1    4[COMRAM] unsigned char 
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      void 
 11999 ;; Registers used:
 12000 ;;		wreg, cstack
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12006 ;;      Params:         0       0       0       0       0       0       0
 12007 ;;      Locals:         1       0       0       0       0       0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0
 12009 ;;      Totals:         1       0       0       0       0       0       0
 12010 ;;Total ram usage:        1 bytes
 12011 ;; Hardware stack levels used: 1
 12012 ;; Hardware stack levels required when called: 2
 12013 ;; This function calls:
 12014 ;;		_i2c_idle
 12015 ;; This function is called by:
 12016 ;;		_write_ds1307
 12017 ;;		_read_ds1307
 12018 ;;		_write_EEPROM
 12019 ;;		_read_EEPROM
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text37
 12024   002C0A                     __ptext37:
 12025                           	callstack 0
 12026   002C0A                     _i2c_write:
 12027                           	callstack 27
 12028                           
 12029                           ;incstack = 0
 12030                           ;i2c_write@data stored from wreg
 12031   002C0A  6E05               	movwf	i2c_write@data^0,c
 12032   002C0C                     
 12033                           ;i2c_1.c: 55: void i2c_write(unsigned char data);i2c_1.c: 56: {;i2c_1.c: 57:  SSPBUF = d
      +                          ata;
 12034   002C0C  C005  FFC9         	movff	i2c_write@data,4041	;volatile
 12035   002C10                     
 12036                           ;i2c_1.c: 58:  i2c_idle();
 12037   002C10  ECFC  F015         	call	_i2c_idle	;wreg free
 12038   002C14  0012               	return		;funcret
 12039   002C16                     __end_of_i2c_write:
 12040                           	callstack 0
 12041                           
 12042 ;; *************** function _i2c_stop *****************
 12043 ;; Defined at:
 12044 ;;		line 43 in file "i2c_1.c"
 12045 ;; Parameters:    Size  Location     Type
 12046 ;;		None
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;		None
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  1    wreg      void 
 12051 ;; Registers used:
 12052 ;;		cstack
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12058 ;;      Params:         0       0       0       0       0       0       0
 12059 ;;      Locals:         0       0       0       0       0       0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0
 12061 ;;      Totals:         0       0       0       0       0       0       0
 12062 ;;Total ram usage:        0 bytes
 12063 ;; Hardware stack levels used: 1
 12064 ;; Hardware stack levels required when called: 2
 12065 ;; This function calls:
 12066 ;;		_i2c_idle
 12067 ;; This function is called by:
 12068 ;;		_write_ds1307
 12069 ;;		_read_ds1307
 12070 ;;		_write_EEPROM
 12071 ;;		_read_EEPROM
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           	psect	text38
 12076   002C2E                     __ptext38:
 12077                           	callstack 0
 12078   002C2E                     _i2c_stop:
 12079                           	callstack 27
 12080   002C2E                     
 12081                           ;i2c_1.c: 45:  PEN = 1;
 12082   002C2E  84C5               	bsf	4037,2,c	;volatile
 12083   002C30                     
 12084                           ;i2c_1.c: 46:  i2c_idle();
 12085   002C30  ECFC  F015         	call	_i2c_idle	;wreg free
 12086   002C34  0012               	return		;funcret
 12087   002C36                     __end_of_i2c_stop:
 12088                           	callstack 0
 12089                           
 12090 ;; *************** function _i2c_start *****************
 12091 ;; Defined at:
 12092 ;;		line 37 in file "i2c_1.c"
 12093 ;; Parameters:    Size  Location     Type
 12094 ;;		None
 12095 ;; Auto vars:     Size  Location     Type
 12096 ;;		None
 12097 ;; Return value:  Size  Location     Type
 12098 ;;                  1    wreg      void 
 12099 ;; Registers used:
 12100 ;;		cstack
 12101 ;; Tracked objects:
 12102 ;;		On entry : 0/0
 12103 ;;		On exit  : 0/0
 12104 ;;		Unchanged: 0/0
 12105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12106 ;;      Params:         0       0       0       0       0       0       0
 12107 ;;      Locals:         0       0       0       0       0       0       0
 12108 ;;      Temps:          0       0       0       0       0       0       0
 12109 ;;      Totals:         0       0       0       0       0       0       0
 12110 ;;Total ram usage:        0 bytes
 12111 ;; Hardware stack levels used: 1
 12112 ;; Hardware stack levels required when called: 2
 12113 ;; This function calls:
 12114 ;;		_i2c_idle
 12115 ;; This function is called by:
 12116 ;;		_write_ds1307
 12117 ;;		_read_ds1307
 12118 ;;		_write_EEPROM
 12119 ;;		_read_EEPROM
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123                           	psect	text39
 12124   002C36                     __ptext39:
 12125                           	callstack 0
 12126   002C36                     _i2c_start:
 12127                           	callstack 27
 12128   002C36                     
 12129                           ;i2c_1.c: 39:  SEN = 1;
 12130   002C36  80C5               	bsf	4037,0,c	;volatile
 12131   002C38                     
 12132                           ;i2c_1.c: 40:  i2c_idle();
 12133   002C38  ECFC  F015         	call	_i2c_idle	;wreg free
 12134   002C3C  0012               	return		;funcret
 12135   002C3E                     __end_of_i2c_start:
 12136                           	callstack 0
 12137                           
 12138 ;; *************** function _i2c_rep_start *****************
 12139 ;; Defined at:
 12140 ;;		line 49 in file "i2c_1.c"
 12141 ;; Parameters:    Size  Location     Type
 12142 ;;		None
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;		None
 12145 ;; Return value:  Size  Location     Type
 12146 ;;                  1    wreg      void 
 12147 ;; Registers used:
 12148 ;;		cstack
 12149 ;; Tracked objects:
 12150 ;;		On entry : 0/0
 12151 ;;		On exit  : 0/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12154 ;;      Params:         0       0       0       0       0       0       0
 12155 ;;      Locals:         0       0       0       0       0       0       0
 12156 ;;      Temps:          0       0       0       0       0       0       0
 12157 ;;      Totals:         0       0       0       0       0       0       0
 12158 ;;Total ram usage:        0 bytes
 12159 ;; Hardware stack levels used: 1
 12160 ;; Hardware stack levels required when called: 2
 12161 ;; This function calls:
 12162 ;;		_i2c_idle
 12163 ;; This function is called by:
 12164 ;;		_read_ds1307
 12165 ;;		_read_EEPROM
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169                           	psect	text40
 12170   002C3E                     __ptext40:
 12171                           	callstack 0
 12172   002C3E                     _i2c_rep_start:
 12173                           	callstack 27
 12174   002C3E                     
 12175                           ;i2c_1.c: 51:  RSEN = 1;
 12176   002C3E  82C5               	bsf	4037,1,c	;volatile
 12177   002C40                     
 12178                           ;i2c_1.c: 52:  i2c_idle();
 12179   002C40  ECFC  F015         	call	_i2c_idle	;wreg free
 12180   002C44  0012               	return		;funcret
 12181   002C46                     __end_of_i2c_rep_start:
 12182                           	callstack 0
 12183                           
 12184 ;; *************** function _i2c_read *****************
 12185 ;; Defined at:
 12186 ;;		line 71 in file "i2c_1.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;		None
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;		None
 12191 ;; Return value:  Size  Location     Type
 12192 ;;                  1    wreg      unsigned char 
 12193 ;; Registers used:
 12194 ;;		wreg, status,2, cstack
 12195 ;; Tracked objects:
 12196 ;;		On entry : 0/0
 12197 ;;		On exit  : 0/0
 12198 ;;		Unchanged: 0/0
 12199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12200 ;;      Params:         0       0       0       0       0       0       0
 12201 ;;      Locals:         0       0       0       0       0       0       0
 12202 ;;      Temps:          0       0       0       0       0       0       0
 12203 ;;      Totals:         0       0       0       0       0       0       0
 12204 ;;Total ram usage:        0 bytes
 12205 ;; Hardware stack levels used: 1
 12206 ;; Hardware stack levels required when called: 3
 12207 ;; This function calls:
 12208 ;;		_i2c_no_ack
 12209 ;;		_i2c_rx_mode
 12210 ;; This function is called by:
 12211 ;;		_read_ds1307
 12212 ;;		_read_EEPROM
 12213 ;; This function uses a non-reentrant model
 12214 ;;
 12215                           
 12216                           	psect	text41
 12217   002C16                     __ptext41:
 12218                           	callstack 0
 12219   002C16                     _i2c_read:
 12220                           	callstack 26
 12221   002C16                     
 12222                           ;i2c_1.c: 73:  i2c_rx_mode();
 12223   002C16  EC23  F016         	call	_i2c_rx_mode	;wreg free
 12224                           
 12225                           ;i2c_1.c: 74:  i2c_no_ack();
 12226   002C1A  EC2A  F016         	call	_i2c_no_ack	;wreg free
 12227   002C1E                     
 12228                           ;i2c_1.c: 76:  return SSPBUF;
 12229   002C1E  50C9               	movf	201,w,c	;volatile
 12230   002C20  0012               	return		;funcret
 12231   002C22                     __end_of_i2c_read:
 12232                           	callstack 0
 12233                           
 12234 ;; *************** function _i2c_rx_mode *****************
 12235 ;; Defined at:
 12236 ;;		line 60 in file "i2c_1.c"
 12237 ;; Parameters:    Size  Location     Type
 12238 ;;		None
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;		None
 12241 ;; Return value:  Size  Location     Type
 12242 ;;                  1    wreg      void 
 12243 ;; Registers used:
 12244 ;;		cstack
 12245 ;; Tracked objects:
 12246 ;;		On entry : 0/0
 12247 ;;		On exit  : 0/0
 12248 ;;		Unchanged: 0/0
 12249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12250 ;;      Params:         0       0       0       0       0       0       0
 12251 ;;      Locals:         0       0       0       0       0       0       0
 12252 ;;      Temps:          0       0       0       0       0       0       0
 12253 ;;      Totals:         0       0       0       0       0       0       0
 12254 ;;Total ram usage:        0 bytes
 12255 ;; Hardware stack levels used: 1
 12256 ;; Hardware stack levels required when called: 2
 12257 ;; This function calls:
 12258 ;;		_i2c_idle
 12259 ;; This function is called by:
 12260 ;;		_i2c_read
 12261 ;; This function uses a non-reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text42
 12265   002C46                     __ptext42:
 12266                           	callstack 0
 12267   002C46                     _i2c_rx_mode:
 12268                           	callstack 26
 12269   002C46                     
 12270                           ;i2c_1.c: 62:  RCEN = 1;
 12271   002C46  86C5               	bsf	4037,3,c	;volatile
 12272   002C48                     
 12273                           ;i2c_1.c: 63:  i2c_idle();
 12274   002C48  ECFC  F015         	call	_i2c_idle	;wreg free
 12275   002C4C  0012               	return		;funcret
 12276   002C4E                     __end_of_i2c_rx_mode:
 12277                           	callstack 0
 12278                           
 12279 ;; *************** function _i2c_idle *****************
 12280 ;; Defined at:
 12281 ;;		line 23 in file "i2c_1.c"
 12282 ;; Parameters:    Size  Location     Type
 12283 ;;		None
 12284 ;; Auto vars:     Size  Location     Type
 12285 ;;		None
 12286 ;; Return value:  Size  Location     Type
 12287 ;;                  1    wreg      void 
 12288 ;; Registers used:
 12289 ;;		None
 12290 ;; Tracked objects:
 12291 ;;		On entry : 0/0
 12292 ;;		On exit  : 0/0
 12293 ;;		Unchanged: 0/0
 12294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12295 ;;      Params:         0       0       0       0       0       0       0
 12296 ;;      Locals:         0       0       0       0       0       0       0
 12297 ;;      Temps:          0       0       0       0       0       0       0
 12298 ;;      Totals:         0       0       0       0       0       0       0
 12299 ;;Total ram usage:        0 bytes
 12300 ;; Hardware stack levels used: 1
 12301 ;; Hardware stack levels required when called: 1
 12302 ;; This function calls:
 12303 ;;		Nothing
 12304 ;; This function is called by:
 12305 ;;		_i2c_start
 12306 ;;		_i2c_stop
 12307 ;;		_i2c_rep_start
 12308 ;;		_i2c_write
 12309 ;;		_i2c_rx_mode
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           	psect	text43
 12314   002BF8                     __ptext43:
 12315                           	callstack 0
 12316   002BF8                     _i2c_idle:
 12317                           	callstack 27
 12318   002BF8                     l38:
 12319   002BF8  A69E               	btfss	3998,3,c	;volatile
 12320   002BFA  EF01  F016         	goto	u2181
 12321   002BFE  EF03  F016         	goto	u2180
 12322   002C02                     u2181:
 12323   002C02  EFFC  F015         	goto	l38
 12324   002C06                     u2180:
 12325   002C06                     
 12326                           ;i2c_1.c: 26:  SSPIF = 0;
 12327   002C06  969E               	bcf	3998,3,c	;volatile
 12328   002C08  0012               	return		;funcret
 12329   002C0A                     __end_of_i2c_idle:
 12330                           	callstack 0
 12331                           
 12332 ;; *************** function _i2c_no_ack *****************
 12333 ;; Defined at:
 12334 ;;		line 65 in file "i2c_1.c"
 12335 ;; Parameters:    Size  Location     Type
 12336 ;;		None
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;		None
 12339 ;; Return value:  Size  Location     Type
 12340 ;;                  1    wreg      void 
 12341 ;; Registers used:
 12342 ;;		None
 12343 ;; Tracked objects:
 12344 ;;		On entry : 0/0
 12345 ;;		On exit  : 0/0
 12346 ;;		Unchanged: 0/0
 12347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12348 ;;      Params:         0       0       0       0       0       0       0
 12349 ;;      Locals:         0       0       0       0       0       0       0
 12350 ;;      Temps:          0       0       0       0       0       0       0
 12351 ;;      Totals:         0       0       0       0       0       0       0
 12352 ;;Total ram usage:        0 bytes
 12353 ;; Hardware stack levels used: 1
 12354 ;; Hardware stack levels required when called: 1
 12355 ;; This function calls:
 12356 ;;		Nothing
 12357 ;; This function is called by:
 12358 ;;		_i2c_read
 12359 ;; This function uses a non-reentrant model
 12360 ;;
 12361                           
 12362                           	psect	text44
 12363   002C54                     __ptext44:
 12364                           	callstack 0
 12365   002C54                     _i2c_no_ack:
 12366                           	callstack 27
 12367   002C54                     
 12368                           ;i2c_1.c: 67:  ACKDT = 1;
 12369   002C54  8AC5               	bsf	4037,5,c	;volatile
 12370                           
 12371                           ;i2c_1.c: 68:  ACKEN = 1;
 12372   002C56  88C5               	bsf	4037,4,c	;volatile
 12373   002C58  0012               	return		;funcret
 12374   002C5A                     __end_of_i2c_no_ack:
 12375                           	callstack 0
 12376                           
 12377 ;; *************** function ___lwmod *****************
 12378 ;; Defined at:
 12379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;  dividend        2    4[COMRAM] unsigned int 
 12382 ;;  divisor         2    6[COMRAM] unsigned int 
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;  counter         1    8[COMRAM] unsigned char 
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  2    4[COMRAM] unsigned int 
 12387 ;; Registers used:
 12388 ;;		wreg, status,2, status,0
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12394 ;;      Params:         4       0       0       0       0       0       0
 12395 ;;      Locals:         1       0       0       0       0       0       0
 12396 ;;      Temps:          0       0       0       0       0       0       0
 12397 ;;      Totals:         5       0       0       0       0       0       0
 12398 ;;Total ram usage:        5 bytes
 12399 ;; Hardware stack levels used: 1
 12400 ;; Hardware stack levels required when called: 1
 12401 ;; This function calls:
 12402 ;;		Nothing
 12403 ;; This function is called by:
 12404 ;;		_write
 12405 ;;		_set_EVENT
 12406 ;;		_set_time
 12407 ;;		_set_date
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           	psect	text45
 12412   0028AA                     __ptext45:
 12413                           	callstack 0
 12414   0028AA                     ___lwmod:
 12415                           	callstack 27
 12416   0028AA  5007               	movf	___lwmod@divisor^0,w,c
 12417   0028AC  1008               	iorwf	(___lwmod@divisor+1)^0,w,c
 12418   0028AE  B4D8               	btfsc	status,2,c
 12419   0028B0  EF5C  F014         	goto	u2351
 12420   0028B4  EF5E  F014         	goto	u2350
 12421   0028B8                     u2351:
 12422   0028B8  EF82  F014         	goto	l1269
 12423   0028BC                     u2350:
 12424   0028BC  0E01               	movlw	1
 12425   0028BE  6E09               	movwf	___lwmod@counter^0,c
 12426   0028C0  EF66  F014         	goto	l3011
 12427   0028C4                     l3009:
 12428   0028C4  90D8               	bcf	status,0,c
 12429   0028C6  3607               	rlcf	___lwmod@divisor^0,f,c
 12430   0028C8  3608               	rlcf	(___lwmod@divisor+1)^0,f,c
 12431   0028CA  2A09               	incf	___lwmod@counter^0,f,c
 12432   0028CC                     l3011:
 12433   0028CC  AE08               	btfss	(___lwmod@divisor+1)^0,7,c
 12434   0028CE  EF6B  F014         	goto	u2361
 12435   0028D2  EF6D  F014         	goto	u2360
 12436   0028D6                     u2361:
 12437   0028D6  EF62  F014         	goto	l3009
 12438   0028DA                     u2360:
 12439   0028DA                     l3013:
 12440   0028DA  5007               	movf	___lwmod@divisor^0,w,c
 12441   0028DC  5C05               	subwf	___lwmod@dividend^0,w,c
 12442   0028DE  5008               	movf	(___lwmod@divisor+1)^0,w,c
 12443   0028E0  5806               	subwfb	(___lwmod@dividend+1)^0,w,c
 12444   0028E2  A0D8               	btfss	status,0,c
 12445   0028E4  EF76  F014         	goto	u2371
 12446   0028E8  EF78  F014         	goto	u2370
 12447   0028EC                     u2371:
 12448   0028EC  EF7C  F014         	goto	l3017
 12449   0028F0                     u2370:
 12450   0028F0  5007               	movf	___lwmod@divisor^0,w,c
 12451   0028F2  5E05               	subwf	___lwmod@dividend^0,f,c
 12452   0028F4  5008               	movf	(___lwmod@divisor+1)^0,w,c
 12453   0028F6  5A06               	subwfb	(___lwmod@dividend+1)^0,f,c
 12454   0028F8                     l3017:
 12455   0028F8  90D8               	bcf	status,0,c
 12456   0028FA  3208               	rrcf	(___lwmod@divisor+1)^0,f,c
 12457   0028FC  3207               	rrcf	___lwmod@divisor^0,f,c
 12458   0028FE  2E09               	decfsz	___lwmod@counter^0,f,c
 12459   002900  EF6D  F014         	goto	l3013
 12460   002904                     l1269:
 12461   002904  C005  F005         	movff	___lwmod@dividend,?___lwmod
 12462   002908  C006  F006         	movff	___lwmod@dividend+1,?___lwmod+1
 12463   00290C  0012               	return		;funcret
 12464   00290E                     __end_of___lwmod:
 12465                           	callstack 0
 12466                           
 12467 ;; *************** function _clcd_putch *****************
 12468 ;; Defined at:
 12469 ;;		line 66 in file "clcd.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;  data            1    wreg     const unsigned char 
 12472 ;;  addr            1    6[COMRAM] unsigned char 
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;  data            1    7[COMRAM] const unsigned char 
 12475 ;; Return value:  Size  Location     Type
 12476 ;;                  1    wreg      void 
 12477 ;; Registers used:
 12478 ;;		wreg, status,2, cstack
 12479 ;; Tracked objects:
 12480 ;;		On entry : 0/0
 12481 ;;		On exit  : 0/0
 12482 ;;		Unchanged: 0/0
 12483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12484 ;;      Params:         1       0       0       0       0       0       0
 12485 ;;      Locals:         1       0       0       0       0       0       0
 12486 ;;      Temps:          0       0       0       0       0       0       0
 12487 ;;      Totals:         2       0       0       0       0       0       0
 12488 ;;Total ram usage:        2 bytes
 12489 ;; Hardware stack levels used: 1
 12490 ;; Hardware stack levels required when called: 2
 12491 ;; This function calls:
 12492 ;;		_clcd_write
 12493 ;; This function is called by:
 12494 ;;		_display_date
 12495 ;;		_display_time
 12496 ;;		_view_ALARM
 12497 ;;		_set_EVENT
 12498 ;;		_main
 12499 ;;		_calculate_duration
 12500 ;; This function uses a non-reentrant model
 12501 ;;
 12502                           
 12503                           	psect	text46
 12504   002BA2                     __ptext46:
 12505                           	callstack 0
 12506   002BA2                     _clcd_putch:
 12507                           	callstack 27
 12508                           
 12509                           ;incstack = 0
 12510                           ;clcd_putch@data stored from wreg
 12511   002BA2  6E08               	movwf	clcd_putch@data^0,c
 12512   002BA4                     
 12513                           ;clcd.c: 66: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 67: {
      +                          ;clcd.c: 68:  clcd_write(addr, 0);
 12514   002BA4  0E00               	movlw	0
 12515   002BA6  6E05               	movwf	clcd_write@control_bit^0,c
 12516   002BA8  5007               	movf	clcd_putch@addr^0,w,c
 12517   002BAA  EC10  F015         	call	_clcd_write
 12518                           
 12519                           ;clcd.c: 69:  clcd_write(data, 1);
 12520   002BAE  0E01               	movlw	1
 12521   002BB0  6E05               	movwf	clcd_write@control_bit^0,c
 12522   002BB2  5008               	movf	clcd_putch@data^0,w,c
 12523   002BB4  EC10  F015         	call	_clcd_write
 12524   002BB8  0012               	return		;funcret
 12525   002BBA                     __end_of_clcd_putch:
 12526                           	callstack 0
 12527                           
 12528 ;; *************** function _clcd_print *****************
 12529 ;; Defined at:
 12530 ;;		line 57 in file "clcd.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;  data            2    6[COMRAM] PTR const unsigned char 
 12533 ;;		 -> STR_34(15), STR_33(15), STR_32(3), STR_31(3), 
 12534 ;;		 -> STR_30(3), STR_29(3), STR_28(3), STR_27(3), 
 12535 ;;		 -> STR_26(3), STR_25(3), STR_24(15), STR_23(15), 
 12536 ;;		 -> STR_22(15), STR_21(15), STR_20(3), STR_19(3), 
 12537 ;;		 -> STR_18(3), STR_17(3), STR_16(5), STR_15(17), 
 12538 ;;		 -> STR_14(3), STR_13(3), STR_12(7), STR_11(17), 
 12539 ;;		 -> STR_10(7), STR_9(4), STR_8(5), STR_7(5), 
 12540 ;;		 -> STR_6(4), STR_5(5), STR_4(3), STR_3(3), 
 12541 ;;		 -> time(9), STR_2(6), date(16), STR_1(6), 
 12542 ;;		 -> duration(16), STORE_TIME(10), 
 12543 ;;  addr            1    8[COMRAM] unsigned char 
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  1    wreg      void 
 12548 ;; Registers used:
 12549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12555 ;;      Params:         3       0       0       0       0       0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0
 12557 ;;      Temps:          0       0       0       0       0       0       0
 12558 ;;      Totals:         3       0       0       0       0       0       0
 12559 ;;Total ram usage:        3 bytes
 12560 ;; Hardware stack levels used: 1
 12561 ;; Hardware stack levels required when called: 2
 12562 ;; This function calls:
 12563 ;;		_clcd_write
 12564 ;; This function is called by:
 12565 ;;		_display_date
 12566 ;;		_display_time
 12567 ;;		_view_ALARM
 12568 ;;		_set_EVENT
 12569 ;;		_set_time
 12570 ;;		_set_date
 12571 ;;		_GOTO_SET_TIMEDATA
 12572 ;;		_GOTO_SET_EVENT
 12573 ;;		_main
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text47
 12578   0027D4                     __ptext47:
 12579                           	callstack 0
 12580   0027D4                     _clcd_print:
 12581                           	callstack 27
 12582   0027D4                     
 12583                           ;clcd.c: 57: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 58: 
      +                          {;clcd.c: 59:  clcd_write(addr, 0);
 12584   0027D4  0E00               	movlw	0
 12585   0027D6  6E05               	movwf	clcd_write@control_bit^0,c
 12586   0027D8  5009               	movf	clcd_print@addr^0,w,c
 12587   0027DA  EC10  F015         	call	_clcd_write
 12588                           
 12589                           ;clcd.c: 60:  while (*data != '\0')
 12590   0027DE  EF07  F014         	goto	l3037
 12591   0027E2                     l3033:
 12592                           
 12593                           ;clcd.c: 61:  {;clcd.c: 62:   clcd_write(*data++, 1);
 12594   0027E2  0E01               	movlw	1
 12595   0027E4  6E05               	movwf	clcd_write@control_bit^0,c
 12596   0027E6  C007  FFF6         	movff	clcd_print@data,tblptrl
 12597   0027EA  C008  FFF7         	movff	clcd_print@data+1,tblptrh
 12598   0027EE  6AF8               	clrf	tblptru,c
 12599   0027F0  0E05               	movlw	(high __ramtop+-1)
 12600   0027F2  64F7               	cpfsgt	tblptrh,c
 12601   0027F4  D003               	bra	u2387
 12602   0027F6  0008               	tblrd		*
 12603   0027F8  50F5               	movf	tablat,w,c
 12604   0027FA  D005               	bra	u2380
 12605   0027FC                     u2387:
 12606   0027FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 12607   002800  CFF7 FFE2          	movff	tblptrh,fsr1h
 12608   002804  50E7               	movf	indf1,w,c
 12609   002806                     u2380:
 12610   002806  EC10  F015         	call	_clcd_write
 12611   00280A  4A07               	infsnz	clcd_print@data^0,f,c
 12612   00280C  2A08               	incf	(clcd_print@data+1)^0,f,c
 12613   00280E                     l3037:
 12614                           
 12615                           ;clcd.c: 60:  while (*data != '\0')
 12616   00280E  C007  FFF6         	movff	clcd_print@data,tblptrl
 12617   002812  C008  FFF7         	movff	clcd_print@data+1,tblptrh
 12618   002816  6AF8               	clrf	tblptru,c
 12619   002818  0E05               	movlw	(high __ramtop+-1)
 12620   00281A  64F7               	cpfsgt	tblptrh,c
 12621   00281C  D003               	bra	u2397
 12622   00281E  0008               	tblrd		*
 12623   002820  50F5               	movf	tablat,w,c
 12624   002822  D005               	bra	u2390
 12625   002824                     u2397:
 12626   002824  CFF6 FFE1          	movff	tblptrl,fsr1l
 12627   002828  CFF7 FFE2          	movff	tblptrh,fsr1h
 12628   00282C  50E7               	movf	indf1,w,c
 12629   00282E                     u2390:
 12630   00282E  0900               	iorlw	0
 12631   002830  A4D8               	btfss	status,2,c
 12632   002832  EF1D  F014         	goto	u2401
 12633   002836  EF1F  F014         	goto	u2400
 12634   00283A                     u2401:
 12635   00283A  EFF1  F013         	goto	l3033
 12636   00283E                     u2400:
 12637   00283E  0012               	return		;funcret
 12638   002840                     __end_of_clcd_print:
 12639                           	callstack 0
 12640                           
 12641 ;; *************** function _clcd_write *****************
 12642 ;; Defined at:
 12643 ;;		line 3 in file "clcd.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  byte            1    wreg     unsigned char 
 12646 ;;  control_bit     1    4[COMRAM] unsigned char 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  byte            1    5[COMRAM] unsigned char 
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  1    wreg      void 
 12651 ;; Registers used:
 12652 ;;		wreg
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12658 ;;      Params:         1       0       0       0       0       0       0
 12659 ;;      Locals:         1       0       0       0       0       0       0
 12660 ;;      Temps:          0       0       0       0       0       0       0
 12661 ;;      Totals:         2       0       0       0       0       0       0
 12662 ;;Total ram usage:        2 bytes
 12663 ;; Hardware stack levels used: 1
 12664 ;; Hardware stack levels required when called: 1
 12665 ;; This function calls:
 12666 ;;		Nothing
 12667 ;; This function is called by:
 12668 ;;		_init_clcd
 12669 ;;		_clcd_print
 12670 ;;		_clcd_putch
 12671 ;;		_GOTO_SET_EVENT
 12672 ;;		_main
 12673 ;;		_check_event_time
 12674 ;;		_calculate_duration
 12675 ;;		_check_event_trigger
 12676 ;; This function uses a non-reentrant model
 12677 ;;
 12678                           
 12679                           	psect	text48
 12680   002A20                     __ptext48:
 12681                           	callstack 0
 12682   002A20                     _clcd_write:
 12683                           	callstack 27
 12684                           
 12685                           ;incstack = 0
 12686                           ;clcd_write@byte stored from wreg
 12687   002A20  6E06               	movwf	clcd_write@byte^0,c
 12688   002A22                     
 12689                           ;clcd.c: 3: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 4: {;
      +                          clcd.c: 5:  RC1 = control_bit;
 12690   002A22  B005               	btfsc	clcd_write@control_bit^0,0,c
 12691   002A24  EF16  F015         	goto	u2191
 12692   002A28  EF19  F015         	goto	u2190
 12693   002A2C                     u2191:
 12694   002A2C  8282               	bsf	3970,1,c	;volatile
 12695   002A2E  EF1A  F015         	goto	u2205
 12696   002A32                     u2190:
 12697   002A32  9282               	bcf	3970,1,c	;volatile
 12698   002A34                     u2205:
 12699   002A34                     
 12700                           ;clcd.c: 6:  PORTD = byte;
 12701   002A34  C006  FF83         	movff	clcd_write@byte,3971	;volatile
 12702   002A38                     
 12703                           ;clcd.c: 9:  RC2 = 1;
 12704   002A38  8482               	bsf	3970,2,c	;volatile
 12705   002A3A                     
 12706                           ;clcd.c: 10:  RC2 = 0;
 12707   002A3A  9482               	bcf	3970,2,c	;volatile
 12708   002A3C                     
 12709                           ;clcd.c: 12:  TRISD7 = 0xFF;
 12710   002A3C  8E95               	bsf	3989,7,c	;volatile
 12711   002A3E                     
 12712                           ;clcd.c: 13:  RC0 = 1;
 12713   002A3E  8082               	bsf	3970,0,c	;volatile
 12714   002A40                     
 12715                           ;clcd.c: 14:  RC1 = 0;
 12716   002A40  9282               	bcf	3970,1,c	;volatile
 12717   002A42                     l2863:
 12718                           
 12719                           ;clcd.c: 17:  {;clcd.c: 18:   RC2 = 1;
 12720   002A42  8482               	bsf	3970,2,c	;volatile
 12721   002A44                     
 12722                           ;clcd.c: 19:   RC2 = 0;
 12723   002A44  9482               	bcf	3970,2,c	;volatile
 12724   002A46                     
 12725                           ;clcd.c: 20:  } while (RD7);
 12726   002A46  BE83               	btfsc	3971,7,c	;volatile
 12727   002A48  EF28  F015         	goto	u2211
 12728   002A4C  EF2A  F015         	goto	u2210
 12729   002A50                     u2211:
 12730   002A50  EF21  F015         	goto	l2863
 12731   002A54                     u2210:
 12732   002A54                     
 12733                           ;clcd.c: 22:  RC0 = 0;
 12734   002A54  9082               	bcf	3970,0,c	;volatile
 12735                           
 12736                           ;clcd.c: 23:  TRISD7 = 0x00;
 12737   002A56  9E95               	bcf	3989,7,c	;volatile
 12738   002A58  0012               	return		;funcret
 12739   002A5A                     __end_of_clcd_write:
 12740                           	callstack 0
 12741                           
 12742 ;; *************** function ___lwdiv *****************
 12743 ;; Defined at:
 12744 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
 12745 ;; Parameters:    Size  Location     Type
 12746 ;;  dividend        2    4[COMRAM] unsigned int 
 12747 ;;  divisor         2    6[COMRAM] unsigned int 
 12748 ;; Auto vars:     Size  Location     Type
 12749 ;;  quotient        2    8[COMRAM] unsigned int 
 12750 ;;  counter         1   10[COMRAM] unsigned char 
 12751 ;; Return value:  Size  Location     Type
 12752 ;;                  2    4[COMRAM] unsigned int 
 12753 ;; Registers used:
 12754 ;;		wreg, status,2, status,0
 12755 ;; Tracked objects:
 12756 ;;		On entry : 0/0
 12757 ;;		On exit  : 0/0
 12758 ;;		Unchanged: 0/0
 12759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12760 ;;      Params:         4       0       0       0       0       0       0
 12761 ;;      Locals:         3       0       0       0       0       0       0
 12762 ;;      Temps:          0       0       0       0       0       0       0
 12763 ;;      Totals:         7       0       0       0       0       0       0
 12764 ;;Total ram usage:        7 bytes
 12765 ;; Hardware stack levels used: 1
 12766 ;; Hardware stack levels required when called: 1
 12767 ;; This function calls:
 12768 ;;		Nothing
 12769 ;; This function is called by:
 12770 ;;		_set_EVENT
 12771 ;;		_set_time
 12772 ;;		_set_date
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text49
 12777   0026F4                     __ptext49:
 12778                           	callstack 0
 12779   0026F4                     ___lwdiv:
 12780                           	callstack 27
 12781   0026F4  0E00               	movlw	0
 12782   0026F6  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
 12783   0026F8  0E00               	movlw	0
 12784   0026FA  6E09               	movwf	___lwdiv@quotient^0,c
 12785   0026FC  5007               	movf	___lwdiv@divisor^0,w,c
 12786   0026FE  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
 12787   002700  B4D8               	btfsc	status,2,c
 12788   002702  EF85  F013         	goto	u2521
 12789   002706  EF87  F013         	goto	u2520
 12790   00270A                     u2521:
 12791   00270A  EFAF  F013         	goto	l1259
 12792   00270E                     u2520:
 12793   00270E  0E01               	movlw	1
 12794   002710  6E0B               	movwf	___lwdiv@counter^0,c
 12795   002712  EF8F  F013         	goto	l3179
 12796   002716                     l3177:
 12797   002716  90D8               	bcf	status,0,c
 12798   002718  3607               	rlcf	___lwdiv@divisor^0,f,c
 12799   00271A  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
 12800   00271C  2A0B               	incf	___lwdiv@counter^0,f,c
 12801   00271E                     l3179:
 12802   00271E  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
 12803   002720  EF94  F013         	goto	u2531
 12804   002724  EF96  F013         	goto	u2530
 12805   002728                     u2531:
 12806   002728  EF8B  F013         	goto	l3177
 12807   00272C                     u2530:
 12808   00272C                     l3181:
 12809   00272C  90D8               	bcf	status,0,c
 12810   00272E  3609               	rlcf	___lwdiv@quotient^0,f,c
 12811   002730  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
 12812   002732  5007               	movf	___lwdiv@divisor^0,w,c
 12813   002734  5C05               	subwf	___lwdiv@dividend^0,w,c
 12814   002736  5008               	movf	(___lwdiv@divisor+1)^0,w,c
 12815   002738  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
 12816   00273A  A0D8               	btfss	status,0,c
 12817   00273C  EFA2  F013         	goto	u2541
 12818   002740  EFA4  F013         	goto	u2540
 12819   002744                     u2541:
 12820   002744  EFA9  F013         	goto	l3189
 12821   002748                     u2540:
 12822   002748  5007               	movf	___lwdiv@divisor^0,w,c
 12823   00274A  5E05               	subwf	___lwdiv@dividend^0,f,c
 12824   00274C  5008               	movf	(___lwdiv@divisor+1)^0,w,c
 12825   00274E  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
 12826   002750  8009               	bsf	___lwdiv@quotient^0,0,c
 12827   002752                     l3189:
 12828   002752  90D8               	bcf	status,0,c
 12829   002754  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
 12830   002756  3207               	rrcf	___lwdiv@divisor^0,f,c
 12831   002758  2E0B               	decfsz	___lwdiv@counter^0,f,c
 12832   00275A  EF96  F013         	goto	l3181
 12833   00275E                     l1259:
 12834   00275E  C009  F005         	movff	___lwdiv@quotient,?___lwdiv
 12835   002762  C00A  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12836   002766  0012               	return		;funcret
 12837   002768                     __end_of___lwdiv:
 12838                           	callstack 0
 12839                           
 12840 ;; *************** function _isr *****************
 12841 ;; Defined at:
 12842 ;;		line 21 in file "isr1.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;		None
 12845 ;; Auto vars:     Size  Location     Type
 12846 ;;		None
 12847 ;; Return value:  Size  Location     Type
 12848 ;;                  1    wreg      void 
 12849 ;; Registers used:
 12850 ;;		wreg, status,2, status,0
 12851 ;; Tracked objects:
 12852 ;;		On entry : 0/0
 12853 ;;		On exit  : 0/0
 12854 ;;		Unchanged: 0/0
 12855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12856 ;;      Params:         0       0       0       0       0       0       0
 12857 ;;      Locals:         0       0       0       0       0       0       0
 12858 ;;      Temps:          4       0       0       0       0       0       0
 12859 ;;      Totals:         4       0       0       0       0       0       0
 12860 ;;Total ram usage:        4 bytes
 12861 ;; Hardware stack levels used: 1
 12862 ;; This function calls:
 12863 ;;		Nothing
 12864 ;; This function is called by:
 12865 ;;		Interrupt level 2
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           	psect	intcode
 12870   000008                     __pintcode:
 12871                           	callstack 0
 12872   000008                     _isr:
 12873                           	callstack 22
 12874                           
 12875                           ;incstack = 0
 12876   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12877   00000A  ED7A  F00B         	call	int_func,f	;refresh shadow registers
 12878                           
 12879                           	psect	intcode_body
 12880   0016F4                     __pintcode_body:
 12881                           	callstack 22
 12882   0016F4                     int_func:
 12883                           	callstack 22
 12884   0016F4  0006               	pop		; remove dummy address from shadow register refresh
 12885   0016F6                     
 12886                           ;isr1.c: 22:     static unsigned long int count = 0;;isr1.c: 23:     static unsigned lon
      +                          g int sec_5_count=0;;isr1.c: 24:     static unsigned long int sec_2_count=0;;isr1.c: 27:
      +                               if (TMR0IF) {
 12887   0016F6  A4F2               	btfss	4082,2,c	;volatile
 12888   0016F8  EF80  F00B         	goto	i2u426_41
 12889   0016FC  EF82  F00B         	goto	i2u426_40
 12890   001700                     i2u426_41:
 12891   001700  EF50  F00C         	goto	i2l765
 12892   001704                     i2u426_40:
 12893   001704                     
 12894                           ;isr1.c: 28:         TMR0 = TMR0 + 8;
 12895   001704  0E08               	movlw	8
 12896   001706  24D6               	addwf	214,w,c	;volatile
 12897   001708  6ED6               	movwf	214,c	;volatile
 12898   00170A  0E00               	movlw	0
 12899   00170C  20D7               	addwfc	215,w,c	;volatile
 12900   00170E  6ED7               	movwf	215,c	;volatile
 12901                           
 12902                           ;isr1.c: 30:         if(seconds_5==0)
 12903   001710  0100               	movlb	0	; () banked
 12904   001712  5177               	movf	_seconds_5& (0+255),w,b
 12905   001714  1178               	iorwf	(_seconds_5+1)& (0+255),w,b
 12906   001716  A4D8               	btfss	status,2,c
 12907   001718  EF90  F00B         	goto	i2u427_41
 12908   00171C  EF92  F00B         	goto	i2u427_40
 12909   001720                     i2u427_41:
 12910   001720  EFAF  F00B         	goto	i2l4149
 12911   001724                     i2u427_40:
 12912   001724                     
 12913                           ; BSR set to: 0
 12914                           ;isr1.c: 31:         {;isr1.c: 32:           if(sec_5_count++==80000)
 12915   001724  0E01               	movlw	1
 12916   001726  2764               	addwf	isr@sec_5_count& (0+255),f,b
 12917   001728  0E00               	movlw	0
 12918   00172A  2365               	addwfc	(isr@sec_5_count+1)& (0+255),f,b
 12919   00172C  2366               	addwfc	(isr@sec_5_count+2)& (0+255),f,b
 12920   00172E  2367               	addwfc	(isr@sec_5_count+3)& (0+255),f,b
 12921   001730  0E81               	movlw	129
 12922   001732  1964               	xorwf	isr@sec_5_count& (0+255),w,b
 12923   001734  E10A               	bnz	i2u428_41
 12924   001736  0E38               	movlw	56
 12925   001738  1965               	xorwf	(isr@sec_5_count+1)& (0+255),w,b
 12926   00173A  E107               	bnz	i2u428_41
 12927   00173C  0566               	decf	(isr@sec_5_count+2)& (0+255),w,b
 12928   00173E  1167               	iorwf	(isr@sec_5_count+3)& (0+255),w,b
 12929   001740  A4D8               	btfss	status,2,c
 12930   001742  EFA5  F00B         	goto	i2u428_41
 12931   001746  EFA7  F00B         	goto	i2u428_40
 12932   00174A                     i2u428_41:
 12933   00174A  EFAF  F00B         	goto	i2l4149
 12934   00174E                     i2u428_40:
 12935   00174E                     
 12936                           ; BSR set to: 0
 12937                           ;isr1.c: 33:            {;isr1.c: 34:             seconds_2=1;
 12938   00174E  0E00               	movlw	0
 12939   001750  6F7A               	movwf	(_seconds_2+1)& (0+255),b
 12940   001752  0E01               	movlw	1
 12941   001754  6F79               	movwf	_seconds_2& (0+255),b
 12942                           
 12943                           ;isr1.c: 35:             seconds_5=1;
 12944   001756  0E00               	movlw	0
 12945   001758  6F78               	movwf	(_seconds_5+1)& (0+255),b
 12946   00175A  0E01               	movlw	1
 12947   00175C  6F77               	movwf	_seconds_5& (0+255),b
 12948   00175E                     i2l4149:
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;isr1.c: 38:         if(seconds_2==1)
 12952   00175E  0579               	decf	_seconds_2& (0+255),w,b
 12953   001760  117A               	iorwf	(_seconds_2+1)& (0+255),w,b
 12954   001762  A4D8               	btfss	status,2,c
 12955   001764  EFB6  F00B         	goto	i2u429_41
 12956   001768  EFB8  F00B         	goto	i2u429_40
 12957   00176C                     i2u429_41:
 12958   00176C  EF10  F00C         	goto	i2l4167
 12959   001770                     i2u429_40:
 12960   001770                     
 12961                           ; BSR set to: 0
 12962                           ;isr1.c: 39:         {;isr1.c: 40:            if(sec_2_count++==40000)
 12963   001770  0E01               	movlw	1
 12964   001772  2760               	addwf	isr@sec_2_count& (0+255),f,b
 12965   001774  0E00               	movlw	0
 12966   001776  2361               	addwfc	(isr@sec_2_count+1)& (0+255),f,b
 12967   001778  2362               	addwfc	(isr@sec_2_count+2)& (0+255),f,b
 12968   00177A  2363               	addwfc	(isr@sec_2_count+3)& (0+255),f,b
 12969   00177C  0E41               	movlw	65
 12970   00177E  1960               	xorwf	isr@sec_2_count& (0+255),w,b
 12971   001780  E109               	bnz	i2u430_41
 12972   001782  0E9C               	movlw	156
 12973   001784  1961               	xorwf	(isr@sec_2_count+1)& (0+255),w,b
 12974   001786  1162               	iorwf	(isr@sec_2_count+2)& (0+255),w,b
 12975   001788  1163               	iorwf	(isr@sec_2_count+3)& (0+255),w,b
 12976   00178A  A4D8               	btfss	status,2,c
 12977   00178C  EFCA  F00B         	goto	i2u430_41
 12978   001790  EFCC  F00B         	goto	i2u430_40
 12979   001794                     i2u430_41:
 12980   001794  EFEC  F00B         	goto	i2l4159
 12981   001798                     i2u430_40:
 12982   001798                     
 12983                           ; BSR set to: 0
 12984                           ;isr1.c: 41:            {;isr1.c: 42:             sec_2_count=0;
 12985   001798  0E00               	movlw	0
 12986   00179A  6F60               	movwf	isr@sec_2_count& (0+255),b
 12987   00179C  0E00               	movlw	0
 12988   00179E  6F61               	movwf	(isr@sec_2_count+1)& (0+255),b
 12989   0017A0  0E00               	movlw	0
 12990   0017A2  6F62               	movwf	(isr@sec_2_count+2)& (0+255),b
 12991   0017A4  0E00               	movlw	0
 12992   0017A6  6F63               	movwf	(isr@sec_2_count+3)& (0+255),b
 12993                           
 12994                           ;isr1.c: 43:             seconds_2=0;
 12995   0017A8  0E00               	movlw	0
 12996   0017AA  6F7A               	movwf	(_seconds_2+1)& (0+255),b
 12997   0017AC  0E00               	movlw	0
 12998   0017AE  6F79               	movwf	_seconds_2& (0+255),b
 12999                           
 13000                           ;isr1.c: 44:             sec_5_count=0;
 13001   0017B0  0E00               	movlw	0
 13002   0017B2  6F64               	movwf	isr@sec_5_count& (0+255),b
 13003   0017B4  0E00               	movlw	0
 13004   0017B6  6F65               	movwf	(isr@sec_5_count+1)& (0+255),b
 13005   0017B8  0E00               	movlw	0
 13006   0017BA  6F66               	movwf	(isr@sec_5_count+2)& (0+255),b
 13007   0017BC  0E00               	movlw	0
 13008   0017BE  6F67               	movwf	(isr@sec_5_count+3)& (0+255),b
 13009                           
 13010                           ;isr1.c: 45:             seconds_5=0;
 13011   0017C0  0E00               	movlw	0
 13012   0017C2  6F78               	movwf	(_seconds_5+1)& (0+255),b
 13013   0017C4  0E00               	movlw	0
 13014   0017C6  6F77               	movwf	_seconds_5& (0+255),b
 13015                           
 13016                           ;isr1.c: 46:             seconds_flag=0;
 13017   0017C8  0E00               	movlw	0
 13018   0017CA  6F9A               	movwf	(_seconds_flag+1)& (0+255),b
 13019   0017CC  0E00               	movlw	0
 13020   0017CE  6F99               	movwf	_seconds_flag& (0+255),b
 13021   0017D0                     
 13022                           ; BSR set to: 0
 13023                           ;isr1.c: 47:             flag=0;
 13024   0017D0  6BA0               	clrf	_flag& (0+255),b
 13025   0017D2                     
 13026                           ; BSR set to: 0
 13027                           ;isr1.c: 48:             f=0;
 13028   0017D2  6B9E               	clrf	_f& (0+255),b
 13029                           
 13030                           ;isr1.c: 49:            }
 13031   0017D4  EF10  F00C         	goto	i2l4167
 13032   0017D8                     i2l4159:
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;isr1.c: 51:            {;isr1.c: 52:                if(match==1)
 13036   0017D8  057D               	decf	_match& (0+255),w,b
 13037   0017DA  117E               	iorwf	(_match+1)& (0+255),w,b
 13038   0017DC  A4D8               	btfss	status,2,c
 13039   0017DE  EFF3  F00B         	goto	i2u431_41
 13040   0017E2  EFF5  F00B         	goto	i2u431_40
 13041   0017E6                     i2u431_41:
 13042   0017E6  EF0C  F00C         	goto	i2l759
 13043   0017EA                     i2u431_40:
 13044   0017EA                     
 13045                           ; BSR set to: 0
 13046                           ;isr1.c: 53:                {;isr1.c: 54:                 if(p<event_count)
 13047   0017EA  5048               	movf	_event_count^0,w,c
 13048   0017EC  5D85               	subwf	_p& (0+255),w,b
 13049   0017EE  5049               	movf	(_event_count+1)^0,w,c
 13050   0017F0  5986               	subwfb	(_p+1)& (0+255),w,b
 13051   0017F2  B0D8               	btfsc	status,0,c
 13052   0017F4  EFFE  F00B         	goto	i2u432_41
 13053   0017F8  EF00  F00C         	goto	i2u432_40
 13054   0017FC                     i2u432_41:
 13055   0017FC  EF04  F00C         	goto	i2l4165
 13056   001800                     i2u432_40:
 13057   001800                     
 13058                           ; BSR set to: 0
 13059                           ;isr1.c: 55:                 {;isr1.c: 56:                  p++;
 13060   001800  4B85               	infsnz	_p& (0+255),f,b
 13061   001802  2B86               	incf	(_p+1)& (0+255),f,b
 13062                           
 13063                           ;isr1.c: 57:                 }
 13064   001804  EF08  F00C         	goto	i2l761
 13065   001808                     i2l4165:
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;isr1.c: 59:                 {;isr1.c: 60:                    p=0;
 13069   001808  0E00               	movlw	0
 13070   00180A  6F86               	movwf	(_p+1)& (0+255),b
 13071   00180C  0E00               	movlw	0
 13072   00180E  6F85               	movwf	_p& (0+255),b
 13073   001810                     i2l761:
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;isr1.c: 62:                 match=0;
 13077   001810  0E00               	movlw	0
 13078   001812  6F7E               	movwf	(_match+1)& (0+255),b
 13079   001814  0E00               	movlw	0
 13080   001816  6F7D               	movwf	_match& (0+255),b
 13081   001818                     i2l759:
 13082                           
 13083                           ; BSR set to: 0
 13084                           ;isr1.c: 64:                seconds_flag=1;
 13085   001818  0E00               	movlw	0
 13086   00181A  6F9A               	movwf	(_seconds_flag+1)& (0+255),b
 13087   00181C  0E01               	movlw	1
 13088   00181E  6F99               	movwf	_seconds_flag& (0+255),b
 13089   001820                     i2l4167:
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;isr1.c: 69:         if (F == 1) {
 13093   001820  0587               	decf	_F& (0+255),w,b
 13094   001822  1188               	iorwf	(_F+1)& (0+255),w,b
 13095   001824  A4D8               	btfss	status,2,c
 13096   001826  EF17  F00C         	goto	i2u433_41
 13097   00182A  EF19  F00C         	goto	i2u433_40
 13098   00182E                     i2u433_41:
 13099   00182E  EF4F  F00C         	goto	i2l4175
 13100   001832                     i2u433_40:
 13101   001832                     
 13102                           ; BSR set to: 0
 13103                           ;isr1.c: 70:             if (count++ != duration_) {
 13104   001832  0E01               	movlw	1
 13105   001834  2768               	addwf	isr@count& (0+255),f,b
 13106   001836  0E00               	movlw	0
 13107   001838  2369               	addwfc	(isr@count+1)& (0+255),f,b
 13108   00183A  236A               	addwfc	(isr@count+2)& (0+255),f,b
 13109   00183C  236B               	addwfc	(isr@count+3)& (0+255),f,b
 13110   00183E  0E01               	movlw	1
 13111   001840  256C               	addwf	_duration_& (0+255),w,b
 13112   001842  6E01               	movwf	??_isr^0,c
 13113   001844  0E00               	movlw	0
 13114   001846  216D               	addwfc	(_duration_+1)& (0+255),w,b
 13115   001848  6E02               	movwf	(??_isr+1)^0,c
 13116   00184A  0E00               	movlw	0
 13117   00184C  216E               	addwfc	(_duration_+2)& (0+255),w,b
 13118   00184E  6E03               	movwf	(??_isr+2)^0,c
 13119   001850  0E00               	movlw	0
 13120   001852  216F               	addwfc	(_duration_+3)& (0+255),w,b
 13121   001854  6E04               	movwf	(??_isr+3)^0,c
 13122   001856  5168               	movf	isr@count& (0+255),w,b
 13123   001858  1801               	xorwf	??_isr^0,w,c
 13124   00185A  E10F               	bnz	i2u434_40
 13125   00185C  5169               	movf	(isr@count+1)& (0+255),w,b
 13126   00185E  1802               	xorwf	(??_isr+1)^0,w,c
 13127   001860  E10C               	bnz	i2u434_40
 13128   001862  516A               	movf	(isr@count+2)& (0+255),w,b
 13129   001864  1803               	xorwf	(??_isr+2)^0,w,c
 13130   001866  E109               	bnz	i2u434_40
 13131   001868  516B               	movf	(isr@count+3)& (0+255),w,b
 13132   00186A  1804               	xorwf	(??_isr+3)^0,w,c
 13133   00186C  B4D8               	btfsc	status,2,c
 13134   00186E  EF3B  F00C         	goto	i2u434_41
 13135   001872  EF3D  F00C         	goto	i2u434_40
 13136   001876                     i2u434_41:
 13137   001876  EF41  F00C         	goto	i2l763
 13138   00187A                     i2u434_40:
 13139   00187A                     
 13140                           ; BSR set to: 0
 13141                           ;isr1.c: 72:                 TRISB0 = 0;
 13142   00187A  9093               	bcf	3987,0,c	;volatile
 13143                           
 13144                           ;isr1.c: 73:                 RB0 = 1;
 13145   00187C  8081               	bsf	3969,0,c	;volatile
 13146                           
 13147                           ;isr1.c: 74:             } else {
 13148   00187E  EF4F  F00C         	goto	i2l4175
 13149   001882                     i2l763:
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;isr1.c: 75:                 TRISB0 = 0;
 13153   001882  9093               	bcf	3987,0,c	;volatile
 13154                           
 13155                           ;isr1.c: 76:                 RB0 = 0;
 13156   001884  9081               	bcf	3969,0,c	;volatile
 13157   001886                     
 13158                           ; BSR set to: 0
 13159                           ;isr1.c: 77:                 F = 0;
 13160   001886  0E00               	movlw	0
 13161   001888  6F88               	movwf	(_F+1)& (0+255),b
 13162   00188A  0E00               	movlw	0
 13163   00188C  6F87               	movwf	_F& (0+255),b
 13164                           
 13165                           ;isr1.c: 78:                  count = 0;
 13166   00188E  0E00               	movlw	0
 13167   001890  6F68               	movwf	isr@count& (0+255),b
 13168   001892  0E00               	movlw	0
 13169   001894  6F69               	movwf	(isr@count+1)& (0+255),b
 13170   001896  0E00               	movlw	0
 13171   001898  6F6A               	movwf	(isr@count+2)& (0+255),b
 13172   00189A  0E00               	movlw	0
 13173   00189C  6F6B               	movwf	(isr@count+3)& (0+255),b
 13174   00189E                     i2l4175:
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;isr1.c: 82:         TMR0IF = 0;
 13178   00189E  94F2               	bcf	4082,2,c	;volatile
 13179   0018A0                     i2l765:
 13180   0018A0  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13181   0018A2  0011               	retfie		f
 13182   0018A4                     __end_of_isr:
 13183                           	callstack 0
 13184                           
 13185                           	psect	rparam
 13186   000001                     ___rparam_used  equ	1
 13187   000000                     ___param_bank   equ	0
 13188   000000                     __Lparam        equ	__Lrparam
 13189   000000                     __Hparam        equ	__Hrparam
 13190                           
 13191                           	psect	temp
 13192   00005B                     btemp:
 13193                           	callstack 0
 13194   00005B                     	ds	1
 13195   00005B                     int$flags       set	btemp
 13196   00005C                     wtemp8          set	btemp+1
 13197   00005C                     ttemp5          set	btemp+1
 13198   00005F                     ttemp6          set	btemp+4
 13199   000063                     ttemp7          set	btemp+8
 13200                           
 13201                           	psect	idloc
 13202                           
 13203                           ;Config register IDLOC0 @ 0x200000
 13204                           ;	unspecified, using default values
 13205   200000                     	org	2097152
 13206   200000  FF                 	db	255
 13207                           
 13208                           ;Config register IDLOC1 @ 0x200001
 13209                           ;	unspecified, using default values
 13210   200001                     	org	2097153
 13211   200001  FF                 	db	255
 13212                           
 13213                           ;Config register IDLOC2 @ 0x200002
 13214                           ;	unspecified, using default values
 13215   200002                     	org	2097154
 13216   200002  FF                 	db	255
 13217                           
 13218                           ;Config register IDLOC3 @ 0x200003
 13219                           ;	unspecified, using default values
 13220   200003                     	org	2097155
 13221   200003  FF                 	db	255
 13222                           
 13223                           ;Config register IDLOC4 @ 0x200004
 13224                           ;	unspecified, using default values
 13225   200004                     	org	2097156
 13226   200004  FF                 	db	255
 13227                           
 13228                           ;Config register IDLOC5 @ 0x200005
 13229                           ;	unspecified, using default values
 13230   200005                     	org	2097157
 13231   200005  FF                 	db	255
 13232                           
 13233                           ;Config register IDLOC6 @ 0x200006
 13234                           ;	unspecified, using default values
 13235   200006                     	org	2097158
 13236   200006  FF                 	db	255
 13237                           
 13238                           ;Config register IDLOC7 @ 0x200007
 13239                           ;	unspecified, using default values
 13240   200007                     	org	2097159
 13241   200007  FF                 	db	255
 13242                           
 13243                           	psect	config
 13244                           
 13245                           ; Padding undefined space
 13246   300000                     	org	3145728
 13247   300000  FF                 	db	255
 13248                           
 13249                           ;Config register CONFIG1H @ 0x300001
 13250                           ;	unspecified, using default values
 13251                           ;	Oscillator Selection bits
 13252                           ;	OSC = 0x7, unprogrammed default
 13253                           ;	Fail-Safe Clock Monitor Enable bit
 13254                           ;	FCMEN = 0x0, unprogrammed default
 13255                           ;	Internal/External Oscillator Switchover bit
 13256                           ;	IESO = 0x0, unprogrammed default
 13257   300001                     	org	3145729
 13258   300001  07                 	db	7
 13259                           
 13260                           ;Config register CONFIG2L @ 0x300002
 13261                           ;	unspecified, using default values
 13262                           ;	Power-up Timer Enable bit
 13263                           ;	PWRT = 0x1, unprogrammed default
 13264                           ;	Brown-out Reset Enable bits
 13265                           ;	BOREN = 0x3, unprogrammed default
 13266                           ;	Brown-out Reset Voltage bits
 13267                           ;	BORV = 0x3, unprogrammed default
 13268   300002                     	org	3145730
 13269   300002  1F                 	db	31
 13270                           
 13271                           ;Config register CONFIG2H @ 0x300003
 13272                           ;	unspecified, using default values
 13273                           ;	Watchdog Timer Enable bit
 13274                           ;	WDT = 0x1, unprogrammed default
 13275                           ;	Watchdog Timer Postscale Select bits
 13276                           ;	WDTPS = 0xF, unprogrammed default
 13277   300003                     	org	3145731
 13278   300003  1F                 	db	31
 13279                           
 13280                           ; Padding undefined space
 13281   300004                     	org	3145732
 13282   300004  FF                 	db	255
 13283                           
 13284                           ;Config register CONFIG3H @ 0x300005
 13285                           ;	unspecified, using default values
 13286                           ;	PORTB A/D Enable bit
 13287                           ;	PBADEN = 0x1, unprogrammed default
 13288                           ;	Low-Power Timer 1 Oscillator Enable bit
 13289                           ;	LPT1OSC = 0x0, unprogrammed default
 13290                           ;	MCLR Pin Enable bit
 13291                           ;	MCLRE = 0x1, unprogrammed default
 13292   300005                     	org	3145733
 13293   300005  82                 	db	130
 13294                           
 13295                           ;Config register CONFIG4L @ 0x300006
 13296                           ;	unspecified, using default values
 13297                           ;	Stack Full/Underflow Reset Enable bit
 13298                           ;	STVREN = 0x1, unprogrammed default
 13299                           ;	Single-Supply ICSP Enable bit
 13300                           ;	LVP = 0x1, unprogrammed default
 13301                           ;	Boot Block Size Select bit
 13302                           ;	BBSIZ = 0x0, unprogrammed default
 13303                           ;	Extended Instruction Set Enable bit
 13304                           ;	XINST = 0x0, unprogrammed default
 13305                           ;	Background Debugger Enable bit
 13306                           ;	DEBUG = 0x1, unprogrammed default
 13307   300006                     	org	3145734
 13308   300006  85                 	db	133
 13309                           
 13310                           ; Padding undefined space
 13311   300007                     	org	3145735
 13312   300007  FF                 	db	255
 13313                           
 13314                           ;Config register CONFIG5L @ 0x300008
 13315                           ;	unspecified, using default values
 13316                           ;	Code Protection bit
 13317                           ;	CP0 = 0x1, unprogrammed default
 13318                           ;	Code Protection bit
 13319                           ;	CP1 = 0x1, unprogrammed default
 13320                           ;	Code Protection bit
 13321                           ;	CP2 = 0x1, unprogrammed default
 13322                           ;	Code Protection bit
 13323                           ;	CP3 = 0x1, unprogrammed default
 13324   300008                     	org	3145736
 13325   300008  0F                 	db	15
 13326                           
 13327                           ;Config register CONFIG5H @ 0x300009
 13328                           ;	unspecified, using default values
 13329                           ;	Boot Block Code Protection bit
 13330                           ;	CPB = 0x1, unprogrammed default
 13331                           ;	Data EEPROM Code Protection bit
 13332                           ;	CPD = 0x1, unprogrammed default
 13333   300009                     	org	3145737
 13334   300009  C0                 	db	192
 13335                           
 13336                           ;Config register CONFIG6L @ 0x30000A
 13337                           ;	unspecified, using default values
 13338                           ;	Write Protection bit
 13339                           ;	WRT0 = 0x1, unprogrammed default
 13340                           ;	Write Protection bit
 13341                           ;	WRT1 = 0x1, unprogrammed default
 13342                           ;	Write Protection bit
 13343                           ;	WRT2 = 0x1, unprogrammed default
 13344                           ;	Write Protection bit
 13345                           ;	WRT3 = 0x1, unprogrammed default
 13346   30000A                     	org	3145738
 13347   30000A  0F                 	db	15
 13348                           
 13349                           ;Config register CONFIG6H @ 0x30000B
 13350                           ;	unspecified, using default values
 13351                           ;	Configuration Register Write Protection bit
 13352                           ;	WRTC = 0x1, unprogrammed default
 13353                           ;	Boot Block Write Protection bit
 13354                           ;	WRTB = 0x1, unprogrammed default
 13355                           ;	Data EEPROM Write Protection bit
 13356                           ;	WRTD = 0x1, unprogrammed default
 13357   30000B                     	org	3145739
 13358   30000B  E0                 	db	224
 13359                           
 13360                           ;Config register CONFIG7L @ 0x30000C
 13361                           ;	unspecified, using default values
 13362                           ;	Table Read Protection bit
 13363                           ;	EBTR0 = 0x1, unprogrammed default
 13364                           ;	Table Read Protection bit
 13365                           ;	EBTR1 = 0x1, unprogrammed default
 13366                           ;	Table Read Protection bit
 13367                           ;	EBTR2 = 0x1, unprogrammed default
 13368                           ;	Table Read Protection bit
 13369                           ;	EBTR3 = 0x1, unprogrammed default
 13370   30000C                     	org	3145740
 13371   30000C  0F                 	db	15
 13372                           
 13373                           ;Config register CONFIG7H @ 0x30000D
 13374                           ;	unspecified, using default values
 13375                           ;	Boot Block Table Read Protection bit
 13376                           ;	EBTRB = 0x1, unprogrammed default
 13377   30000D                     	org	3145741
 13378   30000D  40                 	db	64
 13379                           tosu	equ	0xFFF
 13380                           tosh	equ	0xFFE
 13381                           tosl	equ	0xFFD
 13382                           stkptr	equ	0xFFC
 13383                           pclatu	equ	0xFFB
 13384                           pclath	equ	0xFFA
 13385                           pcl	equ	0xFF9
 13386                           tblptru	equ	0xFF8
 13387                           tblptrh	equ	0xFF7
 13388                           tblptrl	equ	0xFF6
 13389                           tablat	equ	0xFF5
 13390                           prodh	equ	0xFF4
 13391                           prodl	equ	0xFF3
 13392                           indf0	equ	0xFEF
 13393                           postinc0	equ	0xFEE
 13394                           postdec0	equ	0xFED
 13395                           preinc0	equ	0xFEC
 13396                           plusw0	equ	0xFEB
 13397                           fsr0h	equ	0xFEA
 13398                           fsr0l	equ	0xFE9
 13399                           wreg	equ	0xFE8
 13400                           indf1	equ	0xFE7
 13401                           postinc1	equ	0xFE6
 13402                           postdec1	equ	0xFE5
 13403                           preinc1	equ	0xFE4
 13404                           plusw1	equ	0xFE3
 13405                           fsr1h	equ	0xFE2
 13406                           fsr1l	equ	0xFE1
 13407                           bsr	equ	0xFE0
 13408                           indf2	equ	0xFDF
 13409                           postinc2	equ	0xFDE
 13410                           postdec2	equ	0xFDD
 13411                           preinc2	equ	0xFDC
 13412                           plusw2	equ	0xFDB
 13413                           fsr2h	equ	0xFDA
 13414                           fsr2l	equ	0xFD9
 13415                           status	equ	0xFD8

Data Sizes:
    Strings     165
    Constant    0
    Data        14
    BSS         672
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      90
    BANK0           160     20     147
    BANK1           256      0     180
    BANK2           256      0     180
    BANK3           256      0     180
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 17
		 -> date(BANK0[16]), duration(BANK0[16]), STORE_TIME(BANK0[10]), STR_1(CODE[6]), 
		 -> STR_10(CODE[7]), STR_11(CODE[17]), STR_12(CODE[7]), STR_13(CODE[3]), 
		 -> STR_14(CODE[3]), STR_15(CODE[17]), STR_16(CODE[5]), STR_17(CODE[3]), 
		 -> STR_18(CODE[3]), STR_19(CODE[3]), STR_2(CODE[6]), STR_20(CODE[3]), 
		 -> STR_21(CODE[15]), STR_22(CODE[15]), STR_23(CODE[15]), STR_24(CODE[15]), 
		 -> STR_25(CODE[3]), STR_26(CODE[3]), STR_27(CODE[3]), STR_28(CODE[3]), 
		 -> STR_29(CODE[3]), STR_3(CODE[3]), STR_30(CODE[3]), STR_31(CODE[3]), 
		 -> STR_32(CODE[3]), STR_33(CODE[15]), STR_34(CODE[15]), STR_4(CODE[3]), 
		 -> STR_5(CODE[5]), STR_6(CODE[4]), STR_7(CODE[5]), STR_8(CODE[5]), 
		 -> STR_9(CODE[4]), time(BANK0[9]), 

    compare@temp	PTR unsigned char [18] size(2) Largest target is 180
		 -> temp_AM(BANK2[180]), temp_PM(BANK3[180]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 180
		 -> view_event(BANK1[180]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 180
		 -> temp_AM(BANK2[180]), temp_PM(BANK3[180]), time(BANK0[9]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 180
		 -> check_event_time@ptr(COMRAM[10]), temp_AM(BANK2[180]), temp_PM(BANK3[180]), 

    strcopy@ptr	PTR unsigned char  size(2) Largest target is 180
		 -> compare@temp2(COMRAM[18]), temp_AM(BANK2[180]), temp_PM(BANK3[180]), view_event(BANK1[180]), 

    strcopy@qtr	PTR unsigned char  size(2) Largest target is 180
		 -> compare@temp2(COMRAM[18]), temp_AM(BANK2[180]), temp_PM(BANK3[180]), view_event(BANK1[180]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 180
		 -> view_event(BANK1[180]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 180
		 -> view_event(BANK1[180]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 180
		 -> view_event(BANK1[180]), 


Critical Paths under _main in COMRAM

    _main->_check_event_trigger
    _init_config->_init_ds1307
    _init_ds1307->_write_ds1307
    _init_clcd->_clcd_write
    _display_time->_clcd_print
    _display_date->_clcd_print
    _compare->_strcmp
    _compare->_strcopy
    _check_event_trigger->_check_weekly_event
    _check_weekly_event->_check_event_time
    _get_date->_read_ds1307
    _get_current_day->_current_date
    _check_onetime_event->_check_event_time
    _check_daily_event->_check_event_time
    _check_event_time->_calculate_duration
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _calculate_duration->___lmul
    _GOTO_SET_TIMEDATA->_set_date
    _GOTO_SET_TIMEDATA->_set_time
    _set_time->_write_ds1307
    _set_date->_write_ds1307
    _write_ds1307->___lwdiv
    _GOTO_SET_EVENT->_set_EVENT
    _view_ALARM->_clcd_print
    _set_EVENT->_write
    _write->_write_EEPROM
    _write_EEPROM->___lwmod
    _read_EEPROM->_i2c_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   11730
                                              0 BANK0     20    20      0
                     _GOTO_SET_EVENT
                  _GOTO_SET_TIMEDATA
                _check_event_trigger
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                            _compare
                       _display_date
                       _display_time
                           _get_date
                           _get_time
                        _init_config
                        _read_EEPROM
                      _read_switches
                            _strcopy
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      58
                                              4 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     311
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     242
                                             13 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0      69
                                              6 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _display_time                                         0     0      0     347
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (1) _display_date                                         0     0      0     347
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (1) _compare                                             32    28      4     693
                                             10 COMRAM    32    28      4
                             _strcmp
                            _strcopy
 ---------------------------------------------------------------------------------
 (1) _strcopy                                              6     2      4     148
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _check_event_trigger                                 11    11      0    4394
                                             66 COMRAM     5     5      0
                  _check_daily_event
                _check_onetime_event
                 _check_weekly_event
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _check_weekly_event                                   3     3      0    1550
                                             63 COMRAM     3     3      0
                   _check_event_time
                    _get_current_day
                           _get_date
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (1) _get_date                                             0     0      0      81
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _get_current_day                                      6     4      2      23
                                             16 COMRAM     6     4      2
                       _current_date
 ---------------------------------------------------------------------------------
 (4) _current_date                                        12    12      0       0
                                              4 COMRAM    12    12      0
 ---------------------------------------------------------------------------------
 (2) _check_onetime_event                                  0     0      0    1342
                   _check_event_time
 ---------------------------------------------------------------------------------
 (2) _check_daily_event                                    0     0      0    1342
                   _check_event_time
 ---------------------------------------------------------------------------------
 (3) _check_event_time                                    20    18      2    1342
                                             43 COMRAM    20    18      2
                 _calculate_duration
                         _clcd_write
                           _get_time
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4     116
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      81
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      81
                                              5 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _calculate_duration                                  27    25      2     800
                                             16 COMRAM    27    25      2
                             ___lmul
                         _clcd_putch
                         _clcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4      75
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8      96
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _GOTO_SET_TIMEDATA                                    0     0      0    1719
                         _clcd_print
                           _set_date
                           _set_time
 ---------------------------------------------------------------------------------
 (2) _set_time                                             2     2      0     792
                                             13 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                        _read_EEPROM
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _set_date                                             2     2      0     711
                                             13 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1      92
                                             11 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _GOTO_SET_EVENT                                       0     0      0    2250
                         _clcd_print
                         _clcd_write
                          _set_EVENT
                         _view_ALARM
 ---------------------------------------------------------------------------------
 (2) _view_ALARM                                           8     8      0     599
                                              9 COMRAM     8     8      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _set_EVENT                                            2     2      0    1366
                                             23 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                              _write
 ---------------------------------------------------------------------------------
 (3) _write                                               10    10      0     616
                                             13 COMRAM    10    10      0
                            ___lwmod
                        _read_EEPROM
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (4) _write_EEPROM                                         4     3      1     108
                                              9 COMRAM     4     3      1
                            ___lwmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _read_EEPROM                                          2     2      0      81
                                              5 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      29
                                              4 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (3) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     201
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     131
                                              6 COMRAM     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3     216
                                              6 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1      69
                                              4 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     202
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GOTO_SET_EVENT
     _clcd_print
       _clcd_write
     _clcd_write
     _set_EVENT
       ___lwdiv
       ___lwmod
       _clcd_print
       _clcd_putch
         _clcd_write
       _write
         ___lwmod
         _read_EEPROM
           _i2c_read
             _i2c_no_ack
             _i2c_rx_mode
               _i2c_idle
           _i2c_rep_start
             _i2c_idle
           _i2c_start
             _i2c_idle
           _i2c_stop
             _i2c_idle
           _i2c_write
             _i2c_idle
         _write_EEPROM
           ___lwmod (ARG)
           _i2c_start (ARG)
           _i2c_stop (ARG)
           _i2c_write (ARG)
     _view_ALARM
       _clcd_print
       _clcd_putch
   _GOTO_SET_TIMEDATA
     _clcd_print
     _set_date
       ___lwdiv
       ___lwmod
       _clcd_print
       _write_ds1307
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _set_time
       ___lwdiv
       ___lwmod
       _clcd_print
       _read_EEPROM
       _write_ds1307
   _check_event_trigger
     _check_daily_event
       _check_event_time
         _calculate_duration
           ___lmul
           _clcd_putch
           _clcd_write
           _strcpy
         _clcd_write
         _get_time
           _read_ds1307
             _i2c_read
             _i2c_rep_start
             _i2c_start
             _i2c_stop
             _i2c_write
         _strcmp
     _check_onetime_event
       _check_event_time
     _check_weekly_event
       _check_event_time
       _get_current_day
         _current_date
       _get_date
         _read_ds1307
       _read_EEPROM
     _clcd_write
   _clcd_print
   _clcd_putch
   _clcd_write
   _compare
     _strcmp
     _strcopy
   _display_date
     _clcd_print
     _clcd_putch
   _display_time
     _clcd_print
     _clcd_putch
   _get_date
   _get_time
   _init_config
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
     _init_i2c
     _init_matrix_keypad
     _init_timer0
   _read_EEPROM
   _read_switches
     _scan_key
   _strcopy

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBIGSFRlll       641      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0     180     70.3%
BITBANK2           256      0       0      0.0%
BANK2              256      0     180     70.3%
BITBANK1           256      0       0      0.0%
BANK1              256      0     180     70.3%
BITBANK0           160      0       0      0.0%
BANK0              160     20     147     91.9%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     71      90     95.7%
BITBIGSFRh          58      0       0      0.0%
BITBIGSFRlh         38      0       0      0.0%
BITBIGSFRllh        28      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     777      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 31 15:29:45 2024

                           _STORE_TIME 00C1                    _check_event_trigger 2260  
                                    _F 0087                                      _T 00E8  
                                    _f 009E                                      _m 0081  
                                    _n 007F                                      _p 0085  
                                    _w 0093                         clcd_print@addr 0009  
                       clcd_print@data 0007                                     l40 2C06  
                                   l41 2C08                                     l51 2C34  
                                   l35 2BE4                                     l60 2C4C  
                                   l38 2BF8                                     l54 2C44  
                                   l63 2C58                                     l48 2C3C  
                                   l57 2C14                                     l66 2C20  
                                   l83 2954                                     l86 2BA0  
                                   l89 2B12                     _init_matrix_keypad 2BE6  
                        ?_display_date 0001                                    l102 2BF6  
                                  l110 219A                                    l120 2220  
                                  l113 21C8                                    l105 2172  
                                  l122 2234                                    l114 2204  
                                  l106 225E                                    l123 225C  
                                  l115 21DC                                    l107 21AE  
                                  l124 2248                                    l108 2186  
                                  l117 21F0                                    l135 2606  
                                  l161 2A54                                    l162 2A58  
                                  l171 283E                                    l323 2B62  
                                  l165 2482                                    l174 2BB8  
                                  l422 100A                                    l335 1D4C  
                                  l503 299A                                    l344 267E  
                                  l338 2AE8                                    l443 140A  
                                  l419 0F28                                    l524 02E6  
                                  l605 2A1E                                    l453 1FBE  
                                  l358 1A4E                                    l462 2010  
                                  l703 16F2                                    l535 04C8  
                                  l608 2B3C                                    l480 1EB2  
                                  l472 1E62                                    l448 1F2C  
                                  l544 0720                                    l553 061C  
                                  l545 059A                                    l714 2334  
                                  l538 050C                                    l485 258E  
                                  l398 0BF6                                    l662 23DC  
                                  l558 06AA                                    l488 26F2  
                                  l665 2ABE                                    l498 1BDE  
                                  l691 2B82                                    l683 29DE  
                                  l780 28A8                                    l677 2152  
                                  l589 2BCE                                    l678 2156  
                                  l687 2C52                                    _CKE 7E3E  
                                  l779 2898                                    _GIE 7F97  
                                  _RB0 7C08                                    _RC0 7C10  
                                  _RC1 7C11                                    _RC2 7C12  
                                  _RE0 7C20                                    _INC 00ED  
                                  _RD7 7C1F                                    _PEN 7E2A  
                                  _SEN 7E28                                    _PSA 7EAB  
                                  _SMP 7E3F                          ?_display_time 0001  
                                  _day 004A                                    _key 009F  
                                  _sec 0052                                    _isr 0008  
                       clcd_putch@addr 0007                         clcd_putch@data 0008  
                                  prod 0FF3                                    wreg 0FE8  
                  ?_init_matrix_keypad 0001                view_ALARM@line_variable 000E  
                 ?_check_event_trigger 0001                                   l3001 16DA  
                                 l3011 28CC                                   l3003 16E8  
                                 l3013 28DA                                   l3005 28AA  
                                 l3021 2B86                                   l3101 26C8  
                                 l3031 27D4                                   l3015 28F0  
                                 l3007 28BC                                   l3023 2B8A  
                                 l3111 26E6                                   l3103 26D0  
                                 l3033 27E2                                   l3017 28F8  
                                 l3009 28C4                                   l3041 1BF6  
                                 l3025 2B90                                   l3121 2AB6  
                                 l3113 26EE                                   l3105 26D4  
                                 l3201 2BE0                                   l1266 2766  
                                 l1259 275E                                   l3035 280A  
                                 l3019 28FE                                   l3051 1C16  
                                 l3027 2B96                                   l3131 2054  
                                 l3115 26F0                                   l3107 26D8  
                                 l3211 2936                                   l3203 2BE2  
                                 l1276 290C                                   l3037 280E  
                                 l1269 2904                                   l3061 1C3E  
                                 l3053 1C1A                                   l3029 2B9C  
                                 l1453 2A8E                                   l3141 2096  
                                 l3125 2012                                   l3117 2A90  
                                 l3109 26DC                                   l3301 23F8  
                                 l3213 2940                                   l3205 290E  
                                 l3221 2158                                   l3071 1C78  
                                 l3063 1C50                                   l3055 1C36  
                                 l3047 1BFE                                   l3039 1BE0  
                                 l1447 27D2                                   l3151 20D6  
                                 l3143 20B2                                   l3127 2016  
                                 l3119 2A94                                   l3311 242E  
                                 l3303 2402                                   l3207 2916  
                                 l3215 2BE6                                   l3223 216C  
                                 l3081 1CF6                                   l3073 1C84  
                                 l3065 1C54                                   l3049 1C12  
                                 l3401 1A42                                   l3161 2118  
                                 l3153 20E2                                   l3145 20B6  
                                 l3137 205C                                   l3129 2022  
                                 l3321 2458                                   l3313 2434  
                                 l3305 2412                                   l3209 2922  
                                 l3217 2BEE                                   l3241 21A8  
                                 l4201 00A0                                   l3171 26F4  
                                 l3083 1CFA                                   l3067 1C58  
                                 l3411 074C                                   l3403 1A4A  
                                 l3163 2122                                   l3155 20EA  
                                 l3147 20B8                                   l3139 2092  
                                 l3091 2680                                   l3323 2462  
                                 l3315 243E                                   l3307 241C  
                                 l3219 2BF0                                   l3331 2BC2  
                                 l3251 21D6                                   l3235 2194  
                                 l4211 013C                                   l4203 00B6  
                                 l3181 272C                                   l3173 26FC  
                                 l3085 1CFE                                   l3069 1C74  
                                 l3501 0AC2                                   l3421 07E6  
                                 l3413 07AC                                   l3405 1A4C  
                                 l3341 18CA                                   l3165 212E  
                                 l3157 20EC                                   l3149 20C8  
                                 l3093 26A8                                   l3325 2470  
                                 l3317 2446                                   l3309 2424  
                                 l3333 2BCA                                   l3245 21C2  
                                 l3229 2180                                   l4301 0488  
                                 l4221 01CC                                   l4213 016C  
                                 l4205 00C2                                   l3191 2758  
                                 l3183 2732                                   l3175 270E  
                                 l3087 1D1A                                   l3079 1C8C  
                                 l3511 0B5A                                   l3503 0AE2  
                                 l3431 0850                                   l3423 0808  
                                 l3415 07C2                                   l3407 0728  
                                 l3343 18DA                                   l3351 191C  
                                 l3159 20F6                                   l3167 2138  
                                 l3095 26B2                                   l3327 247A  
                                 l3319 2450                                   l3335 2BCC  
                                 l3263 21FE                                   l4311 04C4  
                                 l4303 048C                                   l4231 0266  
                                 l4223 01F4                                   l4215 01AC  
                                 l4207 00F2                                   l3185 2748  
                                 l3177 2716                                   l3089 1D2C  
                                 l3521 0B8E                                   l3513 0B5C  
                                 l3505 0AFE                                   l3441 08B0  
                                 l3433 085C                                   l3425 0814  
                                 l3417 07C4                                   l3409 073C  
                                 l3353 1926                                   l3345 18E0  
                                 l3337 18A4                                   l3601 0EA4  
                                 l3169 213C                                   l3097 26BA  
                                 l3193 2BD0                                   l3329 2BBA  
                                 l3273 222E                                   l3257 21EA  
                                 l4321 050A                                   l4313 04D8  
                                 l4305 049E                                   l4241 02EA  
                                 l4233 0272                                   l4225 0202  
                                 l4217 01B2                                   l4209 0132  
                                 l3187 2750                                   l3179 271E  
                                 l3523 0B92                                   l3515 0B6E  
                                 l3531 0BA0                                   l3507 0B1E  
                                 l3451 090A                                   l3443 08C2  
                                 l3435 086E                                   l3427 0826  
                                 l3419 07D4                                   l3371 1976  
                                 l3355 1936                                   l3347 18F2  
                                 l3339 18B8                                   l3611 0FB2  
                                 l3603 0EE8                                   l3099 26BE  
                                 l3195 2BD4                                   l3267 221A  
                                 l4331 0540                                   l4323 051C  
                                 l4315 04EA                                   l4307 04B0  
                                 l4251 033E                                   l4243 02F2  
                                 l4235 02B2                                   l4227 0242  
                                 l4219 01B6                                   l3189 2752  
                                 l2821 2C46                                   l2901 29E6  
                                 l3541 0BE8                                   l3533 0BB0  
                                 l3525 0B94                                   l3517 0B82  
                                 l3509 0B3A                                   l3461 096A  
                                 l3453 0922                                   l3445 08DA  
                                 l3437 0880                                   l3429 0838  
                                 l3381 19BC                                   l3373 1992  
                                 l3365 1946                                   l3357 193E  
                                 l3349 191A                                   l3701 13FA  
                                 l3621 0FE6                                   l3613 0FB4  
                                 l3605 0FA4                                   l3293 23DE  
                                 l3197 2BDC                                   l3285 2256  
                                 l4341 057E                                   l4333 0550  
                                 l4325 0520                                   l4317 04FC  
                                 l4309 04B2                                   l4261 0376  
                                 l4253 034E                                   l4245 02FC  
                                 l4237 02B8                                   l4229 0248  
                                 l4181 0018                                   l2823 2C48  
                                 l2831 2C2E                                   l2911 2A04  
                                 l2903 29EC                                   l3535 0BBE  
                                 l3527 0B9C                                   l3519 0B8A  
                                 l3463 0976                                   l3455 092E  
                                 l3447 08E6                                   l3439 089E  
                                 l3471 09BA                                   l3391 1A1E  
                                 l3383 19CE                                   l3375 19A4  
                                 l3367 196E                                   l3359 193E  
                                 l3631 10B0                                   l3623 0FFA  
                                 l3607 0FA8                                   l3615 0FB6  
                                 l3551 0C90                                   l3543 0BF8  
                                 l3711 297A                                   l3703 2956  
                                 l3295 23E0                                   l3199 2BDE  
                                 l3279 2242                                   l4351 05C6  
                                 l4343 0586                                   l4335 0562  
                                 l4327 0524                                   l4319 0508  
                                 l4263 037A                                   l4247 030C  
                                 l4255 0352                                   l4239 02BC  
                                 l4191 0044                                   l4183 0030  
                                 l2825 2C54                                   l2833 2C30  
                                 l2841 2C10                                   l2921 2B2A  
                                 l2913 2B16                                   l2905 29F2  
                                 l3537 0BCE                                   l3529 0B9E  
                                 l3481 0A02                                   l3473 09CC  
                                 l3465 0988                                   l3457 0940  
                                 l3449 08F8                                   l3393 1A22  
                                 l3385 19D6                                   l3377 19AC  
                                 l3369 1972                                   l3641 10FE  
                                 l3633 10B2                                   l3625 100C  
                                 l3617 0FC4                                   l3609 0FAA  
                                 l3561 0CDC                                   l3553 0CA6  
                                 l3545 0C0C                                   l3721 29C2  
                                 l3713 297E                                   l3801 264E  
                                 l3297 23E6                                   l3289 225C  
                                 l4361 0660                                   l4353 05EA  
                                 l4345 0596                                   l4337 0566  
                                 l4329 0530                                   l4281 03F6  
                                 l4273 03B2                                   l4265 0382  
                                 l4257 0366                                   l4249 032C  
                                 l4193 0076                                   l4185 003C  
                                 l4177 0012                                   l2851 2A34  
                                 l2819 2BF8                                   l2843 2C16  
                                 l2835 2C3E                                   l2827 2C36  
                                 l2923 2B36                                   l2915 2B1A  
                                 l2907 29F8                                   l3539 0BD8  
                                 l3491 0A7E                                   l3483 0A06  
                                 l3475 09D4                                   l3467 099A  
                                 l3459 0952                                   l3379 19B8  
                                 l3651 1152                                   l3643 110A  
                                 l3635 10C2                                   l3627 1020  
                                 l3619 0FD4                                   l3571 0D46  
                                 l3563 0CFE                                   l3555 0CA8  
                                 l3547 0C20                                   l3811 1EC6  
                                 l2931 2538                                   l3731 2B64  
                                 l3723 29DA                                   l3715 299C  
                                 l3803 265E                                   l3299 23E8  
                                 l4371 06A4                                   l4363 0670  
                                 l4355 05FC                                   l4347 05AA  
                                 l4339 056E                                   l4291 045A  
                                 l4283 03FE                                   l4275 03E8  
                                 l4267 038A                                   l4259 0370  
                                 l4195 007C                                   l4179 0016  
                                 l2861 2A40                                   l2853 2A38  
                                 l2845 2C1E                                   l2837 2C40  
                                 l2829 2C38                                   l2917 2B20  
                                 l2909 29FC                                   l3493 0A90  
                                 l3485 0A22                                   l3477 09E6  
                                 l3469 09B2                                   l3397 1A2A  
                                 l3389 19F6                                   l3661 11AC  
                                 l3653 1164                                   l3645 111C  
                                 l3637 10D4                                   l3629 1030  
                                 l3581 0D9A                                   l3573 0D52  
                                 l3565 0D0A                                   l3557 0CB8  
                                 l3549 0C30                                   l3821 1F60  
                                 l3813 1ED6                                   l2941 2576  
                                 l2933 254E                                   l3733 2B7A  
                                 l3717 29A0                                   l3709 295E  
                                 l3901 1B7A                                   l3805 2668  
                                 l3741 2592                                   l4381 06E4  
                                 l4365 0672                                   l4357 063C  
                                 l4349 05B4                                   l4373 06AA  
                                 l4277 03EE                                   l4269 0392  
                                 l4197 0080                                   l2863 2A42  
                                 l2855 2A3A                                   l2839 2C0C  
                                 l2919 2B26                                   l3495 0A9C  
                                 l3487 0A42                                   l3479 09EE  
                                 l3399 1A3E                                   l3671 121A  
                                 l3663 11BE                                   l3655 1176  
                                 l3647 112E                                   l3639 10E6  
                                 l3591 0E10                                   l3583 0DAC  
                                 l3575 0D64                                   l3567 0D1C  
                                 l3559 0CCA                                   l3831 1FA8  
                                 l3823 1F70                                   l3815 1EFA  
                                 l2871 2AF0                                   l2943 258C  
                                 l2935 2560                                   l2927 250C  
                                 l2951 2796                                   l3727 2C4E  
                                 l3719 29AC                                   l3911 229C  
                                 l3903 1BB0                                   l3807 2678  
                                 l3751 25CC                                   l3743 25A2  
                                 l4383 06F6                                   l4375 06BA  
                                 l4367 0684                                   l4359 0650  
                                 l4287 041E                                   l4295 0462  
                                 l4199 009C                                   l2865 2A44  
                                 l2857 2A3C                                   l2849 2A22  
                                 l3497 0AA4                                   l3489 0A5E  
                                 l3681 12B2                                   l3673 1236  
                                 l3665 11D6                                   l3657 118E  
                                 l3649 1146                                   l3593 0E2C  
                                 l3585 0DBE                                   l3577 0D76  
                                 l3569 0D2E                                   l3841 1FE8  
                                 l3833 1FB8                                   l3825 1F80  
                                 l3817 1F0C                                   l3809 1EB4  
                                 l2961 1416                                   l2873 2AF6  
                                 l2937 2564                                   l2929 252A  
                                 l2953 27AE                                   l2945 2768  
                                 l3737 2B80                                   l3921 2316  
                                 l3913 22A4                                   l3905 1BB4  
                                 l3745 25A8                                   l3761 25EC  
                                 l4385 0706                                   l4377 06CA  
                                 l4369 0694                                   l4297 0474  
                                 l4289 0454                                   l2867 2A46  
                                 l2859 2A3E                                   l2883 2BA4  
                                 l3499 0AA6                                   l3851 1D6A  
                                 l3691 13DE                                   l3683 12CE  
                                 l3675 125E                                   l3659 119A  
                                 l3667 11DE                                   l3595 0E48  
                                 l3579 0D8E                                   l3587 0DD8  
                                 l3843 1FFA                                   l3827 1F86  
                                 l3819 1F4C                                   l3835 1FBE  
                                 l2891 2850                                   l2971 15AC  
                                 l2963 148C                                   l2875 2AFC  
                                 l2939 256E                                   l2947 276C  
                                 l3915 22D4                                   l3923 231A  
                                 l3907 2260                                   l3771 2B3E  
                                 l3763 25FC                                   l3747 25B8  
                                 l4387 0718                                   l4379 06DC  
                                 l4299 0476                                   l3861 1DD0  
                                 l3853 1D7A                                   l3693 13E0  
                                 l3685 12D0                                   l3677 127A  
                                 l3669 11FA                                   l3597 0E64  
                                 l3589 0DF4                                   l3845 200C  
                                 l3837 1FCE                                   l3829 1F98  
                                 l2893 285E                                   l2885 2A5A  
                                 l2981 163C                                   l2973 15C0  
                                 l2965 1502                                   l2877 2B00  
                                 l2869 2AEC                                   l2949 2774  
                                 l2957 2336                                   l3917 22DC  
                                 l3909 226C                                   l3925 231E  
                                 l3781 2B56                                   l3773 2B46  
                                 l3749 25CA                                   l3757 25D2  
                                 l3871 1E2A                                   l3863 1DF0  
                                 l3855 1D8A                                   l3847 1D4E  
                                 l3695 13E8                                   l3687 12E2  
                                 l3679 1296                                   l3599 0E92  
                                 l3839 1FE0                                   l2895 286E  
                                 l2887 2A62                                   l2991 16B0  
                                 l2975 15E2                                   l2983 1648  
                                 l2967 1574                                   l2959 140C  
                                 l2879 2B0C                                   l3919 230C  
                                 l3791 2ADE                                   l3783 2B5A  
                                 l3775 2B4A                                   l3759 25E2  
                                 l3767 2604                                   l3881 1E72  
                                 l3873 1E3C                                   l3865 1E04  
                                 l3857 1D9A                                   l3849 1D60  
                                 l3697 13EA                                   l3689 13DA  
                                 l2897 2878                                   l2889 2840  
                                 l2993 16BC                                   l2977 1622  
                                 l2969 157C                                   l3793 2608  
                                 l3785 2B5E                                   l3777 2B4E  
                                 l2899 29E2                                   l3883 1E84  
                                 l3875 1E4C                                   l3867 1E14  
                                 l3859 1DBE                                   l3699 13EC  
                                 l2995 16C4                                   l2979 1626  
                                 l3891 1A50                                   l3795 2626  
                                 l3787 2B60                                   l3779 2B52  
                                 l3885 1E88                                   l3877 1E5C  
                                 l3869 1E24                                   l2989 1650  
                                 l3893 1A5C                                   l3789 2AC0  
                                 l3797 2630                                   l3887 1E9A  
                                 l3879 1E62                                   l2999 16D4  
                                 l3895 1A68                                   l3799 2640  
                                 l3889 1EAE                                   l3897 1ACE  
                                 l3899 1B76                                   ?_isr 0001  
                                 _DATE 0091                                   STR_1 2FC0  
                                 STR_2 2FDC                                   STR_3 2FFB  
                                 STR_4 2FF8                                   STR_5 2FE7  
                                 STR_6 2FF1                                   STR_7 2FE2  
                                 STR_8 2FEC                                   STR_9 2F66  
                                 _T0CS 7EAD                                   u3000 09B2  
                                 u3001 09AE                                   u2210 2A54  
                                 u3010 09CC                                   u2211 2A50  
                                 u3011 09C8                                   u3020 09E6  
                                 u3100 0CA2                                   u2220 2A8E  
                                 u2300 15E2                                   u2205 2A34  
                                 u3021 09E2                                   u2221 2A8A  
                                 u2301 15DE                                   u3030 0A02  
                                 u3110 0CCA                                   u2230 285E  
                                 u2310 163C                                   u3031 09FE  
                                 u3111 0CC6                                   u2231 285A  
                                 u2311 1638                                   u2400 283E  
                                 u3040 0A90                                   u3200 0DAC  
                                 u3120 0CDC                                   u2240 2898  
                                 u2401 283A                                   u3041 0A8C  
                                 u3201 0DA8                                   u3121 0CD8  
                                 u2241 2894                                   u2250 2A1E  
                                 u2410 1BF6                                   u3050 0B6E  
                                 u3210 0DBE                                   u3130 0CFE  
                                 u2330 16B0                                   u2251 2A1A  
                                 u2411 1BF2                                   u3051 0B6A  
                                 u3211 0DBA                                   u3131 0CFA  
                                 u2331 16AC                                   u2180 2C06  
                                 u2420 1C36                                   u3060 0B82  
                                 u3300 10E6                                   u3220 0DD2  
                                 u3140 0D1C                                   u2340 16E8  
                                 u2324 1668                                   u2260 2538  
                                 u2500 2118                                   u2181 2C02  
                                 u2421 1C32                                   u3061 0B7E  
                                 u3301 10E2                                   u3221 0DCC  
                                 u3141 0D18                                   u2341 16E4  
                                 u2325 1662                                   u2261 2534  
                                 u2501 2114                                   u2190 2A32  
                                 u2350 28BC                                   u2430 1C74  
                                 u3310 10FE                                   u3230 0DD4  
                                 u3150 0D2E                                   u3070 0C20  
                                 u2270 2796                                   u2510 2152  
                                 u2191 2A2C                                   u2351 28B8  
                                 u2431 1C70                                   u3311 10FA  
                                 u3151 0D2A                                   u3071 0C1C  
                                 u2271 2792                                   u2511 214E  
                                 u2520 270E                                   u2360 28DA  
                                 u2440 1D1A                                   u3400 11D6  
                                 u3320 111C                                   u3240 0E92  
                                 u3160 0D46                                   u3080 0C30  
                                 u2280 27AE                                   u2600 21D6  
                                 u2521 270A                                   u2361 28D6  
                                 u2441 1D16                                   u3401 11D2  
                                 u3321 1118                                   u3241 0E8E  
                                 u3161 0D42                                   u3081 0C2C  
                                 u2281 27AA                                   u2601 21D2  
                                 u2530 272C                                   u2370 28F0  
                                 u2450 1D2C                                   u3410 12E2  
                                 u3330 112E                                   u3250 0EA4  
                                 u3170 0D64                                   u3090 0CA0  
                                 u2290 15AC                                   u2610 21EA  
                                 u2531 2728                                   u2371 28EC  
                                 u2451 1D28                                   u3411 12DE  
                                 u3331 112A                                   u3251 0EA0  
                                 u3171 0D60                                   u3091 0C9A  
                                 u2291 15A8                                   u2611 21E6  
                                 u2540 2748                                   u2380 2806  
                                 u2700 18F2                                   u3340 1146  
                                 u3260 0FE6                                   u3180 0D76  
                                 u2460 2054                                   u3420 299A  
                                 u3500 2640                                   u2620 21FE  
                                 u2541 2744                                   u2701 18EE  
                                 u3341 1142                                   u3261 0FE2  
                                 u3181 0D72                                   u2461 2050  
                                 u3421 2996                                   u3501 263C  
                                 u2621 21FA                                   u2390 282E  
                                 u2710 191A                                   u3350 1164  
                                 u3270 1020                                   u3190 0D8E  
                                 u2470 20B2                                   u3430 29DA  
                                 u3510 264E                                   u2630 221A  
                                 u2550 216C                                   u2711 1916  
                                 u3351 1160                                   u3271 101C  
                                 u3191 0D8A                                   u2471 20AE  
                                 u3431 29D6                                   u3511 264A  
                                 u2631 2216                                   u2551 2168  
                                 u2800 07E6                                   u2720 1992  
                                 u3360 1176                                   u3280 1030  
                                 u3600 1FB8                                   u3520 1EC6  
                                 u2480 20C8                                   u3440 2B7A  
                                 u2640 222E                                   u2560 2180  
                                 u4400 0266                                   u2801 07E2  
                                 u2721 198E                                   u3361 1172  
                                 u3281 102C                                   u3601 1FB4  
                                 u3521 1EC2                                   u2481 20C4  
                                 u3441 2B76                                   u2641 222A  
                                 u2561 217C                                   u4401 0262  
                                 u2810 0808                                   u2730 19F2  
                                 u3370 118E                                   u3290 10D4  
                                 u3610 1FCE                                   u3530 1ED6  
                                 u2490 20D6                                   u2650 2242  
                                 u2570 2194                                   u3450 25A2  
                                 u4410 02E6                                   u2387 27FC  
                                 u2811 0804                                   u2731 19EE  
                                 u3371 118A                                   u3291 10D0  
                                 u3611 1FCA                                   u3531 1ED2  
                                 u2491 20D2                                   u2651 223E  
                                 u2571 2190                                   u3451 259E  
                                 u4411 02E2                                   u2900 08C2  
                                 u2820 0826                                   u2740 1A3E  
                                 u3700 1E24                                   u3380 11AC  
                                 u3620 1FE0                                   u3540 1F0C  
                                 u2660 2256                                   u2580 21A8  
                                 u3460 25B8                                   u4500 04B0  
                                 u4420 030C                                   u2397 2824  
                                 u2901 08BE                                   u2821 0822  
                                 u2741 1A3A                                   u3701 1E20  
                                 u3381 11A8                                   u3621 1FDC  
                                 u3541 1F08                                   u2661 2252  
                                 u2581 21A4                                   u3461 25B4  
                                 u4501 04AC                                   u4421 0308  
                                 u2910 08DA                                   u2830 0838  
                                 u2750 073C                                   u2670 18B8  
                                 u3710 1E3C                                   u3390 11BE  
                                 u3630 1FFA                                   u3550 1F60  
                                 u2590 21C2                                   u3470 25CA  
                                 u4510 04C4                                   u4430 033E  
                                 u4350 009C                                   u2911 08D6  
                                 u2831 0834                                   u2751 0738  
                                 u2671 18B4                                   u3711 1E38  
                                 u3391 11BA                                   u3631 1FF6  
                                 u3551 1F5C                                   u2591 21BE  
                                 u3471 25C6                                   u4511 04C0  
                                 u4431 033A                                   u4351 0098  
                                 u2920 08F8                                   u2840 0850  
                                 u2760 074C                                   u2680 18CA  
                                 u3720 1E4C                                   u3640 200C  
                                 u3560 1F70                                   u3800 1BDE  
                                 u3480 25E2                                   u4600 0596  
                                 u4520 04D8                                   u4440 0366  
                                 u4360 00B6                                   u2921 08F4  
                                 u2841 084C                                   u2761 0748  
                                 u2681 18C6                                   u3721 1E48  
                                 u3641 2008                                   u3561 1F6C  
                                 u3801 1BDA                                   u3481 25DE  
                                 u4601 0592                                   u4521 04D4  
                                 u4441 0362                                   u4361 00B2  
                                 u2930 090A                                   u2850 086E  
                                 u2770 07BC                                   u2690 18DA  
                                 u3730 1E5C                                   u3650 1D60  
                                 u3570 1F80                                   u3810 229C  
                                 u3490 25FC                                   u4610 05AA  
                                 u4530 04EA                                   u4450 03AE  
                                 u4370 00F2                                   u2931 0906  
                                 u2851 086A                                   u2771 07B6  
                                 u2691 18D6                                   u3731 1E58  
                                 u3651 1D5C                                   u3571 1F7C  
                                 u3811 2298                                   u3491 25F8  
                                 u4611 05A6                                   u4531 04E6  
                                 u4451 03AA                                   u4371 00EE  
                                 _PEIE 7F96                                   u2940 0922  
                                 u2860 0880                                   u2780 07BE  
                                 u3740 1E72                                   u3660 1D9A  
                                 u3580 1F98                                   u3820 22D4  
                                 u4700 06BA                                   u4620 05C6  
                                 u4540 04FC                                   u4460 041A  
                                 u4380 016C                                   u2941 091E  
                                 u2861 087C                                   u3741 1E6E  
                                 u3661 1D96                                   u3581 1F94  
                                 u3821 22D0                                   u4701 06B6  
                                 u4621 05C2                                   u4541 04F8  
                                 u4461 0416                                   u4381 0168  
                                 u2950 0940                                   u2870 0894  
                                 u2790 07D4                                   u3750 1E84  
                                 u3670 1DD0                                   u3590 1FA8  
                                 u3830 230C                                   u4710 06CA  
                                 u4630 05FC                                   u4550 051C  
                                 u4470 0474                                   u4390 01CC  
                                 u2951 093C                                   u2871 088E  
                                 u2791 07D0                                   u3751 1E80  
                                 u3671 1DCC                                   u3591 1FA4  
                                 u3831 2308                                   u4711 06C6  
                                 u4631 05F8                                   u4551 0518  
                                 u4471 0470                                   u4391 01C8  
                                 u2960 0952                                   u2880 0896  
                                 u3760 1E9A                                   u3680 1E04  
                                 u3840 2334                                   u4720 06DC  
                                 u4640 0650                                   u4560 0540  
                                 u4480 0488                                   u2961 094E  
                                 u3761 1E96                                   u3681 1E00  
                                 u3841 2330                                   u4721 06D8  
                                 u4641 064C                                   u4561 053C  
                                 u4481 0484                                   u2970 096A  
                                 u2890 08B0                                   u3770 1EAE  
                                 u3690 1E14                                   u4730 06F6  
                                 u4650 0660                                   u4570 0550  
                                 u4490 049E                                   u2971 0966  
                                 u2891 08AC                                   u3771 1EAA  
                                 u3691 1E10                                   u4731 06F2  
                                 u4651 065C                                   u4571 054C  
                                 u4491 049A                                   u2980 0988  
                                 u3780 1ACE                                   u4740 0706  
                                 u4660 0670                                   u4580 0562  
                                 _RCEN 7E2B                                   u2981 0984  
                                 u3781 1ACA                                   u4741 0702  
                                 u4661 066C                                   u4581 055E  
                                 u2990 099A                                   u3790 1BB0  
                                 u4750 0718                                   u4670 0684  
                                 u4590 057E                                   u2991 0996  
                                 u3791 1BAC                                   u4807 2452  
                                 u4751 0714                                   u4671 0680  
                                 u4591 057A                                   u4680 0694  
                                 u4817 2468                                   u4681 0690  
                                 u4690 06A4                                   u4827 247C  
                                 u4691 06A0                                   u4767 23EE  
                                 u4777 2408                                   u4787 241E  
                                 u4797 2440                                   _RBPU 7F8F  
                                 _TMR0 0FD6                                   _RSEN 7E29  
check_weekly_event@current_day_of_week 0041                                   _date 00B1  
                                 _flag 00A0                            compare@temp 000D  
                                 _main 0012                                   _hour 0059  
                                 _once 00EE                                   _oper 00F1  
                                 _wait 008F                                   _time 00CB  
                                 _year 004E                                   fsr1h 0FE2  
                                 fsr2h 0FDA                                   indf1 0FE7  
                                 indf2 0FDF                                   fsr1l 0FE1  
                                 fsr2l 0FD9                                   btemp 005B  
                                 _stop 0083                                   prodh 0FF4  
                                 prodl 0FF3                                   start 000E  
                         ?_read_EEPROM 0001                   ??_init_matrix_keypad 0005  
                         ___param_bank 0000                         clcd_write@byte 0006  
                    _check_daily_event 2C4E                          _i2c_rep_start 2C3E  
                        ??_i2c_rx_mode 0005                                  ??_isr 0001  
                         ?_init_ds1307 0001                    calculate_duration@i 002A  
                  calculate_duration@j 0026                    calculate_duration@k 0011  
                   ?_check_daily_event 0001                         ??_display_date 000A  
                                ?_main 0001                           ?_read_ds1307 0001  
                                _ACKEN 7E2C                                  _ACKDT 7E2D  
                       ??_display_time 000A                                  _BCLIF 7D0B  
                                STR_10 2FD5                                  STR_11 2F59  
                                STR_12 2F63                                  STR_20 2FF5  
                                STR_13 2FF8                                  STR_21 2F7B  
                                STR_30 2F67                                  STR_14 2FFB  
                                STR_22 2F8A                                  STR_31 2FF5  
                                STR_23 2FA8                                  STR_15 2F6A  
                                STR_32 2F67                                  STR_16 2F65  
                                STR_24 2F99                                  STR_25 2FF5  
                                STR_17 2FF5                                  STR_33 2FB7  
                                STR_26 2F67                                  STR_18 2F67  
                                STR_34 2FC6                                  STR_19 2F67  
                                STR_27 2FF5                                  STR_28 2F67  
                                STR_29 2FF5                                  _AM_PM 0050  
                      __end_of___lwdiv 2768                        __end_of___lwmod 290E  
                         ?_init_config 0001                                  i2l761 1810  
                                i2l763 1882                                  i2l765 18A0  
                                i2l759 1818                                  _HOURS 008D  
                                _PORTB 0F81                                  _PORTD 0F83  
                                _TRISB 0F93                                  _TRISC 0F94  
                                _TRISD 0F95                                  _SSPIF 7CF3  
                  ??_check_daily_event 0040                           ?_init_timer0 0001  
                  ___lmul@multiplicand 0009                  ??_check_event_trigger 0043  
                      __end_of_compare 1BE0                           compare@temp2 0015  
                                _count 0056                                  _match 007D  
                                _bytes 00EC                                  _oper1 0058  
                                _month 004C                                  main@i 00DC  
                                main@j 00E0                                  main@l 00DA  
                                main@x 00E4                                  _write 1BE0  
                                tablat 0FF5                                  ttemp5 005C  
                                ttemp6 005F                                  ttemp7 0063  
                                status 0FD8                                  wtemp8 005C  
                      __end_of_strcopy 299C                       _check_event_time 2012  
            __end_of_check_daily_event 2C54                       init_ds1307@dummy 000E  
                           _i2c_no_ack 2C54                        __initialization 2484  
                       ?_i2c_rep_start 0001                           __end_of_main 0728  
                     __end_of_i2c_idle 2C0A                       __end_of_i2c_read 2C22  
                     __end_of_i2c_stop 2C36                                 ??_main 00D4  
                        __activetblptr 0002                    __end_of_i2c_rx_mode 2C4E  
                         _write_EEPROM 29E0                                 _ADCON1 0FC1  
                     read_switches@key 0057                                 _T08BIT 7EAE  
                               ?_write 0001                                 _AM_PM2 009C  
                               i2l4141 16F6                                 i2l4151 1770  
                               i2l4143 1704                                 i2l4161 17EA  
                               i2l4153 1798                                 i2l4145 1724  
                               i2l4171 187A                                 i2l4163 1800  
                               i2l4155 17D0                                 i2l4147 174E  
                               i2l4173 1886                                 i2l4165 1808  
                               i2l4157 17D2                                 i2l4149 175E  
                               i2l4175 189E                                 i2l4159 17D8  
                               i2l4167 1820                                 i2l4169 1832  
                         _write_ds1307 2B84                                 _TMR0IE 7F95  
                               _TMR0IF 7F92                                 _TMR0ON 7EAF  
                               _SSPADD 0FC8                                 _TRISB0 7C98  
                               _TRISC3 7CA3                                 _TRISC4 7CA4  
                               _TRISE0 7CB0                                 _TRISD7 7CAF  
                        ?_current_date 0001                                 _SSPBUF 0FC9  
                     __end_of_get_date 26F4                       __end_of_get_time 2590  
                               ___lmul 2840                              ??___lwdiv 0009  
                            ??___lwmod 0009                       __end_of_init_i2c 2BE6  
                               clear_0 24C8                                 clear_1 24D4  
                               clear_2 24E0                                 clear_3 24EC  
                               clear_4 24F8                                 _minute 0054  
                         _calender_reg 0070                                 isa$std 0001  
                     __end_of_scan_key 2260                                 _strcmp 2768  
                               _strcpy 2A5A                              ??_compare 000F  
                     __end_of_set_date 140C                           __pdataCOMRAM 0058  
                     __end_of_set_time 100C                           __mediumconst 2F58  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8                                 write@i 0012  
                               write@j 0016                              ??_strcopy 0009  
              calculate_duration@i_470 0028                         ??_current_date 0005  
                           __accesstop 0060                __end_of__initialization 24FE  
                 __end_of_display_date 2AEA                   __end_of_display_time 2680  
                        ___rparam_used 0001                           _change_field 00F0  
                      ??_i2c_rep_start 0005                            ?_i2c_no_ack 0001  
                       __pcstackCOMRAM 0001                           __pidataBANK0 2C22  
                          _i2c_rx_mode 2C46                          __end_of_write 1D4E  
                  check_event_time@ptr 0032                      __end_of_i2c_start 2C3E  
                    __end_of_i2c_write 2C16                       write_EEPROM@data 000A  
                              ??_write 000E                             __pbssBANK0 0060  
                           __pbssBANK1 0100                             __pbssBANK2 0200  
                           __pbssBANK3 0300                              ?_i2c_idle 0001  
                            ?_i2c_read 0001                              ?_i2c_stop 0001  
                           _clcd_print 27D4                             _clcd_putch 2BA2  
                           _clcd_write 2A20                        read_ds1307@data 0007  
                              ?___lmul 0005                      read_switches@once 00F2  
                              _ACKSTAT 7E2E                         ___lmul@product 000D  
                              ?_strcmp 0005                                ?_strcpy 0005  
                       _GOTO_SET_EVENT 1D4E               __end_of_check_event_time 2158  
                              _MINUTES 008B                                _SECONDS 0089  
                              _SSPCON1 0FC6                              ?_get_date 0001  
                            ?_get_time 0001                          _read_switches 2590  
                           ??_i2c_idle 0005                             ??_i2c_read 0005  
                           ??_i2c_stop 0005                              ?_init_i2c 0001  
                            ?_scan_key 0001                                __Hparam 0000  
                              __Lparam 0000                              ?_set_date 0001  
                            ?_set_time 0001             __end_of_calculate_duration 16F4  
                           _dur_minute 00EA                                ___lwdiv 26F4  
                              ___lwmod 28AA                 __end_of_GOTO_SET_EVENT 1EB4  
                              __pcinit 2484                                __ramtop 0600  
                              __ptext0 0012                                __ptext1 2590  
                              __ptext2 2158                                __ptext3 2B3E  
                              __ptext4 2BBA                                __ptext5 2BE6  
                              __ptext6 2BD0                                __ptext7 290E  
                              __ptext8 23DE                                __ptext9 2608  
                 __end_of_current_date 23DE            __end_of_check_event_trigger 2336  
                  _check_onetime_event 2B64                                _compare 1A50  
                              _dur_sec 0095                      __end_of_init_clcd 2484  
                              _temp_AM 0200                                _temp_PM 0300  
                    __end_of_set_EVENT 0BF8                         ?_read_switches 0001  
                           ??_get_date 0008                                _strcopy 2956  
                           ??_get_time 0008                         __pintcode_body 16F4  
                 end_of_initialization 24FE                             ??_init_i2c 0005  
                        __Lmediumconst 2F58                   ?_check_onetime_event 0001  
                              int_func 16F4                             ??_scan_key 0005  
                          ?_clcd_print 0007                            ?_clcd_putch 0007  
                          ?_clcd_write 0005                             ??_set_date 000E  
                           ??_set_time 000E                                postdec1 0FE5  
                    ??_get_current_day 0013                                postinc0 0FEE  
                              postinc1 0FE6                                postinc2 0FDE  
                       isr@sec_2_count 0060                             _view_ALARM 18A4  
                          view_ALARM@k 0010                                strcmp@l 0005  
                              strcmp@r 0007                                strcpy@d 0009  
                       isr@sec_5_count 0064                        ?_GOTO_SET_EVENT 0001  
                           _timer_flag 009D                              _PORTBbits 0F81  
                         _display_date 2AC0             get_current_day@current_day 0015  
                         _display_time 2608                          i2c_write@data 0005  
                           _view_event 0100                  ??_check_onetime_event 0040  
           __end_of_check_weekly_event 29E0                             main@count2 00D8  
                         ??_i2c_no_ack 0005                           ?_i2c_rx_mode 0001  
                       __end_of___lmul 28AA                          __pidataCOMRAM 2C5A  
                       __end_of_strcmp 27D4                         __end_of_strcpy 2A90  
                  start_initialization 2484                        ??_read_switches 0005  
                            _i2c_start 2C36                            __end_of_isr 18A4  
                            _i2c_write 2C0A                     __end_of_i2c_no_ack 2C5A  
                  read_EEPROM@address1 0006                   check_event_trigger@i 0046  
                        ??_read_EEPROM 0006                  __end_of_i2c_rep_start 2C46  
                             ??___lmul 000D                          ??_init_ds1307 000E  
                          __pdataBANK0 00E8                            ?_view_ALARM 0001  
                        ??_read_ds1307 0006                               ??_strcmp 0009  
                             ??_strcpy 0009            read_switches@detection_type 0005  
                        ??_init_config 000F                          ??_init_timer0 0005  
                          __pbssCOMRAM 0048                      ?_check_event_time 002C  
                        __pcstackBANK0 00D4                             ?_i2c_start 0001  
                           ?_i2c_write 0001                     ??_check_event_time 002E  
                         _duration_var 009B                           _current_date 2336  
                      read_EEPROM@data 0007                       ___lwdiv@dividend 0005  
                            __pintcode 0008                          __pmediumconst 2F58  
                   read_ds1307@address 0006                               ?___lwdiv 0005  
                            _clock_reg 0074                               ?___lwmod 0005  
                  __end_of_read_EEPROM 2B3E                               ?_compare 000B  
                        ?_write_EEPROM 000A                    __end_of_init_ds1307 2956  
                   _calculate_duration 140C                              _event_day 007B  
                  __end_of_read_ds1307 2B14                       ___lwdiv@quotient 0009  
                            _duration_ 006C                              _init_clcd 23DE  
                  __end_of_init_config 2B64                               ?_strcopy 0005  
                        ?_write_ds1307 000C                    __end_of_init_timer0 2BD0  
                  ?_calculate_duration 0011                        _get_current_day 2A90  
                            _set_EVENT 0728                              _seconds_2 0079  
                            _seconds_5 0077                           ??_clcd_print 000A  
                         ??_clcd_putch 0008             __end_of_init_matrix_keypad 2BF8  
                         ??_clcd_write 0006                               i2u430_40 1798  
                             i2u430_41 1794                               i2u431_40 17EA  
                             i2u431_41 17E6                               i2u432_40 1800  
                             i2u432_41 17FC                               i2u433_40 1832  
                             i2u433_41 182E                               i2u434_40 187A  
                             i2u426_40 1704                               i2u434_41 1876  
                             i2u426_41 1700                               i2u427_40 1724  
                             i2u427_41 1720                               i2u428_40 174E  
                             i2u428_41 174A                               i2u429_40 1770  
                             i2u429_41 176C                       ??_GOTO_SET_EVENT 001A  
                 ??_calculate_duration 0013                  clcd_write@control_bit 0005  
                            main@i_382 00E6                              main@i_375 00E2  
                            main@j_381 00DE                         ??_write_EEPROM 000B  
                          ??_i2c_start 0005                     __end_of_clcd_print 2840  
                          ??_i2c_write 0005                     __end_of_clcd_putch 2BBA  
                   __end_of_clcd_write 2A5A                             ?_init_clcd 0001  
                    ___lmul@multiplier 0005                              copy_data0 2498  
                       ??_write_ds1307 000D                               _i2c_idle 2BF8  
                             _i2c_read 2C16                             ?_set_EVENT 0001  
                             _i2c_stop 2C2E             calculate_duration@temp_sec 0022  
                         _seconds_flag 0099                               __Hrparam 0000  
                          _read_EEPROM 2B14                               __Lrparam 0000  
                   _check_weekly_event 299C                            _event_field 00EF  
                          _init_ds1307 290E                            _event_count 0048  
                          _read_ds1307 2AEA                      check_event_time@i 003C  
                    check_event_time@j 003E                            _init_config 2B3E  
                  ?_check_weekly_event 0001                    write_ds1307@address 000D  
                          _init_timer0 2BBA                __end_of_get_current_day 2AC0  
                      ___lwdiv@divisor 0007            __end_of_check_onetime_event 2B84  
                      ___lwdiv@counter 000B                               __ptext10 2AC0  
                             __ptext11 1A50                               __ptext20 2012  
                             __ptext12 2956                               __ptext21 2768  
                             __ptext13 2260                               __ptext30 2B84  
                             __ptext22 250C                               __ptext14 299C  
                             __ptext31 1D4E                               __ptext23 2AEA  
                             __ptext15 2680                               __ptext40 2C3E  
                             __ptext32 18A4                               __ptext24 140C  
                             __ptext16 2A90                               __ptext41 2C16  
                             __ptext33 0728                               __ptext25 2A5A  
                             __ptext17 2336                               __ptext42 2C46  
                             __ptext34 1BE0                               __ptext26 2840  
                             __ptext18 2B64                               __ptext43 2BF8  
                             __ptext35 29E0                               __ptext27 1EB4  
                             __ptext19 2C4E                               __ptext44 2C54  
                             __ptext36 2B14                               __ptext28 0BF8  
                             __ptext45 28AA                               __ptext37 2C0A  
                             __ptext29 100C                               __ptext46 2BA2  
                             __ptext38 2C2E                               __ptext47 27D4  
                             __ptext39 2C36                               __ptext48 2A20  
                             __ptext49 26F4                               _get_date 2680  
                             _get_time 250C                             strcpy@dest 0005  
                             _init_i2c 2BD0                               _dur_hour 0097  
                           strcopy@ptr 0005                             strcopy@qtr 0007  
                             _duration 00A1                      _GOTO_SET_TIMEDATA 1EB4  
                             _scan_key 2158                             write@i_307 0014  
                 ??_check_weekly_event 0040                     ?_GOTO_SET_TIMEDATA 0001  
                             _set_date 100C                               _set_time 0BF8  
                             isa$xinst 0000                               int$flags 005B  
                         ??_view_ALARM 000A                    ??_GOTO_SET_TIMEDATA 0010  
                             compare@a 000B                               compare@i 0027  
                             compare@j 0029                   write_EEPROM@address1 000D  
                             isr@count 0068                            ??_init_clcd 0007  
                __end_of_read_switches 2608                               intlevel2 0000  
                        write_EEPROM@i 000B              __end_of_GOTO_SET_TIMEDATA 2012  
                          ??_set_EVENT 0018                       ___lwmod@dividend 0005  
                   __end_of_view_ALARM 1A50                              strcpy@src 0007  
                 __end_of_write_EEPROM 2A20          calculate_duration@temp_minute 001E  
                 __end_of_write_ds1307 2BA2                        ___lwmod@divisor 0007  
                             strcopy@i 0009                        ___lwmod@counter 0009  
                     ?_get_current_day 0011                       write_ds1307@data 000C  
